

Information Sources:
--------------------
 - BOME implementation notes.txt - This text file
 - FAQ: both user FAQ and Technical FAQ
 - DJ tech tools technical discussion: http://forum.djtechtools.com/showthread.php?t=96024
 

Correct Initialization Sequence:
--------------------------------
 - Correct Initialization Sequence:
   - First DDJ device
   - then BOME
   - then Traktor
   - then CMDR (if needed)
 - Restarting
   - you can now close and reopen traktor at will.
   - do not close either BOME or CMDR (if it is running)
 - Any Problems? 
   - check "port closed" on BOME log window (click "outgoing")
   - press shift+quantize (=wake up) to force a "send monitor state"


User FAQ / Caveats:
-------------------
  Q0: Do I really need BOME Professional?
  A0: Yes. Please download a fully functional trial version at https://www.bome.com/products/miditranslator#downloads
  Everything will work for 30minutes. At that time you can just restart BOME to keep going.
  
  If you REALLY don't want jog screens, but want the regular mapping improvements, then you have to manually change the device from BMT1 to DDJ-1000 (both IN and OUT ports) in every mapping page in the controller manager. 
 
  ----
   
  Q1: Are Waveforms, Artwork and Cue scope supported?
  A1: MIDI mapping screens do not have these features. It only display numbers. This is the same case as DJayPro (demo https://www.youtube.com/watch?v=jCUpDQD7i_M). Only reversed-engineered HID mode that VirtualDJ is able to show waveforms and pictures (https://www.youtube.com/watch?v=z8yeW9ONtGI).
 
  ----
   
  Q2: The BPM and Percentage values are very close, but not exactly the same, of what it displayed on the laptop screen
  A2: Reason: Traktor lacks high-resolution MIDI out messages. Even so, a trick was already implemented to improve accuracy 10x times (compared to a naive mapping).
  
  T2: Traktor receives 14-bit messages just fine (combo messages), but cannot send it. 
  This was confirmed by hacking CMDR to generate a valid TSI of a combo message - nothing got sent by Traktor.
  
  As a workaround, accuracy was improved 10x by creating 10x separate 7-bit ranges, each on a separate CC, and reacting to only a part of the whole range, eg: 0.0->0.1; 0.1->0.2; 0.2->0.3; ...
  This lead to the next problem: when the value crosses multiple ranges, potentially all, then all of them independently react with their extreme values. Note that these output values also follow a non-deterministic order.
  This was addressed as follows: collect all outputs until a 10ms timer expires, and ignore the extreme values, keeping only the final intermediate value (which can come in any order).
  If really going to an extreme value, in particular 0.0 or 1.0, collect that with 11th low resolution CC that encompasses the whole range.
  After the timer expires, process the single value as normal
  
  ----
  
  Q3: The time elapsed/remain is approximate to what is displayed on the laptop screen. Ans/Or, the seconds advances either too fast or too slow.
  A3: Reason: Traktor doesn't send the absolute minutes:seconds position, only the relative percentage position instead. 
  The mapping guesses the total track length using an internal clock. 
  press shift+quantize (="Wake up") while the track is playing to reset the measurement process.
  
  T3: even with the high-resolution trick explained above, it is still a relative position. 
  To transform this into an absolute value, we implement a master clock in BOME with a timer every 100ms. On the seek position code we measure how many ticks elapsed when 0.5% of the track has elapsed without any jumps or interruptions.
  When we have this value, a simple multiplication by 200 gives the estimated track length, to which is then trivial to calculate elapsed/remain values in MM:SS format.  
  As mentioned, pressing shift+quantize triggers a "send monitor state" command that resends all values, restarting the measurement process.
  
  ---
  
  Q4: Needle position sometimes jumps around after scratching.
  A4: Traktor lacks a "jog turn out message", so this is emulated in BOME. Please join the DJTT discussion to improve this in the next version.
  
  T4: The best message to implement the needle position is "beat phase". Significant amount of time was spend using this message. It only sends the -45deg..45deg information. This is accumulated internally to a 0deg..360deg value that is displayed for the user. 
  When the user seeks away, we just get a new 45deg position, unlinked to the actual 360 position. (this could be improved by merging with the 1000 points seek relative position descried above).
  Instead, we implemented the full state machine of the deck (stopped, playing, cueing), interpreted the jog touch and jog turn messages directly from the device (instead of traktor), and advanced the needle using the internal fake clock.
  
  ---
  
  Q5: Needle using Slip mode, Reverse, Reverse Slip features is not optimal
  A5: The needle for these features will be implemented on the next version.  
  
  ---
  
  Q6: Only decks 1 and 2 have Jog screens. Deck 3 and 4 have no screens!
  A6: This is quite easy to fix, but is laborious. When users report that the mapping is good for decks 1 and 2, this will be ported to 3 and 4 as well
  T6: BOME midi translator lacks arrays, so everything is emulated with groups of global variables. Examples:  1234, ABCD, EFGH, etc 
  
  ---
  Q7: Key adjust is displayed correctly (-12..+12), but the key value is always "C"
  A7: Traktor does not have any command to output the absolute key value. Even if that would be the case, Pioneer would display that in non-Camelot codes.
  
  ---
  Q8: Small loops (1/2, 1/4, etc) are displayed as "zero"
  A8: Loops and jump sizes are displayed on the minutes/seconds digits.
  
  ---
  Q9: Does having BOME mapping reduces the reliability of this mapping?
  A9: BOME is MIDI only. The audio path is completely unchanged. So in the worst case only the controls could be affected. Even in this case, BOME only processes the messages going to the DDJ (ie, the LEDs).
  
  
   
Jog Needle State machine:
-------------------------
  inputs: 
    - play/pause
    - cue
    - jog touch
  
  state machine: 
    stopped -> [play] -> playing 
    playing -> [/play] -> paused 
    paused -> [play] -> playing 
        
    stopped -> [cue] -> cueing
    cueing -> [/cue] -> move to front -> stopped
    
    playing -> [cue] -> move to front -> stopped
    paused -> [cue] -> set new cue -> stopped

    playing -> [jog] -> jogging
    jogging -> [/jog] -> playing
    
              
   states: 
    stopped: 0
    playing: 1
    cueing: 2
 


MIDI routing:
-------------
   - All messages are routed by default (main project / settings / midi router)
   - processed messages use "swallow" to not be broadcasted
   - all processed messages are on the BMT1->DDJ direction
      - exception: jog turn is on the DDJ->BMT1 direction
   - all outputs on the traktor side need "blend"   
   - "mod 360" calculations: after mod, negative values need to be made positive by adding 360
     - oo = oo % 360
     - if oo < 0 then oo = oo + 360
  
   - Main path:    Traktor -> (BMT1) -> bome -> (DDJ-1000)
   - Reverse path: Traktor <- (BMT1) <- bome <- (DDJ-1000)


   I believe the unexpected problem here is that the “swallow” flag is only activated if both incoming trigger AND the Rules section pass. If “exit rules, skip Outgoing Action” is hit, then even if “swallow” is checked, it won’t swallow from this translator. You can, as you’ve done in your test preset, activate “swallow” from a different translator without rules and without outgoing action. 
  In other words, the swallow flag is only evaluated when the Outgoing Action is executed (even if it\'s the \"None\" action).

BOME keyboard shortcuts:
------------------------
  ctrl+shift+A - Re-initilialize BOME variabes
  ctrl+shift+Z - stop clock
  ctrl+shift+X - start clock - very fast
  ctrl+shift+C - start clock - slow
  ctrl+shift+V - start clock - very slow
  
  ctrl+shift+F4 - Bome debug
  
  
Traktor keyboard shortcuts (now disabled):
------------------------------------------
  ctrl+shift+A/S: Tempo adjust
  ctrl+shift+D/F: Tempo range
  1 - play/pause
  
  ctrl+shift+`    - "show values"  FX4
  ctrl+shift+F1   - "shift1"       FX1
  ctrl+shift+F2   - "shift2"       FX2
  ctrl+shift+F3   - cycle mode     FX3
  ctrl+shift+F4   - toggle debug
  
  ctrl+shift+P    - send monitor state
  shift+quantize  - send monitor state  

  
BOME variables:
---------------
  Abecedario: https://i.pinimg.com/originals/d0/ff/a6/d0ffa62f47ddae6abc349b9941ba14f9.png

  BOME Local:
    OO
    PP
    QQ
    RR
    SS
    TT
    UU
    VV
    WW
    XX

  BOME Global:
    ga-g9, ha-h9, ia-i9, ja-j9, ka-k9, la-l9, ma-m9, na-n9
    
    ya-y9, za-z9

  Fake array variables (per channel):
    1234   
    5678
    ABCD   
    
    EFGH
    IJLM
    OPQR
    STUV
    
    XYWZ    
    
  BOME Global variables (do not follow array notation):
    HZ / HY / ...
        
        
 

Traktor modifiers:
------------------ 
  M1 = shift1 (hold style) -> see loop size
    press "main shift"
    
  M2 = shift2 (hold style) -> no change
    press "memory"
    
  M3 = toggle elapsed / remain
    press "memory" + "master tempo"
  
  M4 = reset screens
    press "shift"+"quantize"

    
      
MODE CYCLE:
-----------
  CYCLE MODE: variable "za"  
    0: elapsed
    1: remain
    
    
  PREVIEW MODE: variable "ga" 
    0: none
    1: shift1 -> previewing loop value
    2: shift2 -> previewing total time   (disabled)  -> M2 = handled by traktor
    
    3: timer  -> previewing loop/move values (TIMER)
    4: loop active: 
    
  
 
CLOCK IMPLEMENTARION:
---------------------
  CLOCK:
   master debug             "hw"   (global)
   10ms ticks per second:   "hy"   (global)
   current clock value:     "hz"   (global)
   REFERENCE clock value:   "ka"

   clock units per SEEK:    "ha"   (lock = "ho")
   which step we are:       "ia"

 SEEK POSITION:
   NEW location (HR):       "na"   ("no" == lock)
   PREVIOUS location:       "ja"
   REFERENCE location:      "ya"

 OUT CC:
    calculated timestamp:   "ma"   (not used for calculations)

    
 30ms timer (for BPM):        "hs"  (lock)
 30ms timer (seek):           "he"  (lock)   (THIS IS TO MERGE!)
     

     
  
CCs messages sent FROM traktor TO BOME:
---------------------------------------
JOG NEEDLE:
  available: "ys" 
             
   
  IN CUE:           CC 68 -> "z1" (cue being pressed)  
  IN PLAY           CC 77 -> "zo" (playing)
  IN JOG touch      CC 78 -> "zs" 
  IN JOG turn       CC 79 -> "y1"   (accumulated every 10ms)
 
  OUT jog needle          -> "y5" (360 deg JOG)
  OUT cue needle          -> "z5" (360 deg CUE)
  
  STATE deck              -> "yo"  (playing, cueing, paused, playing+jog, ...)
 

BPM & SEEK:
  IN seek position: CC 90..99   -> na/no/ja
  IN tempo adjust:  CC 101..108 -> g1/g5 (=100)
  IN BPM value:     CC 110..120 -> h1/h5 (=100)

  IN tempo range:   CC 66 -> "i1"
    
  CALC tempo perc:       -> "j1"/"j5" (int) -> k1 (ext)
  CALC new bpm:          -> "m1"/"m5" (int) -> k5 (ext)
    
    

  IN shift1:        CC 69  -> "ga"
  IN shift2:        CC 73  -> "ga"
  IN cycle time mode:    CC 74  -> "za"
  IN debug          CC 75  -> (NONE)   DEBUG DEBUG
  IN loop active    CC 76  ->   


  IN loop size:     CC 70 -> "l1" (external)
  IN move size:     CC 71 -> "n1" (external)
                         -> "n5" ("boolean is loop")

                         
  IN RESET WAKE UP  CC 80 ->  (reset)
  IN Key adjust     CC 81 ->  (direct)

                         
              
              
                         
NEW CCs - High resolution - sent to BOME:
-----------------------------------------
 SEEK POSITION:     CC 90..99
    - NEW:          "na"  
    - LOCK:         "no"
    - PREVIOUS:     "ja"

    CC 90  0%..10%
    CC 91 10%..20%
    CC 92 20%..30%
    (etc)
    
    
 TEMPO ADJUST:    CC 101..108 -> g1/g5 (=100)
    - NEW VALUE:    "g1/g5"
    - LOCK:         "go"
    - PREVIOUS:     "gs"

    CC 101 -1..-0.75
    CC 102 -0.75..-0.5
    CC 103 -0.5 -0.25
    CC 104 -0.25 0
    CC 105  0  0.25
    CC 106  0.25 +0.50
    CC 107  0.50 +0.75
    CC 108  0.75 +1.0
    
    
    
 BPM VALUE: CC 110..120 -> h1/h5 (=100)
    - NEW:          "h1/h5"
    - LOCK:         "ho"   (0 = none; 1 = LR ; 2 = HR)
    
 
    CC 110 -   0..75  (75)
    CC 111 -  75..100 (25)
    CC 112 - 100..110 (10)
    CC 113 - 110..120 (10)
    CC 114 - 120..125 (5)
    CC 115 - 125..130 (5)
    CC 116 - 130..135 (5)
    CC 117 - 135..140 (5)
    CC 118 - 140..145 (5)
    CC 119 - 145..155 (10)
    CC 120 - 155..200 (45)
    
    CC 121 - 0..200 (200)  FALLBACK FOR BPM CORNER CASES

     
jog dynamics:
-------------
  vinyl ON:   CC 34
    - small movements - YES
    
  vinyl OFF:  CC 35
    - small movements - NO!  <<<< (only big movemnts)
  
  SIDE TURN:  CC 33
  
  touch:  note 54
    -> the problem is that this is sent in all cases!
  
    P1 M4 -> global vinyl mode.
  
 

  BOME SIDE:
    "ys" accumulated jog value, with full ticks resolution.
      "tt" how many degrees to send
      "rr" remainer degress for next iteration
    "y5" TO SEND needle position (360 deg)
    
     
   utilities mode:
     - NO USB cable
     - press left play+shift + turn on device
     - left slip reverse OFF = automatic
     - left slip reverse ON  = always MIDI
     
    
  new jog modifiers - per deck:
     jog touch -> set M5..M8
    ~jog touch -> always accept
    jog turn 34 -> set M5
    jog turn 35 -> reset M5
    
     
     
ddj-1000 outputs:
-----------------
  shift: 
    modifier 1 -> 0..1 (tk) -> 0..1 (midi) -> global varible (bome)
  tempo range: (COM SHIFT)
    0..13 (TK) -> 0..13 (midi) -> 2..100 (bome, integer) -> speed (ff_2.2) 
  tempo position:
    -1..+1 (TK) -> 0..100 (midi) -> -1..+1 (bome, fractional) -> speed (ff_2.2)
  stable bpm: (COM SHIFT)
    100..200 (TK) -> 0..100 (midi) -> 100..200 (bome, fractional) -> bpm (ff_3.1)
  actual bpm:
    -> tempo_position * bpm (bome, fractional) -> speed (ff_3.1)

  beat phase:
    -0.5..0.5 -> 0..90 (midi, relative) -> 0..360 (bome, incremenatl) -> ff_2.2 
  cue:
    0 (off)..127 (on) -> set cue to current position





      
TIMERS:
-------
  loop/tempo etc -> "calc1" -> "send_bpm1" -> bpm+needle value
                                           -> "send_timestamp1" (falltrough)
  position -> "calc_clock1" -> (merge) -> "calc_clock2" -> "send_timestamp1" -> minutes/seconds value
  
  
   
  
  
CCs DDJ-1000 SCREENS:  (https://www.youtube.com/watch?v=RnHqnGWEXfE&t=637s)
---------------------
  needle position: CC 20: 0..2 / 0..0x67
  cue position:    CC 23: (same)                      (to hide: send 0x7f 0x7f)
  bpm value:       CC 21: 0..0x4E / 0..0x0F
  playing speed:   CC 22: (same)    
    
  current minute:  note 66 (F#4)
  current second:  note 67 (G4)
  time mode:       note 68 (G#4)   (elapsed = 0 ; remain = -1)
    
  key value:       note 73 (C#5)   (0..0x18)
  key change:      note 74 (D5)    (1..0x19)
    

    
CCs DDJ-1000 TO KEEP:
---------------------
  led_normal = [0, 2, 4, 5, 7, 11, 15, 19, 31, 33, 34, 35, 38, 41]
  led_screens = [20,21,22,23]
  led_bome = [51,52,53,54,55,56]



more notes:
-----------
  local variables: oo..xx 
  global variables: gg, yy, zz

  G = exact values, from inputs
  Y = derived values

  CC3 - tempo range
    0..13 -> same
      --> 2%..25%   (%, integer)  -->  G3
     
  CC1 - G1 - tempo adjust
    -1..+1 -> 0..100  (%, fake floating point)
      z1 = sign    (1 == "+"; 2 == "-")
      z2 = value   0..100 (on the half side)

    -->  calculated tempo percentage (%)
      y1 = sign
      y2 = value     

      y3 = 0..20000

    
  CC2 - G2 - current bpm 
    100..200 -> 0..100  
      -> 100..200  (bpm, integer)

     --> Y2 = calculated BPM


how to convert ranges:
----------------------
  Input  = 0..127
  Output = 20..90

  O = int(( I * out_range) / in_range) + offset)
    = I * 70 / 127 + 20
    (to add more precision: use 1E3 before and after)
  
  
Pioneer:
--------
  needle position: 
    0..360deg = 14 bit value integer
    MSB - 0x2
    LSB - 0x67
    
  bpm value:
    0.0 .. 999.9 bpm
    MSB - 0x4E  = 19_998
    LSB - 0x0F
    
  play speed:
    -100.0% .. 100.0%  
    MSB: SAME
    LSB: SAME
    
    
EXISTING CCs already sent by the DDJ mapping:
---------------------------------------------
  CC 1 ->   ???
  CC 2 ->  channel level meter

  y5 = needle 
  z5 = cue positon
  


future work:
 - needle show slip mode

bugs:
 - memory - block master tempo!
 - keys mal: 1,4, 7, 10, 
 
  

  

  
  
  

