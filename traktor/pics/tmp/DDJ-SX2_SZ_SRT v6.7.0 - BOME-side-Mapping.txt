Project: DDJ-SX2_SZ_SRT v6.7.0 - BOME-side-Mapping
 Author:   Pedro Estrela
 Contact:  pedro.estrela@gmail.com
 Website:  www.djestrela.com
 Copyright:Pedro Estrela
 Comments:
DDJ-1000 screens implemeted in BOME.
See technical info on file "BOME implementation notes.txt".
See the technical discussion on the DJTT forum: http://forum.djtechtools.com/showthread.php?t=96024

 Project MIDI IN ports:   From Traktor
 Project MIDI OUT ports:  To DDJ
_____________________________________________________________
[x] Preset 0: INIT / MASTER CLOCK

[x] Translator 0.0: OPEN PROJECT
Incoming: Project Opened
Outgoing: One-shot timer "global_init": 0 ms delay

[x] Translator 0.1: PANIC STOP
Incoming: Enable Processing
Outgoing: One-shot timer "global_init": 0 ms delay

[ ] Translator 0.2: ------
Incoming: (none)
Outgoing: (none)

[x] Translator 0.3: Set Global Variables - ALL TO ZERO
Incoming: On timer "global_init"
Rules:
  
  g0=0
  g1=0
  g2=0
  g3=0
  g4=0
  g5=0
  g6=0
  g7=0
  g8=0
  g9=0
  ga=0
  gb=0
  gc=0
  gd=0
  ge=0
  gf=0
  gg=0
  gh=0
  gi=0
  gj=0
  gk=0
  gl=0
  gm=0
  gn=0
  go=0
  gp=0
  gq=0
  gr=0
  gs=0
  gt=0
  gu=0
  gv=0
  gw=0
  gx=0
  gy=0
  gz=0
  h0=0
  h1=0
  h2=0
  h3=0
  h4=0
  h5=0
  h6=0
  h7=0
  h8=0
  h9=0
  ha=0
  hb=0
  hc=0
  hd=0
  he=0
  hf=0
  hg=0
  hh=0
  hi=0
  hj=0
  hk=0
  hl=0
  hm=0
  hn=0
  ho=0
  hp=0
  hq=0
  hr=0
  hs=0
  ht=0
  hu=0
  hv=0
  hw=0
  hx=0
  hy=0
  hz=0
  i0=0
  i1=0
  i2=0
  i3=0
  i4=0
  i5=0
  i6=0
  i7=0
  i8=0
  i9=0
  ia=0
  ib=0
  ic=0
  id=0
  ie=0
  if=0
  ig=0
  ih=0
  ii=0
  ij=0
  ik=0
  il=0
  im=0
  in=0
  io=0
  ip=0
  iq=0
  ir=0
  is=0
  it=0
  iu=0
  iv=0
  iw=0
  ix=0
  iy=0
  iz=0
  j0=0
  j1=0
  j2=0
  j3=0
  j4=0
  j5=0
  j6=0
  j7=0
  j8=0
  j9=0
  ja=0
  jb=0
  jc=0
  jd=0
  je=0
  jf=0
  jg=0
  jh=0
  ji=0
  jj=0
  jk=0
  jl=0
  jm=0
  jn=0
  jo=0
  jp=0
  jq=0
  jr=0
  js=0
  jt=0
  ju=0
  jv=0
  jw=0
  jx=0
  jy=0
  jz=0
  k0=0
  k1=0
  k2=0
  k3=0
  k4=0
  k5=0
  k6=0
  k7=0
  k8=0
  k9=0
  ka=0
  kb=0
  kc=0
  kd=0
  ke=0
  kf=0
  kg=0
  kh=0
  ki=0
  kj=0
  kk=0
  kl=0
  km=0
  kn=0
  ko=0
  kp=0
  kq=0
  kr=0
  ks=0
  kt=0
  ku=0
  kv=0
  kw=0
  kx=0
  ky=0
  kz=0
  l0=0
  l1=0
  l2=0
  l3=0
  l4=0
  l5=0
  l6=0
  l7=0
  l8=0
  l9=0
  la=0
  lb=0
  lc=0
  ld=0
  le=0
  lf=0
  lg=0
  lh=0
  li=0
  lj=0
  lk=0
  ll=0
  lm=0
  ln=0
  lo=0
  lp=0
  lq=0
  lr=0
  ls=0
  lt=0
  lu=0
  lv=0
  lw=0
  lx=0
  ly=0
  lz=0
  m0=0
  m1=0
  m2=0
  m3=0
  m4=0
  m5=0
  m6=0
  m7=0
  m8=0
  m9=0
  ma=0
  mb=0
  mc=0
  md=0
  me=0
  mf=0
  mg=0
  mh=0
  mi=0
  mj=0
  mk=0
  ml=0
  mm=0
  mn=0
  mo=0
  mp=0
  mq=0
  mr=0
  ms=0
  mt=0
  mu=0
  mv=0
  mw=0
  mx=0
  my=0
  mz=0
  n0=0
  n1=0
  n2=0
  n3=0
  n4=0
  n5=0
  n6=0
  n7=0
  n8=0
  n9=0
  na=0
  nb=0
  nc=0
  nd=0
  ne=0
  nf=0
  ng=0
  nh=0
  ni=0
  nj=0
  nk=0
  nl=0
  nm=0
  nn=0
  no=0
  np=0
  nq=0
  nr=0
  ns=0
  nt=0
  nu=0
  nv=0
  nw=0
  nx=0
  ny=0
  nz=0
  y0=0
  y1=0
  y2=0
  y3=0
  y4=0
  y5=0
  y6=0
  y7=0
  y8=0
  y9=0
  ya=0
  yb=0
  yc=0
  yd=0
  ye=0
  yf=0
  yg=0
  yh=0
  yi=0
  yj=0
  yk=0
  yl=0
  ym=0
  yn=0
  yo=0
  yp=0
  yq=0
  yr=0
  ys=0
  yt=0
  yu=0
  yv=0
  yw=0
  yx=0
  yy=0
  yz=0
  z0=0
  z1=0
  z2=0
  z3=0
  z4=0
  z5=0
  z6=0
  z7=0
  z8=0
  z9=0
  za=0
  zb=0
  zc=0
  zd=0
  ze=0
  zf=0
  zg=0
  zh=0
  zi=0
  zj=0
  zk=0
  zl=0
  zm=0
  zn=0
  zo=0
  zp=0
  zq=0
  zr=0
  zs=0
  zt=0
  zu=0
  zv=0
  zw=0
  zx=0
  zy=0
  zz=0
Outgoing: One-shot timer "global_init_b": 0 ms delay

[x] Translator 0.4: Set Global Variables - defaults
Incoming: On timer "global_init_b"
Rules:
  // DDJ CONFIG
  //  "mk" - 0: DDJ-1000 mode; 1: DDJ-SX2 mode (internal); 2: DDJ-SZ mode (external)
  mk=2
  
  
  /// bpm & tempo A
  g1=0
  g5=1
  
  h1=120
  h5=1
  
  i1=10
  i5=1
  
  /// bpm & tempo B
  g2=0
  g6=1
  
  h2=120
  h6=1
  
  i2=10
  i6=1
  
  
  ///// needle
  // prev
  y1=0
  // deg
  z1=0
  
  /// locks for 30ms input
  ht=0
  hs=0
  he=0
  hf=0
  hw=0
  
  // 10 ms period
  hy=10
  
  // TEMP TEMP
  ///hy=1000
  
  // we need a reset!
  hx=0
  
  /// seek calc
  ia=0
  ib=0
  
  
  //jog touch block
  ko=127
  kp=127
  
  
  
  
Outgoing: One-shot timer "reset_master_clock": 0 ms delay

[ ] Translator 0.5: ------
Incoming: (none)
Outgoing: (none)

[x] Translator 0.6: CASCADE RESET
Incoming: On timer "reset_master_clock"
Outgoing: Periodic timer "master_clock": hy ms (initial delay: 0 ms)

[x] Translator 0.7: CASCADE RESET
Incoming: On timer "reset_master_clock"
Outgoing: One-shot timer "request_reset": 0 ms delay

[ ] Translator 0.8: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 0.9: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 0.10: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 0.11: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 0.12: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 0.13: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 0.14: AUDIBLE BEEP
Incoming: On timer "do_audible_beep"
Outgoing: Start/show: 1 Windows Foreground.wav

[ ] Translator 0.15: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 0.16: ------
Incoming: (none)
Outgoing: (none)

[x] Translator 0.17: CLOCK TICK
Incoming: On timer "master_clock"
Rules: hz=hz+1
Outgoing: (none)

_____________________________________________________________
[x] Preset 1: DEBUG KEYSTROKES

[x] Translator 1.0: MANUAL RESTART PROJECT
Incoming: Physical Keys: Ctrl(Shift(A))
Outgoing: One-shot timer "global_init": 0 ms delay

[ ] Translator 1.1: ------
Incoming: (none)
Outgoing: (none)

[x] Translator 1.2: STOP CLOCK
Incoming: Physical Keys: Ctrl(Shift(Z))
Rules:
  // preview mode / shift pressed - to deprecate
  
  ga=0
  gb=0
Outgoing: One-shot timer "stop_all_clocks": 0 ms delay

[x] Translator 1.3: STOP CLOCK
Incoming: On timer "stop_all_clocks"
Outgoing: Kill timer "master_clock"

[x] Translator 1.4: STOP CLOCK
Incoming: On timer "stop_all_clocks"
Outgoing: Kill timer "t_blink1"

[x] Translator 1.5: STOP CLOCK
Incoming: On timer "stop_all_clocks"
Outgoing: Kill timer "t_blink2"

[x] Translator 1.6: STOP CLOCK
Incoming: On timer "stop_all_clocks"
Outgoing: Kill timer "jog_ring1"

[x] Translator 1.7: STOP CLOCK
Incoming: On timer "stop_all_clocks"
Outgoing: Kill timer "jog_ring2"

[x] Translator 1.8: STOP CLOCK
Incoming: On timer "stop_all_clocks"
Outgoing: Kill timer "master_clock"

[ ] Translator 1.9: ------
Incoming: (none)
Outgoing: (none)

[x] Translator 1.10: START CLOCK - very fast
Incoming: Physical Keys: Ctrl(Shift(X))
Rules:
  // 10 ms period
  hy=10
Outgoing: One-shot timer "reset_master_clock": 0 ms delay

[x] Translator 1.11: START CLOCK - medium
Incoming: Physical Keys: Ctrl(Shift(C))
Rules:
  // 333 ms period
  hy=333
  // hy=100
Outgoing: One-shot timer "reset_master_clock": 0 ms delay

[x] Translator 1.12: START CLOCK - very slow
Incoming: Physical Keys: Ctrl(Shift(V))
Rules:
  // 1000 ms period
  hy=1000
  
Outgoing: One-shot timer "reset_master_clock": 0 ms delay

[x] Translator 1.13: TOGGLE MASTER DEBUG
Incoming: Physical Keys: Ctrl(Shift(S))
Rules:
  if hw==1 then Goto "disable"
  if hw==0 then Goto "enable"
  Goto "enable"
  
  Label "enable"
  hw=1
  Goto "end"
  
  Label "disable"
  hw=0
  Goto "end"
  
  Label "end"
Outgoing: (none)

[ ] Translator 1.14: ------
Incoming: (none)
Outgoing: (none)

[x] Translator 1.15: PC APP CONNECT
Incoming: Physical Keys: Ctrl(Shift(R))
Rules:
  g8=0
  oo=g8
  
  
Outgoing: Note On on ch. 16 with note:9 (0x09) and velocity:127 (0x7F), to port To DDJ

[x] Translator 1.16: DEBUG MANUAL RESET (start)
Incoming: Physical Keys: Ctrl(Shift(T))
Outgoing: One-shot timer "request_reset_master": 0 ms delay

[x] Translator 1.17: DEBUG MANUAL RESET (release)
Incoming: Physical Keys: Ctrl(Shift(Y))
Rules:
  Goto "doing_master_reset_release"
  Label "doing_master_reset_release"
Outgoing: Note On on ch. 1 with note:57 (0x39) and velocity:0 (0x00), delay:0 millisec

[ ] Translator 1.18: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 1.19: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 1.20: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 1.21: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 1.22: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 1.23: AUDIBLE BEEP
Incoming: On timer "do_audible_beep"
Outgoing: Start/show: z_TSI_current_work/1 Windows Foreground.wav

[ ] Translator 1.24: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 1.25: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 1.26: test beatFX
Incoming: Physical Keys: Ctrl(E)
Rules:
  // #g9 = g9 ^ 0x7f
  
  if g9==0 then oo=127
  if g9>0 then oo=0
  g9=oo
  
Outgoing: Note On on ch. 5 with note:71 (0x47) and velocity:oo, to port To DDJ

[ ] Translator 1.27: teste colorFX
Incoming: Physical Keys: Ctrl(Q)
Rules:
  // #g9 = g9 ^ 0x7f
  
  if g9==0 then oo=127
  if g9>0 then oo=0
  g9=oo
  
Outgoing: Note On on ch. 7 with note:0 (0x00) and velocity:oo, to port To DDJ

[ ] Translator 1.28: teste colorFX
Incoming: Physical Keys: Ctrl(W)
Rules:
  // #g9 = g9 ^ 0x7f
  
  if g8==0 then oo=127
  if g8>0 then oo=0
  g8=oo
  
Outgoing: Note On on ch. 7 with note:1 (0x01) and velocity:oo, to port To DDJ

[ ] Translator 1.29: teste colorFX
Incoming: Physical Keys: Shift(Q)
Rules:
  g9=0
  oo=g9
  
  g1=0
  g2=0
  g3=0
  g4=0
Outgoing: Note On on ch. 7 with note:0 (0x00) and velocity:oo, to port To DDJ

[ ] Translator 1.30: teste colorFX
Incoming: Physical Keys: Shift(Q)
Rules:
  g8=0
  oo=g8
  
  
Outgoing: Note On on ch. 7 with note:1 (0x01) and velocity:oo, to port To DDJ

[ ] Translator 1.31: teste colorFX
Incoming: Physical Keys: Ctrl(R)
Rules:
  g8=127
  oo=g8
  
  
Outgoing: Note On on ch. 7 with note:1 (0x01) and velocity:oo, to port To DDJ

[ ] Translator 1.32: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 1.33: ------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 2: ------

_____________________________________________________________
[ ] Preset 3: ------

[ ] Translator 3.0: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 3.1: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 3.2: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 3.3: ----
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[x] Preset 4: DDJ IN - Generic Gestures
 Default MIDI IN ports:   From DDJ
 Default MIDI OUT ports:  To Traktor

[x] Translator 4.0: GENERIC LONG_PRESS - press
Incoming: Note On on any channel set 'qq' to ch. with any note and 'oo' to note with any velocity and 'pp' to velocity, on port From DDJ
Rules:
  
  // cancel anything that might be running
  hm=0
  
  if pp>0 then Goto "pressed"
  if pp==0 then Goto "release"
  
  
  Label "pressed"
  hi=1
  Goto "end"
  
  Label "release"
  hi=0
  Goto "end"
  
  
  
  Label "end"
  
Outgoing: One-shot timer "long_press": 200 ms delay

[x] Translator 4.1: GENERIC LONG_PRESS - release
Incoming: Note Off on any channel set 'qq' to ch. with any note and 'oo' to note with any velocity and 'pp' to velocity, on port From DDJ
Rules:
  
  // cancel anything that might be running
  hm=0
  
  if pp>0 then Goto "pressed"
  if pp==0 then Goto "release"
  
  
  Label "pressed"
  hi=1
  Goto "end"
  
  Label "release"
  hi=0
  Goto "end"
  
  
  
  Label "end"
  
Outgoing: Kill timer "long_press"

[x] Translator 4.2: GENERIC LONG_PRESS - timer
Incoming: On timer "long_press"
Rules:
  if hi==1 then hm=1
  
Outgoing: (none)

[ ] Translator 4.3: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 4.4: GENERIC DBL_CLICK  pt1
Incoming: Note On on any channel set 'qq' to ch. with any note and 'oo' to note with velocity:127 (0x7F), on port From DDJ
Rules:
  Goto "dblclick_consider"
  
  if oo==94 then Goto "exceptions_note_dlbclick"
  if oo==95 then Goto "exceptions_note_dlbclick"
  Goto "ignore_exceptions"
  
  Label "exceptions_note_dlbclick"
  //if qq>3 then Goto "no_exception"
  Goto "end"
  
  
  ///////////////
  Label "dblclick_consider"
  if ie==1 then Goto "testing_second_click"
  Goto "seen_first_click"
  
  Label "seen_first_click"
  ie=1
  if=qq
  ig=oo
  Goto "End"
  
  Label "testing_second_click"
  if if!=qq then Goto "second_click_was_another"
  if ig!=oo then Goto "second_click_was_another"
  Goto "second_click_was_triggered"
  
  
  Label "second_click_was_another"
  Goto "seen_first_click"
  
  
  Label "second_click_was_triggered"
  ie=2
  Goto "End"
  
  Label "end"
Outgoing: One-shot timer "double_tap": 200 ms delay

[x] Translator 4.5: GENERIC DBL_CLICK  pt2
Incoming: On timer "double_tap"
Rules: ie=0
Outgoing: (none)

[ ] Translator 4.6: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 4.7: SENSE ACTIVE DECK (heavy)
Incoming: Note On on any channel set 'xx' to ch. with any note and 'pp' to note with any velocity
Rules:
  // exclude change deck button itself
  if pp==114 then exit rules, skip Outgoing Action
  // exclude PC App connect timer
  if im==1 then exit rules, skip Outgoing Action
  
  
  //filter notes
  if xx>3 then Goto "ignored"
  if pp==11 then Goto "to_consider"
  if pp==12 then Goto "to_consider"
  if pp==20 then Goto "to_consider"
  if pp==61 then Goto "to_consider"
  if pp==63 then Goto "to_consider"
  Goto "ignored"
  
  Label "ignored"
  exit rules, skip Outgoing Action
  
  
  //////// Regular Operation
  Label "to_consider"
  oo=ii
  pp=ij
  if xx==0 then oo=1
  if xx==2 then oo=3
  if xx==7 then oo=1
  if xx==11 then oo=3
  
  if xx==1 then pp=2
  if xx==3 then pp=4
  if xx==9 then pp=2
  if xx==13 then pp=4
  
  /// check what changed
  if oo!=ii then Goto "layout_wrong"
  if pp!=ij then Goto "layout_wrong"
  Goto "layout_is_correct"
  
  Label "layout_is_correct"
  exit rules, skip Outgoing Action
  
  Label "layout_wrong"
  ii=oo
  ij=pp
Outgoing: One-shot timer "deck_change": 0 ms delay

[ ] Translator 4.8: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 4.9: SENSE RESET NEEDED - NOTE
Incoming: Note On on any channel with any note and any velocity
Rules:
  if hx==1 then exit rules, skip Outgoing Action
  hx=1
  
  Goto "will_do__master_reset"
  Label "will_do__master_reset"
  
  
Outgoing: One-shot timer "request_reset_master": 0 ms delay

[x] Translator 4.10: SENSE RESET NEEDED - CC
Incoming: Control Change on any channel with any CC# and any value
Rules:
  if hx==1 then exit rules, skip Outgoing Action
  hx=1
  
  Goto "will_do__master_reset"
  Label "will_do__master_reset"
  
  
Outgoing: One-shot timer "request_reset_master": 0 ms delay

[ ] Translator 4.11: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 4.12: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 4.13: REQUEST RESET
Incoming: On timer "request_reset_master"
Rules:
  Goto "doing_master_reset"
  Label "doing_master_reset"
  
Outgoing: Timer 3 times "request_reset": 3000 ms (initial delay: 0 ms)

[x] Translator 4.14: REQUEST RESET
Incoming: On timer "request_reset"
Rules:
  Goto "doing_master_reset"
  Label "doing_master_reset"
  
Outgoing: Note On on ch. 1 with note:57 (0x39) and velocity:127 (0x7F)

[x] Translator 4.15: REQUEST RESET (2)
Incoming: On timer "request_reset"
Rules:
  Goto "doing_master_reset_release"
  Label "doing_master_reset_release"
Outgoing: Note On on ch. 1 with note:57 (0x39) and velocity:0 (0x00), delay:500 millisec

[ ] Translator 4.16: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 4.17: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 4.18: ----
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[x] Preset 5: DDJ IN - CFX DBL Click
 Default MIDI IN ports:   From DDJ
 Default MIDI OUT ports:  To Traktor

[ ] Translator 5.0: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 5.1: --------- CFX RELEASE -----
Incoming: (none)
Outgoing: (none)

[x] Translator 5.2: CFX - Test Cancel MFX
Incoming: Note Off on ch. 7 with any note set 'qq' to note with velocity:0 (0x00) and 'pp' to velocity
Rules:
  if qq>3 then Goto "cfx_was_something_else"
  Goto "cfx_valid_button"
  
  Label "cfx_was_something_else"
  exit rules, skip Outgoing Action
  
  Label "cfx_valid_button"
  
  Label "end"
  
  
  //if jw<2 then Goto "was_not_doubleclick"
  //if jw>=2 then Goto "was_doubleclick"
  
  //Label "was_not_doubleclick"
  //exit rules, skip Outgoing Action
  
  //Label "was_doubleclick"
Outgoing: One-shot timer "cfx_test_stop_mfx": 100 ms delay

[x] Translator 5.3: CFX - stop MacroFX
Incoming: On timer "cfx_test_stop_mfx"
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  //    jx - state: 0: waiting, 1: in progress; 2: waiting final echo
  //    jy - which button
  //    jw - press count
  
  if jx==0 then Goto "cfx_state__still_idle"
  if jx==1 then Goto "cfx_state__is_in_progress"
  if jx>=2 then Goto "cfx_state__is_final_echo"
  
  Label "cfx_state__still_idle"
  
  /// NEW NEW NEW
  if l8>12 then Goto "idle_and_was_doubleclick"
  if l8<=12 then Goto "idle_and_was_not_doubleclick"
  
  
  
  //if jw<2 then goto "idle_and_was_not_doubleclick"
  //if jw>=2 then Goto "idle_and_was_doubleclick"
  
  Label "idle_and_was_doubleclick"
  // we are still in idle - cancel the active double click
  Goto "end"
  
  Label "idle_and_was_not_doubleclick"
  Label "cfx_state__is_in_progress"
  Label "cfx_state__is_final_echo"
  exit rules, skip Outgoing Action
  
  Label "end"
Outgoing: One-shot timer "cfx_enable_macrofx": 0 ms delay

[x] Translator 5.4: CFX - reset clicks
Incoming: On timer "cfx_test_stop_mfx"
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  //    jx - state: 0: waiting, 1: in progress; 2: waiting final echo
  //    jy - which button
  //    jw - press count
  
  if jx==0 then Goto "cfx_state__still_idle"
  if jx==1 then Goto "cfx_state__is_in_progress"
  if jx>=2 then Goto "cfx_state__is_final_echo"
  
  Label "cfx_state__still_idle"
  // we are still in idle - cancel the number of clicks
  jw=0
  Goto "end"
  
  Label "cfx_state__is_in_progress"
  Label "cfx_state__is_final_echo"
  exit rules, skip Outgoing Action
  
  Label "end"
Outgoing: (none)

[ ] Translator 5.5: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 5.6: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 5.7: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 5.8: --------- CFX PRESS -----
Incoming: (none)
Outgoing: (none)

[x] Translator 5.9: CFX - PRESS DOWN
Options: swallow
Incoming: Note On on ch. 7 with any note set 'qq' to note with velocity:127 (0x7F) and 'pp' to velocity
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  //    jx - state: 0: waiting, 1: in progress; 2: waiting final echo
  //    jy - which button
  //    jw - press count
  
  
  if qq>3 then Goto "cfx_was_something_else"
  Goto "cfx_test"
  
  Label "cfx_was_something_else"
  exit rules, skip Outgoing Action
  
  Label "cfx_test"
  Goto "cfx_test2"
  
  /// disabled!
  if jw>=5 then Goto "kill bug"
  Goto "cfx_test2"
  
  Label "kill bug"
  Goto "cfx_test2"
  jw=0
  jx=0
  Goto "cfx_test2"
  
  Label "cfx_test2"
  jy=qq
  if jx==0 then Goto "cfx_state_idle"
  if jx==1 then Goto "cfx_state_in_progress"
  if jx>=2 then Goto "cfx_state_final_echo"
  
  Label "cfx_state_idle"
  // only here the old value is changed!
  jw=1
  Goto "end"
  
  Label "cfx_state_in_progress"
  jw=jw+1
  Goto "end"
  
  Label "cfx_state_final_echo"
  jx=99
  //used in release safety
  //jw=0
  Goto "end"
  
  
  Label "end"
  
  
  /// enable/disable super knobs
  if i9==0 then Goto "end2"
  Goto "memory_pressed"
  
  Label "memory_pressed"
  oo=jz
  if oo==0 then jz=1
  if oo>0 then jz=0
  Goto "end2"
  
  Label "end2"
  jz=99
  
Outgoing: One-shot timer "cfx_swallow": 0 ms delay

[x] Translator 5.10: CFX - SWALLOW
Incoming: On timer "cfx_swallow"
Rules:
  if jx==99 then Goto "final_swallow"
  Goto "end"
  
  Label "final_swallow"
  jx=0
  exit rules, skip Outgoing Action
  
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "cfx_disable": 0 ms delay

[ ] Translator 5.11: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 5.12: CFX - DISABLE LED
Incoming: On timer "cfx_disable"
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  
  //    jx - state: 0: waiting, 1: in progress; 2: waiting final echo
  //    jy - which button
  //    jw - press count
  
  xx=6
  uu=jy
  pp=0
Outgoing: Note On on ch.'xx' with note:uu and velocity:pp, to port To DDJ

[x] Translator 5.13: CFX - START_ONCE_TIMER
Incoming: On timer "cfx_disable"
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  //    jx - state: 0: waiting, 1: in progress; 2: waiting final echo
  //    jy - which button
  //    jw - press count
  
  
  if jx==0 then Goto "cfx_state_idle"
  if jx>0 then Goto "cfx_state_in_progress"
  
  Label "cfx_state_in_progress"
  exit rules, skip Outgoing Action
  
  Label "cfx_state_idle"
  jx=1
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "cfx_enable": 300 ms delay

[ ] Translator 5.14: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 5.15: CFX - ENABLE LED
Incoming: On timer "cfx_enable"
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  
  //    jx - state: 0: waiting, 1: in progress; 2: waiting final echo
  //    jy - which button
  //    jw - press count
  
  xx=6
  uu=jy
  pp=127
  
  jx=2
Outgoing: Note On on ch.'xx' with note:uu and velocity:pp, to port To DDJ

[x] Translator 5.16: CFX - CHOOSE WHAT TODO
Incoming: On timer "cfx_enable"
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  if jw==1 then Goto "cfx_was__single_click"
  if jw>=2 then Goto "cfx_was__doubke_click"
  Goto "Error_choose_what_todo"
  
  
  Label "Error_choose_what_todo"
  exit rules, skip Outgoing Action
  
  Label "cfx_was__single_click"
  Goto "end"
  
  Label "cfx_was__double_click"
  exit rules, skip Outgoing Action
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "cfx_enable_mixerfx": 0 ms delay

[x] Translator 5.17: CFX - CHOOSE WHAT TODO
Incoming: On timer "cfx_enable"
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  if jw==1 then Goto "cfx_was__single_click"
  if jw>=2 then Goto "cfx_was__doubke_click"
  Goto "Error_choose_what_todo"
  
  
  Label "Error_choose_what_todo"
  exit rules, skip Outgoing Action
  
  Label "cfx_was__single_click"
  exit rules, skip Outgoing Action
  Goto "end"
  
  Label "cfx_was__double_click"
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "cfx_enable_macrofx": 0 ms delay

[x] Translator 5.18: CFX - CHOOSE WHAT TODO
Incoming: On timer "cfx_enable_macrofx"
Rules: 
Outgoing: One-shot timer "cfx_enable_macrofx1": 0 ms delay

[x] Translator 5.19: CFX - CHOOSE WHAT TODO
Incoming: On timer "cfx_enable_macrofx"
Rules: 
Outgoing: One-shot timer "cfx_enable_macrofx2": 1000 ms delay

[ ] Translator 5.20: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 5.21: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 5.22: --------- CFX SEND TO TK -----
Incoming: (none)
Outgoing: (none)

[x] Translator 5.23: TK OUT - ANSWER MixerFX (DISABLED)
Incoming: On timer "cfx_enable_mixerfx"
Outgoing: One-shot timer "cfx_change_knob1": 0 ms delay

[ ] Translator 5.24: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 5.25: TK OUT - ANSWER MixerFX (DISABLED)
Incoming: On timer "cfx_enable_mixerfx"
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  xx=6
  uu=jy
  pp=127
  Goto "end"
  
  Label "end"
  
Outgoing: Note On on ch.'xx' with note:uu and velocity:pp

[x] Translator 5.26: TK OUT - ANSWER MacroFX1
Incoming: On timer "cfx_enable_macrofx1"
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  Goto "cfx_was_double_click"
  
  Label "cfx_was_double_click"
  xx=7
  pp=127
  
  qq=jy
  if qq==0 then uu=32
  if qq==1 then uu=33
  if qq==2 then uu=34
  if qq==3 then uu=35
  Goto "end"
  
  
  Label "end"
  
  /// new new new
  uu=l8
Outgoing: Note On on ch.'xx' with note:uu and velocity:pp

[x] Translator 5.27: TK OUT - ANSWER MacroFX1
Incoming: On timer "cfx_enable_macrofx2"
Rules:
  // IN:
  //   qq = note
  //   pp = vel
  //
  // OUT:
  //   xx channel
  //   uu note
  //   pp vel
  
  Goto "cfx_was_double_click"
  
  Label "cfx_was_double_click"
  xx=7
  pp=0
  
  qq=jy
  if qq==0 then uu=32
  if qq==1 then uu=33
  if qq==2 then uu=34
  if qq==3 then uu=35
  Goto "end"
  
  
  Label "end"
  
  /// new new new
  uu=l8
Outgoing: Note On on ch.'xx' with note:uu and velocity:pp

[ ] Translator 5.28: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 5.29: Pad MLM Cascade1
Incoming: On timer "cfx_enable_macrofx2"
Rules: 
Outgoing: One-shot timer "macroFX_mlm": 0 ms delay

[ ] Translator 5.30: Pad MLM Cascade2
Incoming: On timer "cfx_enable_macrofx2"
Rules: 
Outgoing: One-shot timer "macroFX_mlm": 0 ms delay

[ ] Translator 5.31: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 5.32: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 5.33: ----
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[x] Preset 6: DDJ IN - All channels
 Default MIDI IN ports:   From DDJ
 Default MIDI OUT ports:  To Traktor

[x] Translator 6.0: PC APP CONNECT (IN)
Incoming: Note On on ch. 16 with note:9 (0x09) and any velocity, on port From Traktor
Rules:
  // this disables forced side because of auto-detect
  im=1
Outgoing: One-shot timer "pc_app_connect": 500 ms delay

[x] Translator 6.1: PC APP CONNECT (timer)
Incoming: On timer "pc_app_connect"
Rules: im=0
Outgoing: One-shot timer "deck_change": 0 ms delay

[x] Translator 6.2: PRESS CHANGE DECK
Options: swallow
Incoming: Note On on any channel set 'qq' to ch. with note:114 (0x72) and velocity:127 (0x7F)
Rules: 'il'
  // ignore this for DDJ-SX2 and SZ
  if mk>0 then exit rules, skip Outgoing Action
  
  // ignore high channels
  if qq>3 then exit rules, skip Outgoing Action
  
  
  
  //////// INIT CASES
  if ii==0 then ii=1
  if ij==0 then ij=2
  
  //// enable/disable support
  if gb==1 then Goto "toggle_enable_disable"
  if ga==1 then Goto "toggle_enable_disable"
  if il==2 then Goto "feature_disabled"
  
  Label "enabled operation"
  if ie==2 then Goto "deck_double_click"
  Goto "deck_change"
  
  
  Label "toggle_enable_disable"
  if il==0 then Goto "set_to_disabled"
  if il==1 then Goto "set_to_disabled"
  if il==2 then Goto "set_to_enabled"
  
  Label "set_to_disabled"
  il=2
  Goto "end"
  
  Label "set_to_enabled"
  il=0
  Goto "end"
  
  Label "feature_disabled"
  Goto "end"
  
  /// toggle Classic/Parallel
  Label "deck_double_click"
  if il==0 then rr=1
  if il>0 then rr=0
  il=rr
  Goto "deck_change"
  
  
  /// Regular deck change
  Label "deck_change"
  if qq==2 then Goto "left_side"
  Goto "right_side"
  
  Label "left_side"
  if ii==3 then Goto "prev_deck3"
  Goto "prev_deck1"
  
  Label "prev_deck1"
  ii=3
  Goto "end"
  
  Label "prev_deck3"
  ii=1
  Goto "end"
  
  ///////////////
  Label "right_side"
  if ij==4 then Goto "prev_deck4"
  Goto "prev_deck2"
  
  Label "prev_deck2"
  ij=4
  Goto "end"
  
  Label "prev_deck4"
  ij=2
  Goto "end"
  
  
  ////// END
  Label "end"
  
  
  
  
Outgoing: One-shot timer "deck_change": 0 ms delay

[x] Translator 6.3: SEND LAYOUT
Incoming: On timer "deck_change"
Rules:
  if il==2 then exit rules, skip Outgoing Action
  
  
  
  oo=0
  if ii==3 then oo=1
  if ij==4 then oo=1
  
  if il>0 then oo=oo+2
  
  // send final layout
  rr=oo
  
  //0 = parallel
  //rr = rr +1
  
  rr=rr*127
  rr=rr/4
  
  
  
  
Outgoing: Note On on ch. 16 with note:116 (0x74) and velocity:rr

[ ] Translator 6.4: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.5: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.6: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.7: --------- FILTER DUAL1
Incoming: (none)
Outgoing: (none)

[x] Translator 6.8: Track CFX1 KNOB
Options: swallow
Incoming: Control Change (14-bit) on ch. 7 with CC#:23 (0x17) and any value set 'pp' to value
Rules:
  oo=16383/2
  qq=pp-oo
  
  if qq<0 then Goto "negative"
  if qq>0 then Goto "positive"
  Goto "positive"
  
  Label "positive"
  uu=1
  qq=pp
  Goto "end"
  
  Label "negative"
  uu=-1
  qq=qq*-1
  qq=qq+oo
  Goto "end"
  
  /////////
  Label "end"
  
  if jw==0 then Goto "same_polarity"
  if l5!=uu then Goto "swapped_polarity"
  Goto "same_polarity"
  
  
  Label "swapped_polarity"
  l5=uu*2
  Goto "end2"
  
  Label "same_polarity"
  Goto "end2"
  
  Label "end2"
  is=qq
Outgoing: One-shot timer "cfx_knob1": 0 ms delay

[x] Translator 6.9: Send CFX1 KNOB
Incoming: On timer "cfx_knob1"
Rules:
  if ga==1 then Goto "pressing_shift"
  Goto "normal"
  
  Label "normal"
  oo=is
  Goto "end"
  
  Label "pressing_shift"
  oo=is
  oo=oo*-1
  pp=16383
  oo=oo+pp
  Goto "end"
  
  Label "end"
  
  
  
  
Outgoing: Control Change (14-bit) on ch. 7 with CC#:23 (0x17) and value:oo

[x] Translator 6.10: Decide CFX1 refresh
Incoming: On timer "cfx_knob1"
Rules:
  
  
  if jz==0 then Goto "cfx_no_refresh"
  
  if l5==2 then Goto "do_refresh_positive"
  if l5==-2 then Goto "do_refresh_negative"
  Goto "cfx_no_refresh"
  
  Label "cfx_no_refresh"
  exit rules, skip Outgoing Action
  
  Label "do_refresh_positive"
  l5=1
  Goto "end"
  
  Label "do_refresh_negative"
  l5=-1
  Goto "end"
  
  Label "end"
  /// new stuff here
  
  Goto "_________________________________________________________________________________________________________________________________________________________________________"
  Label "_________________________________________________________________________________________________________________________________________________________________________"
Outgoing: One-shot timer "cfx_change_knob1": 0 ms delay

[ ] Translator 6.11: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 6.12: SEND FX1 mergedFX
Incoming: On timer "cfx_change_knob1"
Rules:
  if jz==0 then Goto "superknob_disabled"
  if jw==0 then Goto "cfx_no_click"
  if jw==1 then Goto "cfx_single_click"
  if jw>=2 then Goto "cfx_double_click"
  
  Label "superknob_disabled"
  Label "cfx_no_click"
  Label "cfx_double_click"
  exit rules, skip Outgoing Action
  
  
  //////
  Label "cfx_single_click"
  if l5<0 then Goto "negative"
  if l5>0 then Goto "positive"
  Goto "positive"
  
  Label "negative"
  pp=0
  if jy==0 then pp=33
  if jy==2 then pp=8
  if jy==1 then pp=0
  if jy==3 then pp=2
  Goto "end"
  
  
  Label "positive"
  if jy==0 then pp=32
  if jy==2 then pp=34
  if jy==1 then pp=1
  if jy==3 then pp=3
  Goto "end"
  
  
  /// falta o caso 8!!
  
  Label "end"
  if pp<=11 then oo=6
  if pp>11 then oo=7
  
  // NEW NEW NEW: cascaded knob info
  l8=pp
  
  // only send release for macroFX
  //if oo==6 then exit rules, skip Outgoing Action
  
Outgoing: Note On on ch.'oo' with note:pp and velocity:127 (0x7F)

[x] Translator 6.13: SEND FX1 mergedFX
Incoming: On timer "cfx_change_knob1"
Rules:
  if jz==0 then Goto "superknob_disabled"
  if jw==0 then Goto "cfx_no_click"
  if jw==1 then Goto "cfx_single_click"
  if jw>=2 then Goto "cfx_double_click"
  
  Label "superknob_disabled"
  Label "cfx_no_click"
  Label "cfx_double_click"
  exit rules, skip Outgoing Action
  
  
  //////
  Label "cfx_single_click"
  if l5<0 then Goto "negative"
  if l5>0 then Goto "positive"
  Goto "positive"
  
  Label "negative"
  pp=0
  if jy==0 then pp=33
  if jy==2 then pp=8
  if jy==1 then pp=0
  if jy==3 then pp=2
  Goto "end"
  
  
  Label "positive"
  if jy==0 then pp=32
  if jy==2 then pp=34
  if jy==1 then pp=1
  if jy==3 then pp=3
  Goto "end"
  
  
  /// falta o 8!!
  
  Label "end"
  if pp<=11 then oo=6
  if pp>11 then oo=7
  
  
  // NEW NEW NEW: cascaded knob info
  l8=pp
  
  
  // only send release for macroFX
  if oo==6 then exit rules, skip Outgoing Action
  
Outgoing: Note On on ch.'oo' with note:pp and velocity:0 (0x00), delay:100 millisec

[x] Translator 6.14: cascade MLM
Incoming: On timer "cfx_change_knob1"
Outgoing: One-shot timer "macroFX_mlm": 0 ms delay

[ ] Translator 6.15: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.16: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.17: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.18: --------- FILTER DUAL2
Incoming: (none)
Outgoing: (none)

[x] Translator 6.19: Track CFX2 KNOB
Options: swallow
Incoming: Control Change (14-bit) on ch. 7 with CC#:24 (0x18) and any value set 'pp' to value
Rules:
  oo=16383/2
  qq=pp-oo
  
  if qq<0 then Goto "negative"
  if qq>0 then Goto "positive"
  Goto "positive"
  
  Label "positive"
  uu=1
  qq=pp
  Goto "end"
  
  Label "negative"
  uu=-1
  qq=qq*-1
  qq=qq+oo
  Goto "end"
  
  /////////
  Label "end"
  
  if jw==0 then Goto "same_polarity"
  if l6!=uu then Goto "swapped_polarity"
  Goto "same_polarity"
  
  
  Label "swapped_polarity"
  l6=uu*2
  Goto "end2"
  
  Label "same_polarity"
  Goto "end2"
  
  Label "end2"
  it=qq
Outgoing: One-shot timer "cfx_knob2": 0 ms delay

[x] Translator 6.20: Send CFX2 KNOB
Incoming: On timer "cfx_knob2"
Rules:
  if ga==1 then Goto "pressing_shift"
  Goto "normal"
  
  Label "normal"
  oo=it
  Goto "end"
  
  Label "pressing_shift"
  oo=it
  oo=oo*-1
  pp=16383
  oo=oo+pp
  Goto "end"
  
  Label "end"
  
  
  
  
Outgoing: Control Change (14-bit) on ch. 7 with CC#:24 (0x18) and value:oo

[x] Translator 6.21: Decide CFX2 refresh
Incoming: On timer "cfx_knob2"
Rules:
  
  if jz==0 then Goto "cfx_no_refresh"
  
  if l6==2 then Goto "do_refresh_positive"
  if l6==-2 then Goto "do_refresh_negative"
  Goto "cfx_no_refresh"
  
  Label "cfx_no_refresh"
  exit rules, skip Outgoing Action
  
  Label "do_refresh_positive"
  l6=1
  Goto "end"
  
  Label "do_refresh_negative"
  l6=-1
  Goto "end"
  
  Label "end"
  
  
  Goto "_________________________________________________________________________________________________________________________________________________________________________"
  Label "_________________________________________________________________________________________________________________________________________________________________________"
  
Outgoing: One-shot timer "cfx_change_knob2": 0 ms delay

[ ] Translator 6.22: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 6.23: SEND FX1 mergedFX
Incoming: On timer "cfx_change_knob2"
Rules:
  if jz==0 then Goto "superknob_disabled"
  if jw==0 then Goto "cfx_no_click"
  if jw==1 then Goto "cfx_single_click"
  if jw>=2 then Goto "cfx_double_click"
  
  Label "superknob_disabled"
  Label "cfx_no_click"
  Label "cfx_double_click"
  exit rules, skip Outgoing Action
  
  
  //////
  Label "cfx_single_click"
  if l6<0 then Goto "negative"
  if l6>0 then Goto "positive"
  Goto "positive"
  
  Label "negative"
  pp=0
  if jy==0 then pp=33
  if jy==2 then pp=8
  if jy==1 then pp=0
  if jy==3 then pp=2
  Goto "end"
  
  
  Label "positive"
  if jy==0 then pp=32
  if jy==2 then pp=34
  if jy==1 then pp=1
  if jy==3 then pp=3
  Goto "end"
  
  
  /// falta o 8!!
  
  Label "end"
  if pp<11 then oo=6
  if pp>=11 then oo=9
  
  // NEW NEW NEW: cascaded knob info
  l8=pp
  
  
  // only send release for macroFX
  //if oo==6 then exit rules, skip Outgoing Action
  
Outgoing: Note On on ch.'oo' with note:pp and velocity:127 (0x7F)

[x] Translator 6.24: SEND FX1 mergedFX
Incoming: On timer "cfx_change_knob2"
Rules:
  if jz==0 then Goto "superknob_disabled"
  if jw==0 then Goto "cfx_no_click"
  if jw==1 then Goto "cfx_single_click"
  if jw>=2 then Goto "cfx_double_click"
  
  Label "superknob_disabled"
  Label "cfx_no_click"
  Label "cfx_double_click"
  exit rules, skip Outgoing Action
  
  
  //////
  Label "cfx_single_click"
  if l5<0 then Goto "negative"
  if l5>0 then Goto "positive"
  Goto "positive"
  
  Label "negative"
  pp=0
  if jy==0 then pp=33
  if jy==2 then pp=8
  if jy==1 then pp=0
  if jy==3 then pp=2
  Goto "end"
  
  
  Label "positive"
  if jy==0 then pp=32
  if jy==2 then pp=34
  if jy==1 then pp=1
  if jy==3 then pp=3
  Goto "end"
  
  
  /// falta o 8!!
  
  Label "end"
  if pp<5 then oo=6
  if pp>=5 then oo=7
  
  // NEW NEW NEW: cascaded knob info
  l8=pp
  
  
  // only send release for macroFX
  if oo==6 then exit rules, skip Outgoing Action
  
Outgoing: Note On on ch.'oo' with note:pp and velocity:0 (0x00), delay:100 millisec

[x] Translator 6.25: cascade MLM
Incoming: On timer "cfx_change_knob2"
Outgoing: One-shot timer "macroFX_mlm": 0 ms delay

[ ] Translator 6.26: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.27: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.28: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.29: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.30: --------- FILTER KNOB MLM  -------
Incoming: (none)
Outgoing: (none)

[x] Translator 6.31: IN Pad MLM1
Incoming: Note On on ch. 8 set 'oo' to ch. with any note and 'pp' to note with velocity:127 (0x7F)
Rules:
  if pp<32 then Goto "other"
  if pp<35 then Goto "macroFX"
  Goto "other"
  
  Label "other"
  exit rules, skip Outgoing Action
  
  
  Label "macroFX"
  ix=pp
  
  
Outgoing: One-shot timer "macroFX_mlm": 0 ms delay

[x] Translator 6.32: IN Pad MLM2
Incoming: Note On on ch. 10 set 'oo' to ch. with any note and 'pp' to note with velocity:127 (0x7F)
Rules:
  if pp<32 then Goto "other"
  if pp<35 then Goto "macroFX"
  Goto "other"
  
  Label "other"
  exit rules, skip Outgoing Action
  
  
  Label "macroFX"
  iy=pp
  
  
Outgoing: One-shot timer "macroFX_mlm": 0 ms delay

[ ] Translator 6.33: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 6.34: OUT MLM delay
Incoming: On timer "macroFX_mlm"
Outgoing: One-shot timer "macroFX_mlm_delay": 100 ms delay

[x] Translator 6.35: OUT MLM knob1
Incoming: On timer "macroFX_mlm_delay"
Rules: pp=is
Outgoing: Control Change (14-bit) on ch. 7 with CC#:23 (0x17) and value:pp

[x] Translator 6.36: OUT MLM knob2
Incoming: On timer "macroFX_mlm_delay"
Rules:
  pp=it
  
Outgoing: Control Change (14-bit) on ch. 7 with CC#:24 (0x18) and value:pp

[ ] Translator 6.37: ----
Incoming: (none)
Outgoing: Left mouse button click

[ ] Translator 6.38: OUT MLM repeat pad2
Incoming: On timer "macroFX_mlm2"
Rules: pp=iy
Outgoing: Note On on ch. 10 with note:pp and velocity:127 (0x7F)

[ ] Translator 6.39: OUT MLM repeat pad1
Incoming: On timer "macroFX_mlm1"
Rules: pp=ix
Outgoing: Note On on ch. 8 with note:pp and velocity:127 (0x7F)

[ ] Translator 6.40: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.41: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.42: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.43: --------- TEMPO RANGE  -------
Incoming: (none)
Outgoing: (none)

[x] Translator 6.44: TEMPO RANGE - AUTO RESET
Incoming: Control Change (14-bit) on any channel set 'xx' to ch. with CC#:0 (0x00) and any value set 'pp' to value
Rules:
  if xx>3 then exit rules, skip Outgoing Action
  
  oo=16383/2
  tt=oo-10
  uu=oo+20
  
  if pp<tt then Goto "other"
  if pp>uu then Goto "other"
  Goto "in_mid_point"
  
  Label "other"
  exit rules, skip Outgoing Action
  
  Label "in_mid_point"
  
Outgoing: Note On on ch.'xx' with note:119 (0x77) and velocity:127 (0x7F)

[ ] Translator 6.45: DEBUG Tempo Range - go up
Incoming: Physical Keys: Ctrl(Alt(Q))
Rules:
  Goto "going up"
  Label "going up"
Outgoing: Note On on ch. 2 with note:118 (0x76) and velocity:127 (0x7F)

[ ] Translator 6.46: DEBUG Tempo Range - go down
Incoming: Physical Keys: Ctrl(Alt(W))
Rules:
  Goto "going down"
  Label "going down"
Outgoing: Note On on ch. 2 with note:96 (0x60) and velocity:127 (0x7F)

[ ] Translator 6.47: DEBUG Tempo Range - reset
Incoming: Physical Keys: Ctrl(Alt(E))
Rules:
  Goto "reset"
  Label "reset"
  
Outgoing: Note On on ch. 2 with note:119 (0x77) and velocity:127 (0x7F), to port To DDJ

[ ] Translator 6.48: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.49: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.50: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.51: -----------  TTFX DECK1 -------
Incoming: (none)
Outgoing: (none)

[x] Translator 6.52: Step1 - PAUSE PRESS2
Options: swallow
Incoming: Note On on ch. 1 with note:11 (0x0B) and any velocity set 'pp' to velocity
Rules:
  if zo==0 then Goto "is_paused"
  if zo>=0 then Goto "is_playing"
  
  Label "is_paused"
  // this skips the swallow, so it passes the command
  exit rules, skip Outgoing Action
  
  Label "is_playing"
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "1_ttfx_step1": 0 ms delay

[x] Translator 6.53: Step1 - EFFECT START
Incoming: On timer "1_ttfx_step1"
Rules:
  Goto "do_ttfx_start"
  Label "do_ttfx_start"
  
  // send C#7 normal
Outgoing: Note On on ch. 1 with note:97 (0x61) and velocity:127 (0x7F)

[x] Translator 6.54: Step1 - BEEP
Incoming: On timer "1_ttfx_step1"
Outgoing: One-shot timer "do_audible_beep": 0 ms delay

[x] Translator 6.55: Step1 - DECIDE ABOUT SLIP
Incoming: On timer "1_ttfx_step1"
Rules:
  
  if ke>1 then Goto "playing_and_slip"
  Goto "playing_normal"
  
  Label "playing_and_slip"
  // do NOT send the pause command,
  // do NOT set the timr
  exit rules, skip Outgoing Action
  
  Label "playing_normal"
  Goto "schedule_stepB"
  
  Label "schedule_stepB"
  Goto "end"
  
  
  Label "end"
  
Outgoing: One-shot timer "1_ttfx_step2": 400 ms delay

[ ] Translator 6.56: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 6.57: Step2 - PAUSE TRACK
Incoming: On timer "1_ttfx_step2"
Rules:
  
  // slip mode exception
  if ke>0 then Goto "playing_with_slip"
  Goto "do_stop_track"
  
  Label "playing_with_slip"
  // this should never happen
  exit rules, skip Outgoing Action
  
  
  Label "do_stop_track"
  //send B-1
  
Outgoing: Note On on ch. 1 with note:11 (0x0B) and velocity:127 (0x7F)

[x] Translator 6.58: Step2 - BEEP
Incoming: On timer "1_ttfx_step2"
Outgoing: One-shot timer "do_audible_beep": 0 ms delay

[x] Translator 6.59: Step2 - cascade
Incoming: On timer "1_ttfx_step2"
Outgoing: One-shot timer "1_ttfx_step3": 150 ms delay

[x] Translator 6.60: Step3 - EFFECT STOP
Incoming: On timer "1_ttfx_step3"
Rules:
  
  // note off
  pp=0
  
  Goto "do_ttfx_stop"
  Label "do_ttfx_stop"
  
Outgoing: Note On on ch. 1 with note:97 (0x61) and velocity:pp

[x] Translator 6.61: Step3 - BEEP
Incoming: On timer "1_ttfx_step3"
Outgoing: One-shot timer "do_audible_beep": 0 ms delay

[x] Translator 6.62: Step3 - cascade
Incoming: On timer "1_ttfx_step3"
Outgoing: One-shot timer "1_ttfx_step4": 150 ms delay

[x] Translator 6.63: Step4 - PAUSE TRACK INV
Incoming: On timer "1_ttfx_step4"
Rules:
  
  // slip mode exception
  if ke>0 then Goto "playing_with_slip"
  Goto "do_stop_track"
  
  Label "playing_with_slip"
  // this should never happen
  exit rules, skip Outgoing Action
  
  
  Label "do_stop_track"
  //send B-1
  
  pp=0
Outgoing: Note On on ch. 1 with note:11 (0x0B) and velocity:pp

[x] Translator 6.64: Step4 - BEEP
Incoming: On timer "1_ttfx_step4"
Outgoing: One-shot timer "do_audible_beep": 0 ms delay

[x] Translator 6.65: Step5 - FLUX PAUSE RELEASE2
Incoming: Note Off on ch. 1 with note:11 (0x0B) and any velocity set 'pp' to velocity
Rules:
  if ke==0 then Goto "not_in_flux_mode"
  Goto "in_flux_mode"
  
  Label "not_in_flux_mode"
  exit rules, skip Outgoing Action
  
  Label "in_flux_mode"
  if zo==0 then Goto "flux_and_paused"
  if zo>=0 then Goto "flux_and_playing"
  
  Label "flux_and_paused"
  exit rules, skip Outgoing Action
  
  
  Label "flux_and_playing"
  Goto "end"
  
  Label "end"
  pp=0
Outgoing: Note On on ch. 1 with note:117 (0x75) and velocity:pp

[ ] Translator 6.66: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.67: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.68: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.69: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.70: -----------  TTFX DECK2 -------
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.71: Step1 - PAUSE PRESS2
Options: swallow
Incoming: Note On on ch. 2 with note:11 (0x0B) and any velocity set 'pp' to velocity
Rules:
  if zp==0 then Goto "is_paused"
  if zp>=0 then Goto "is_playing"
  
  Label "is_paused"
  // this skips the swallow, so it passes the command
  exit rules, skip Outgoing Action
  
  Label "is_playing"
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "2_ttfx_step1": 0 ms delay

[x] Translator 6.72: Step1 - EFFECT START
Incoming: On timer "2_ttfx_step1"
Rules:
  Goto "do_ttfx_start"
  Label "do_ttfx_start"
  
  // send C#7 normal
Outgoing: Note On on ch. 2 with note:97 (0x61) and velocity:127 (0x7F)

[x] Translator 6.73: Step1 - BEEP
Incoming: On timer "2_ttfx_step1"
Outgoing: One-shot timer "do_audible_beep": 0 ms delay

[x] Translator 6.74: Step1 - DECIDE ABOUT SLIP
Incoming: On timer "2_ttfx_step1"
Rules:
  
  if kf>1 then Goto "playing_and_slip"
  Goto "playing_normal"
  
  Label "playing_and_slip"
  // do NOT send the pause command,
  // do NOT set the timr
  exit rules, skip Outgoing Action
  
  Label "playing_normal"
  Goto "schedule_stepB"
  
  Label "schedule_stepB"
  Goto "end"
  
  
  Label "end"
  
Outgoing: One-shot timer "2_ttfx_step2": 400 ms delay

[ ] Translator 6.75: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.76: Step2 - PAUSE TRACK
Incoming: On timer "2_ttfx_step2"
Rules:
  
  // slip mode exception
  if kf>0 then Goto "playing_with_slip"
  Goto "do_stop_track"
  
  Label "playing_with_slip"
  // this should never happen
  exit rules, skip Outgoing Action
  
  
  Label "do_stop_track"
  //send B-1
  
Outgoing: Note On on ch. 2 with note:11 (0x0B) and velocity:127 (0x7F)

[x] Translator 6.77: Step2 - BEEP
Incoming: On timer "2_ttfx_step2"
Outgoing: One-shot timer "do_audible_beep": 0 ms delay

[x] Translator 6.78: Step2 - cascade
Incoming: On timer "2_ttfx_step2"
Outgoing: One-shot timer "2_ttfx_step3": 150 ms delay

[x] Translator 6.79: Step3 - EFFECT STOP
Incoming: On timer "2_ttfx_step3"
Rules:
  
  // note off
  pp=0
  
  Goto "do_ttfx_stop"
  Label "do_ttfx_stop"
  
Outgoing: Note On on ch. 2 with note:97 (0x61) and velocity:pp

[x] Translator 6.80: Step3 - BEEP
Incoming: On timer "2_ttfx_step3"
Outgoing: One-shot timer "do_audible_beep": 0 ms delay

[x] Translator 6.81: Step3 - cascade
Incoming: On timer "2_ttfx_step3"
Outgoing: One-shot timer "2_ttfx_step4": 150 ms delay

[x] Translator 6.82: Step4 - PAUSE TRACK INV
Incoming: On timer "2_ttfx_step4"
Rules:
  
  // slip mode exception
  if kf>0 then Goto "playing_with_slip"
  Goto "do_stop_track"
  
  Label "playing_with_slip"
  // this should never happen
  exit rules, skip Outgoing Action
  
  
  Label "do_stop_track"
  //send B-1
  
  pp=0
Outgoing: Note On on ch. 2 with note:11 (0x0B) and velocity:pp

[x] Translator 6.83: Step4 - BEEP
Incoming: On timer "2_ttfx_step4"
Outgoing: One-shot timer "do_audible_beep": 0 ms delay

[x] Translator 6.84: Step5 - FLUX PAUSE RELEASE2
Incoming: Note Off on ch. 2 with note:11 (0x0B) and any velocity set 'pp' to velocity
Rules:
  if kf==0 then Goto "not_in_flux_mode"
  Goto "in_flux_mode"
  
  Label "not_in_flux_mode"
  exit rules, skip Outgoing Action
  
  Label "in_flux_mode"
  if zp==0 then Goto "flux_and_paused"
  if zp>=0 then Goto "flux_and_playing"
  
  Label "flux_and_paused"
  exit rules, skip Outgoing Action
  
  
  Label "flux_and_playing"
  Goto "end"
  
  Label "end"
  pp=0
Outgoing: Note On on ch. 2 with note:117 (0x75) and velocity:pp

[ ] Translator 6.85: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.86: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.87: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.88: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.89: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.90: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.91: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.92: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.93: LEFT PRESSED
Options: swallow
Incoming: Note On on any channel set 'xx' to ch. with note:112 (0x70) and velocity:127 (0x7F)
Rules:
  if ie!=2 then exit rules, skip Outgoing Action
  if xx>3 then exit rules, skip Outgoing Action
  Goto "left_double_click"
  
  
  //////
  Label "left_double_click"
  
  
  
  
Outgoing: One-shot timer "seek_front": 0 ms delay

[ ] Translator 6.94: SEEK FRONT
Incoming: On timer "seek_front"
Rules:
  if ih==0 then Goto "seek_front"
  if ih>0 then Goto "goto_prev_track"
  
  Label "goto_prev_track"
  exit rules, skip Outgoing Action
  
  
  Label "seek_front"
  xx=if
Outgoing: Note On on ch.'xx' with note:115 (0x73) and velocity:127 (0x7F)

[ ] Translator 6.95: LOAD PREV
Incoming: On timer "seek_front"
Rules:
  if ih==0 then Goto "seek_front"
  if ih>0 then Goto "goto_prev_track"
  
  Label "seek_front"
  exit rules, skip Outgoing Action
  
  
  Label "goto_prev_track"
  xx=if
  
Outgoing: Note On on ch.'xx' with note:115 (0x73) and velocity:127 (0x7F)

[ ] Translator 6.96: Quad Tap 1
Incoming: On timer "seek_front"
Rules: ih=1
Outgoing: One-shot timer "quad_tap": 1000 ms delay

[ ] Translator 6.97: Quad Tap 2
Incoming: On timer "quad_tap"
Rules: ih=0
Outgoing: One-shot timer "quad_tap": 1000 ms delay

[ ] Translator 6.98: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.99: TRACK NEXT
Options: swallow
Incoming: Note On on any channel set 'xx' to ch. with note:113 (0x71) and velocity:127 (0x7F)
Rules:
  if ie!=2 then exit rules, skip Outgoing Action
  if xx>3 then exit rules, skip Outgoing Action
  Goto "right_double_click"
  
  /////
  Label "right_double_click"
  
Outgoing: Note On on ch.'xx' with note:121 (0x79) and velocity:127 (0x7F)

[ ] Translator 6.100: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.101: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 6.102: DEBUG - TRIGGER DECK
Incoming: Note On on any channel set 'xx' to ch. with any note and any velocity
Outgoing: One-shot timer "deck_change": 0 ms delay

[ ] Translator 6.103: DEBUG - send modifier
Options: swallow
Incoming: Note On on ch. 14 with note:0 (0x00) and any velocity set 'qq' to velocity
Rules:
  im=im+1
  if im>7 then im=0
Outgoing: Note On on ch. 16 with note:115 (0x73) and velocity:im

_____________________________________________________________
[x] Preset 7: DDJ IN - working
 Default MIDI IN ports:   From DDJ
 Default MIDI OUT ports:  To Traktor

[ ] Translator 7.0: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 7.1: --------- BEATFX ON/OFF
Incoming: (none)
Outgoing: (none)

[x] Translator 7.2: Track BEATFX PRESS
Options: swallow
Incoming: Note On on ch. 5 with note:71 (0x47) and any velocity set 'pp' to velocity
Rules:
  if h0==0 then oo=127
  if h0>0 then oo=0
  h0=oo
  
Outgoing: One-shot timer "send_beatfx": 0 ms delay

[x] Translator 7.3: Track BEATFX RELEASE
Options: swallow
Incoming: Note Off on ch. 5 with note:71 (0x47) and any velocity set 'pp' to velocity
Rules: // nothing to do
Outgoing: (none)

[x] Translator 7.4: Send CFX1 KNOB
Incoming: On timer "send_beatfx"
Rules:
  
  if h0==0 then Goto "send_beatFX_OFF"
  if h0>0 then Goto "send_beatFX_ON"
  
  Label "send_beatFX_ON"
  Label "send_beatFX_OFF"
  oo=h0
  
Outgoing: Note On on ch. 5 with note:71 (0x47) and velocity:oo

[ ] Translator 7.5: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 7.6: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 7.7: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 7.8: ----
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 8: ------

_____________________________________________________________
[ ] Preset 9: ------

_____________________________________________________________
[x] Preset 10: STATE CH1

[x] Translator 10.0: DDJ IN - Toggle Vinyl DOWN
Options: swallow
Incoming: Note On on ch. 1 with note:23 (0x17) set 'oo' to note with velocity:127 (0x7F) and 'pp' to velocity, on port From DDJ
Rules:
  oo=ko
  if oo==0 then ko=127
  if oo!=0 then ko=0
  
  
  pp=ko
Outgoing: Note On on ch. 1 with note:23 (0x17) and velocity:pp, to port To DDJ

[x] Translator 10.1: DDJ IN - Toggle Vinyl UP
Options: swallow
Incoming: Note Off on ch. 1 with note:23 (0x17) set 'oo' to note with velocity:0 (0x00) and 'pp' to velocity, on port From DDJ
Outgoing: (none)

[x] Translator 10.2: DDJ IN - JOG TOUCH pt1
Options: swallow
Incoming: Note On on ch. 1 with note:54 (0x36) set 'oo' to note with velocity:127 (0x7F) and 'pp' to velocity, on port From DDJ
Outgoing: One-shot timer "jog_touch_1": 0 ms delay

[x] Translator 10.3: DDJ IN - JOG TOUCH pt2
Incoming: On timer "jog_touch_1"
Rules:
  
  // swallow is confusing:
  // https://www.bome.com/support/kb/possible-bug-swallow-not-working
  
  if ko==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 1 with note:54 (0x36) and velocity:127 (0x7F), to port To Traktor

[x] Translator 10.4: DDJ IN - JOG TURN #34
Incoming: Control Change on ch. 1 with CC#:34 (0x22) and any value set 'pp' to value, on port From DDJ
Rules:
  // Jog turn needs to be catched on the DDJ.
  // Traktor does not send this message!!
  
  // force vinyl "ON" case
  ko=127
  
  // Jog turn needs to be catched on the DDJ.
  // Traktor does not send this message!!
  
  // IMPORTANT: "jogging" comes from traktor itself. Thats why
  
  if yo==0 then Goto "cur_stopped"
  if yo==1 then Goto "cur_playing"
  if yo==2 then Goto "cur_cueing"
  if yo==3 then Goto "cur_paused"
  
  if yo==4 then Goto "cur_play_jogging"
  if yo==5 then Goto "cur_paused_jogging"
  if yo==6 then Goto "cur_stopped_jogging"
  
  exit rules, skip Outgoing Action
  
  
  Label "cur_play_jogging"
  Label "cur_stopped_jogging"
  Label "cur_paused_jogging"
  
  // normalize to -16..+16, accumulate in ys
  pp=pp-64
  ys=ys+pp
  
  ////
  oo=36
  
  tt=ys/oo
  rr=ys%oo
  ys=rr
  
  y5=y5+tt
  y5=y5%360
  if y5<0 then y5=y5+360
  
  
  Label "end"
  Label "cur_stopped"
  Label "cur_playing"
  Label "cur_cueing"
  Label "cur_paused"
  
Outgoing: One-shot timer "refresh_jog1": 0 ms delay

[x] Translator 10.5: DDJ IN - JOG TURN #35
Incoming: Control Change on ch. 1 with CC#:35 (0x23) and any value set 'pp' to value, on port From DDJ
Rules:
  
  // force vinyl "OFF" case
  ko=0
Outgoing: One-shot timer "refresh_jog1": 0 ms delay

[x] Translator 10.6: DDJ OUT - NEEDLE SEND
Incoming: On timer "refresh_jog1"
Rules:
  if ks==0 then exit rules, skip Outgoing Action
  
  
  oo=y5
Outgoing: Control Change (14-bit) on ch. 1 with CC#:20 (0x14) and value:oo

[ ] Translator 10.7: -----
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.8: -----
Incoming: (none)
Outgoing: (none)

[x] Translator 10.9: DDJ IN - double click mem
Incoming: Note On on ch. 1 with note:61 (0x3D) and velocity:127 (0x7F) set 'pp' to velocity, on port From DDJ
Rules:
  if ie!=2 then Goto "end"
  Goto "memory_second_click"
  
  Label "memory_second_click"
  oo=za
  if oo==0 then za=1
  if oo==1 then za=0
  Goto "End"
  
  Label "end"
Outgoing: (none)

[ ] Translator 10.10: -----
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.11: -----
Incoming: (none)
Outgoing: (none)

[x] Translator 10.12: JOG TURN timer
Incoming: On timer "master_clock"
Rules:
  // flag: do we need a refresh? yes if we accumulated jog turn, or if time has moved forward
  pp=0
  
  // what is the current state?
  if yo==1 then Goto "cur_playing"
  if yo==2 then Goto "cur_cueing"
  exit rules, skip Outgoing Action
  
  /////
  Label "cur_playing"
  Label "cur_cueing"
  
  // scale: 1 deg per each 10ms
  // this needs to account to 360 deg per 4 beats!
  
  oo=hy
  oo=oo/5
  
  // Reverse support. This ignores slip mode for now
  if ki>0 then oo=oo*-1
  
  y5=y5+oo
  y5=y5%360
  if y5<0 then y5=y5+360
  
  Label "end"
Outgoing: One-shot timer "refresh_jog1": 0 ms delay

[ ] Translator 10.13: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 10.14: TK IN - HOTCUE
Options: swallow
Incoming: Control Change on ch. 1 with CC#:79 (0x4F) and any value set 'pp' to value
Rules:
  if pp==0 then Goto "released_hotcue"
  
  Label "pressed_hotcue"
  
  y5=z5
  
  Label "released_hotcue"
Outgoing: One-shot timer "calc_state1": 10 ms delay

[x] Translator 10.15: TK IN - CUE
Options: swallow
Incoming: Control Change on ch. 1 with CC#:68 (0x44) and any value set 'pp' to value
Rules: z1=pp
Outgoing: One-shot timer "calc_state1": 10 ms delay

[x] Translator 10.16: TK IN - PLAY/PAUSE
Options: swallow
Incoming: Control Change on ch. 1 with CC#:77 (0x4D) and any value set 'pp' to value
Rules:
  zo=pp
  
Outgoing: One-shot timer "calc_state1": 10 ms delay

[x] Translator 10.17: TK IN - JOG TOUCH
Options: swallow
Incoming: Control Change on ch. 1 with CC#:78 (0x4E) and any value set 'pp' to value
Rules:
  zs=pp
  
Outgoing: One-shot timer "calc_state1": 10 ms delay

[x] Translator 10.18: TK IN - PHASE
Options: swallow
Incoming: Control Change on ch. 1 set 'tt' to ch. with CC#:85 (0x55) and any value set 'pp' to value
Rules:
  // je=pp
  
  //oo=pp-32
  //oo=oo*1000
  //oo=oo/32
  
  
  oo=pp-50
  if oo==0 then Goto "zero"
  if oo>=1 then Goto "positive"
  Goto "negative"
  
  Label "positive"
  oo=oo/5
  oo=oo+1
  if oo>10 then oo=10
  Goto "end"
  
  Label "negative"
  oo=oo/5
  oo=oo-1
  Goto "end"
  
  
  Label "zero"
  oo=0
  
  
  Label "end"
  je=oo
  
  // 50 -> 0
  // 51 -> 1
  // 60 -> 1
  // 61 -> 2
  //...
Outgoing: One-shot timer "calc_state1": 10 ms delay

[x] Translator 10.19: DDJ OUT - JOG RING
Incoming: On timer "calc_state1"
Outgoing: Periodic timer "jog_ring1": 125 ms (initial delay: 0 ms)

[ ] Translator 10.20: -------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.21: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 10.22: FLUX ON
Options: swallow
Incoming: Note On on ch. 1 with note:64 (0x40) and any velocity set 'pp' to velocity
Rules: ke=pp
Outgoing: One-shot timer "t_blink1": 0 ms delay

[x] Translator 10.23: FLUX OFF
Options: swallow
Incoming: Note Off on ch. 1 with note:64 (0x40) and any velocity set 'pp' to velocity
Rules: ke=pp
Outgoing: One-shot timer "t_blink1": 0 ms delay

[x] Translator 10.24: REVERSE ON
Incoming: Note On on ch. 1 with note:56 (0x38) and any velocity set 'pp' to velocity
Rules: ki=pp
Outgoing: (none)

[x] Translator 10.25: REVERSE OFF
Incoming: Note Off on ch. 1 with note:56 (0x38) and any velocity set 'pp' to velocity
Rules: ki=pp
Outgoing: (none)

[ ] Translator 10.26: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 10.27: TK IS_LOADED ON
Incoming: Note Off on ch. 7 with note:70 (0x46) and any velocity set 'pp' to velocity
Rules:
  // deck loaded: A#4 / C5      B4 / C#5
  
  ks=pp
Outgoing: One-shot timer "calc_state1": 10 ms delay

[x] Translator 10.28: TK IS_LOADED OFF
Incoming: Note On on ch. 7 with note:70 (0x46) and any velocity set 'pp' to velocity
Rules:
  // deck loaded: A#4 / C5      B4 / C#5
  
  ks=pp
Outgoing: One-shot timer "calc_state1": 10 ms delay

[ ] Translator 10.29: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 10.30: CALC STATE
Incoming: On timer "calc_state1"
Rules:
  // TODO: channels are #2, but variables are #1
  //  copy paste. On #1, change channels.
  //  on #2 change variable names
  
  
  // IN PLAY  "zo"
  // IN CUE:  "z1"
  // IN JOGTOUCH: "zs"
  
  // CURRENT STATE: "yo"
  // NEEDLE FWD?  "xx"
  
  // OUT    "y5"    360 degree  NEEDLE
  // OUT    "z5"    360 degree  CUE_POSITION
  /////////
  
  
  // what is the current state?
  if yo==0 then Goto "cur_stopped"
  if yo==1 then Goto "cur_playing"
  if yo==2 then Goto "cur_cueing"
  if yo==3 then Goto "cur_paused"
  
  if yo==4 then Goto "cur_play_jogging"
  if yo==5 then Goto "cur_paused_jogging"
  if yo==6 then Goto "cur_stopped_jogging"
  Goto "ERROR"
  
  
  ////////////////
  ////////////////  NORMAL STATES
  ////////////////
  
  ////
  Label "cur_stopped"
  if zo==1 then yo=1
  if z1==1 then yo=2
  if zs==1 then yo=6
  Goto "end"
  
  //////
  Label "cur_playing"
  if z1==1 then Goto "playing_pressed_cue"
  if zo==0 then Goto "playing_pressed_pause"
  if zs==1 then Goto "playing_pressed_jog"
  Goto "end"
  
  Label "playing_pressed_cue"
  // move to front
  y5=z5
  yo=0
  Goto "end"
  
  Label "playing_pressed_jog"
  yo=4
  Goto "end"
  
  Label "playing_pressed_pause"
  yo=3
  Goto "end"
  
  //////
  Label "cur_paused"
  if z1==1 then Goto "paused_pressed_cue"
  if zo==1 then Goto "paused_pressed_play"
  if zs==1 then Goto "paused_pressed_jog"
  Goto "end"
  
  Label "paused_pressed_cue"
  // set new cue
  z5=y5
  yo=0
  Goto "end"
  
  Label "paused_pressed_play"
  yo=1
  Goto "end"
  
  Label "paused_pressed_jog"
  yo=5
  Goto "end"
  
  
  
  //////
  Label "cur_cueing"
  if z1==0 then Goto "cueing_released_cue"
  ///if zs==1 then goto "cueing_pressed_jog"  // not implemented!
  Goto "end"
  
  Label "cueing_released_cue"
  //move to front
  y5=z5
  yo=0
  Goto "end"
  
  
  
  
  ////////////////
  ////////////////  JOGING STATES
  ////////////////
  Label "cur_play_jogging"
  if zs==0 then Goto "play_jogging_released_jog"
  if z1==1 then Goto "play_jogging_pressed_cue"
  Goto "end"
  
  Label "play_jogging_released_jog"
  yo=1
  Goto "end"
  
  Label "play_jogging_pressed_cue"
  // set new cue
  z5=y5
  // yo=0   /// NOT CHANGE !!
  Goto "end"
  
  
  
  /////
  Label "cur_stopped_jogging"
  if zs==0 then Goto "stop_jogging_released_jog"
  if z1==1 then Goto "stop_jogging_pressed_cue"
  Goto "end"
  
  Label "stop_jogging_released_jog"
  yo=3
  Goto "end"
  
  Label "stop_jogging_pressed_cue"
  // set new cue
  z5=y5
  yo=0
  Goto "end"
  
  
  
  /////
  Label "cur_paused_jogging"
  if zs==0 then Goto "pause_jogging_released_jog"
  if z1==1 then Goto "pause_jogging_pressed_cue"
  Goto "end"
  
  Label "pause_jogging_released_jog"
  yo=3
  Goto "end"
  
  Label "pause_jogging_pressed_cue"
  // set new cue
  z5=y5
  yo=0
  Goto "end"
  
  
  
  
  //////////
  Label "end"
  
  // Below is just to debug
  // exit rules, execute Outgoing Action
  
  // show new state
  if yo==0 then Goto "now_stopped"
  if yo==1 then Goto "now_playing"
  if yo==2 then Goto "now_cueing"
  if yo==3 then Goto "now_paused"
  
  if yo==4 then Goto "now_play_jogging"
  if yo==5 then Goto "now_paused_jogging"
  if yo==6 then Goto "now_stopped_jogging"
  Goto "ERROR"
  
  Label "now_stopped"
  Label "now_playing"
  Label "now_cueing"
  Label "now_paused"
  
  Label "now_play_jogging"
  Label "now_paused_jogging"
  Label "now_stopped_jogging"
Outgoing: One-shot timer "refresh_cue1": 0 ms delay

[x] Translator 10.31: REFRESH  jog
Incoming: On timer "refresh_cue1"
Rules:
  if ks==0 then exit rules, skip Outgoing Action
  
Outgoing: One-shot timer "refresh_jog1": 0 ms delay

[x] Translator 10.32: NEEDLE MARKER SEND
Incoming: On timer "refresh_cue1"
Rules:
  if ks==0 then exit rules, skip Outgoing Action
  
  oo=z5
  
Outgoing: Control Change (14-bit) on ch. 1 with CC#:23 (0x17) and value:oo

[x] Translator 10.33: HIDE SCREENS
Incoming: On timer "refresh_cue1"
Rules:
  Goto "loaded"
  
  
  if ks==0 then Goto "unloaded"
  if ks>0 then Goto "loaded"
  
  Label "unloaded"
  oo=127
  Goto "end"
  
  Label "loaded"
  oo=0
  Goto "end"
  
  Label "end"
Outgoing: Note On on ch. 1 with note:93 (0x5D) and velocity:oo

[ ] Translator 10.34: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 10.35: KEY value (jog touch)
Incoming: On timer "refresh_cue1"
Rules:
  // jog touch:
  //if zt==0 then pp=0
  //if zt>0 then pp=1
  
  
  if je==0 then pp=0
  if je!=0 then pp=9
  
  
  
  // use this to disable this info
  //pp=0
  
  
  // 0 = disabled
  // 1 = C
  // 5 = D
  // 9 = E
  // 11 = F
  // 15 = G
  // 19 = A
  // 23 = B
  
Outgoing: Note On on ch. 1 with note:73 (0x49) and velocity:pp

[x] Translator 10.36: KEY variaton
Incoming: On timer "refresh_cue1"
Rules:
  
  pp=je
  pp=pp+13
  
  // 0 = -12
  // 13 = 0
  // 25 = +12
Outgoing: Note On on ch. 1 with note:74 (0x4A) and velocity:pp

[ ] Translator 10.37: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.38: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.39: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 10.40: END WARNING
Options: swallow
Incoming: Control Change on ch. 1 with CC#:82 (0x52) and any value set 'oo' to value
Rules:
  // deprecated
  
  
Outgoing: (none)

[x] Translator 10.41: DECK VOLUME (DDJ-IN)
Incoming: Control Change (14-bit) on ch. 1 with CC#:19 (0x13) and any value set 'oo' to value, on port From DDJ
Rules:
  // calculate new value from DDJ
  if oo<1612 then pp=0
  if oo>=1612 then pp=1
  
  // if nothing changed, do nto trigger Timer
  if pp==jo then exit rules, skip Outgoing Action
  
  jo=pp
  // trigger timer
Outgoing: Periodic timer "jog_ring2": 125 ms (initial delay: 0 ms)

[ ] Translator 10.42: DECK VOLUME (TK)
Options: swallow
Incoming: Control Change on ch. 1 with CC#:83 (0x53) and any value set 'oo' to value
Rules: jo=oo
Outgoing: Periodic timer "jog_ring1": 125 ms (initial delay: 0 ms)

[x] Translator 10.43: JOGFX STATE
Options: swallow
Incoming: Control Change on ch. 1 with CC#:84 (0x54) and any value set 'oo' to value
Rules:
  
  if oo==0 then Goto "scratch"
  if oo==1 then Goto "jogFX"
  if oo==2 then Goto "jogFX"
  if oo==3 then Goto "loop_adjust"
  if oo==5 then Goto "grid_adjust"
  if oo==6 then Goto "grid_adjust"
  if oo==7 then Goto "shift1"
  Goto "scratch"
  
  ////
  Label "jogFX"
  Label "loop_adjust"
  Label "grid_adjust"
  Label "grid_adjust"
  Label "shift1"
  pp=1
  Goto "end"
  
  Label "scratch"
  pp=0
  Goto "end"
  
  //////
  Label "end"
  gx=pp
Outgoing: Periodic timer "jog_ring1": 125 ms (initial delay: 0 ms)

[ ] Translator 10.44: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.45: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 10.46: RESET SCREENS
Options: swallow
Incoming: Control Change on ch. 1 with CC#:77 (0x4D) and value:0 (0x00) set 'oo' to value
Rules:
  // reset seek
  ja=-3
  jb=-3
  
Outgoing: One-shot timer "calc1": 0 ms delay

[ ] Translator 10.47: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.48: KEY value
Options: swallow
Incoming: Control Change on ch. 1 with CC#:81 (0x51) and any value set 'oo' to value
Rules:
  // 0 == disable key
  // 1 == key "C"
  //pp=0
  
  pp=1
Outgoing: Note On on ch. 1 with note:73 (0x49) and velocity:pp

[ ] Translator 10.49: KEY variaton
Options: swallow
Incoming: Control Change on ch. 1 with CC#:81 (0x51) and any value set 'oo' to value
Rules: pp=oo
Outgoing: Note On on ch. 1 with note:74 (0x4A) and velocity:pp

[ ] Translator 10.50: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.51: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 10.52: SHIFT1
Options: swallow
Incoming: Control Change on ch. 1 with CC#:69 (0x45) and any value set 'oo' to value
Rules:
  // to simplify
  gb=oo
  ga=oo
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 10.53: SHIFT2
Options: swallow
Incoming: Control Change on ch. 1 with CC#:73 (0x49) and any value set 'oo' to value
Rules:
  
  
  // new code
  i9=oo
  
  
  /// old code
  
  
  if ga==0 then Goto "handle_it"
  if ga==2 then Goto "handle_it"
  Goto "end"
  
  Label "handle_it"
  if oo==1 then ga=2
  if oo==0 then ga=0
  
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[ ] Translator 10.54: CYCLE TIME MODE
Options: swallow
Incoming: Control Change on ch. 1 with CC#:74 (0x4A) and value:0 (0x00)
Rules:
  oo=za
  if oo==0 then za=1
  if oo==1 then za=0
  
  // if oo==2 then za=0
  
  
  
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 10.55: LOOP active
Options: swallow
Incoming: Control Change on ch. 1 with CC#:76 (0x4C) and any value set 'oo' to value
Rules:
  le=oo
  
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[ ] Translator 10.56: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 10.57: LOOP size
Options: swallow
Incoming: Control Change on ch. 1 with CC#:70 (0x46) and any value set 'oo' to value
Rules:
  if oo<=4 then pp=0
  if oo==5 then pp=1
  if oo==6 then pp=2
  if oo==7 then pp=4
  if oo==8 then pp=8
  if oo==9 then pp=16
  if oo>=10 then pp=32
  
  // external answer
  l1=pp
  
  // loop case
  if n5==1 then n1=l1
  
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 10.58: LOOP size (timer)
Options: swallow
Incoming: Control Change on ch. 1 with CC#:70 (0x46) and any value set 'oo' to value
Rules: kx=1
Outgoing: One-shot timer "preview1": 2000 ms delay

[x] Translator 10.59: MOVE size
Options: swallow
Incoming: Control Change on ch. 1 with CC#:71 (0x47) and any value set 'oo' to value
Rules:
  if oo<=5 then pp=0
  if oo==6 then pp=1
  if oo==7 then pp=2
  if oo==8 then pp=4
  if oo==9 then pp=8
  if oo==10 then pp=16
  if oo==11 then pp=32
  if oo>=12 then pp=9999
  
  n1=pp
  
  // loop case
  if oo==12 then n5=1
  if oo!=12 then n5=0
  
  if n5==1 then n1=l1
  
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 10.60: MOVE size (timer)
Options: swallow
Incoming: Control Change on ch. 1 with CC#:71 (0x47) and any value set 'oo' to value
Rules: kx=1
Outgoing: One-shot timer "preview1": 2000 ms delay

[x] Translator 10.61: TEMPO range
Options: swallow
Incoming: Control Change on ch. 1 with CC#:66 (0x42) and any value set 'oo' to value
Rules:
  
  if oo==0 then pp=2
  if oo==1 then pp=4
  if oo==2 then pp=6
  if oo==3 then pp=8
  if oo==4 then pp=10
  if oo==5 then pp=12
  if oo==6 then pp=14
  if oo==7 then pp=16
  if oo==8 then pp=18
  if oo==9 then pp=20
  if oo==10 then pp=25
  if oo==11 then pp=35
  if oo==12 then pp=50
  if oo==13 then pp=100
  
  // soft takeover
  i5=pp
  
  
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 10.62: TEMPO range (timer)
Options: swallow
Incoming: Control Change on ch. 1 with CC#:66 (0x42) and any value set 'oo' to value
Rules: kx=1
Outgoing: One-shot timer "preview1": 2000 ms delay

[x] Translator 10.63: SHIFT PREVIEWS - Stop Timer
Incoming: On timer "preview1"
Rules: kx=0
Outgoing: One-shot timer "calc1": 0 ms delay

[ ] Translator 10.64: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.65: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.66: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.67: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.68: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.69: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.70: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.71: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.72: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.73: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.74: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.75: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 10.76: -----------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 11: BLINK CH1

[ ] Translator 11.0: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 11.1: BLINK JOG RING
Incoming: On timer "jog_ring1"
Rules:
  // deck unload case
  if ks==0 then exit rules, skip Outgoing Action
  
  
  // advance state
  oo=gs
  gs=gs+1
  gs=gs%16
  
  // Scratch indicator
  if zs==1 then Goto "jog_touch"
  
  
  // no volume case
  if jo==0 then Goto "volume_zero"
  
  // end-warning cases
  if na>960 then Goto "do_blink_veryfast"
  if na>930 then Goto "do_blink_fast"
  if na>900 then Goto "do_blink_slow"
  
  
  // General warning cases
  if gx>0 then Goto "jogFX"
  if ki>0 then Goto "reverse"
  //if ke>0 then Goto "flux"
  
  // catch-all case
  Goto "show_solid_on"
  
  
  Label "volume_zero"
  Goto "show_solid_off"
  
  Label "jog_touch"
  Goto "show_solid_off"
  
  Label "jogFX"
  Label "reverse"
  Label "flux"
  Goto "do_blink_very_slow"
  
  
  
  
  /////////////////
  Label "do_blink_very_slow"
  oo=oo&8
  if oo==0 then Goto "show_solid_on"
  Goto "show_solid_off"
  
  
  
  Label "do_blink_slow"
  oo=oo&4
  if oo==0 then Goto "show_solid_on"
  Goto "show_solid_off"
  
  
  
  Label "do_blink_fast"
  oo=oo&2
  if oo==0 then Goto "show_solid_on"
  Goto "show_solid_off"
  
  
  Label "do_blink_veryfast"
  oo=oo&1
  if oo==0 then Goto "show_solid_on"
  Goto "show_solid_off"
  
  
  
  Label "show_solid_off"
  pp=0
  Goto "end"
  
  Label "show_solid_on"
  pp=1
  Goto "end"
  
  Label "end"
  
  
Outgoing: Note On on ch. 1 with note:91 (0x5B) and velocity:pp

[ ] Translator 11.2: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 11.3: FALLTROUGH BLINK
Incoming: On timer "calc_state1"
Outgoing: Periodic timer "t_blink1": 500 ms (initial delay: 0 ms)

[x] Translator 11.4: BLINK CUE
Incoming: On timer "t_blink1"
Rules:
  
  if ks==0 then Goto "unloaded"
  if ks>0 then Goto "loaded"
  
  Label "loaded"
  Label "unloaded"
  
  if ks==0 then Goto "tick"
  /////
  
  if yo==0 then Goto "now_stopped"
  if yo==1 then Goto "now_playing"
  if yo==2 then Goto "now_cueing"
  if yo==3 then Goto "now_paused"
  if yo==4 then Goto "now_play_jogging"
  if yo==5 then Goto "now_paused_jogging"
  if yo==6 then Goto "now_stopped_jogging"
  Goto "ERROR"
  
  Label "now_stopped"
  Label "now_cueing"
  Label "now_playing"
  pp=127
  ge=0
  Goto "end"
  
  /////////
  Label "now_paused_jogging"
  Label "now_stopped_jogging"
  Label "now_play_jogging"
  Label "now_paused"
  
  if ge==0 then Goto "tick"
  if ge==1 then Goto "tock"
  Goto "tock"
  
  Label "tick"
  pp=0
  ge=1
  Goto "end"
  
  Label "tock"
  pp=127
  ge=0
  Goto "end"
  
  Label "end"
Outgoing: Note On on ch. 1 with note:12 (0x0C) and velocity:pp

[x] Translator 11.5: BLINK PLAY
Incoming: On timer "t_blink1"
Rules:
  if ks==0 then Goto "show_solid_off"
  ////
  
  if yo==0 then Goto "now_stopped"
  if yo==1 then Goto "now_playing"
  if yo==2 then Goto "now_cueing"
  if yo==3 then Goto "now_paused"
  if yo==4 then Goto "now_play_jogging"
  if yo==5 then Goto "now_paused_jogging"
  if yo==6 then Goto "now_stopped_jogging"
  Goto "ERROR"
  
  
  Label "now_playing"
  Label "now_cueing"
  Label "now_play_jogging"
  Label "now_paused_jogging"
  Goto "show_solid_on"
  
  /////////
  Label "now_stopped"
  Label "now_paused"
  Label "now_stopped_jogging"
  Goto "do_blink"
  
  
  Label "do_blink"
  if gi==1 then Goto "show_solid_off"
  if gi==0 then Goto "show_solid_on"
  
  
  Label "show_solid_off"
  pp=0
  gi=0
  Goto "end"
  
  Label "show_solid_on"
  pp=127
  gi=1
  Goto "end"
  
  Label "end"
Outgoing: Note On on ch. 1 with note:11 (0x0B) and velocity:pp

[ ] Translator 11.6: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 11.7: FALLTROUGH CALC
Incoming: On timer "jog_ring1"
Outgoing: One-shot timer "calc1": 0 ms delay

[ ] Translator 11.8: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 11.9: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 11.10: BLINK SLIP
Incoming: On timer "t_blink1"
Rules:
  
  if ke==0 then Goto "flux_off"
  if ke>0 then Goto "flux_on"
  
  
  Label "flux_off"
  Goto "show_solid_off"
  
  Label "flux_on"
  pp=gs
  pp=pp%8
  if pp<4 then Goto "show_solid_off"
  Goto "show_solid_on"
  
  Label "show_solid_off"
  pp=0
  Goto "end"
  
  Label "show_solid_on"
  pp=127
  Goto "end"
  
  Label "end"
  
Outgoing: Note On on ch. 1 with note:64 (0x40) and velocity:pp

[ ] Translator 11.11: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 11.12: -----------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 12: MAIN CH1

[ ] Translator 12.0: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 12.1: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 12.2: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 12.3: DDJ IN - tempo soft takeover
Incoming: Control Change (14-bit) on ch. 1 set 'xx' to ch. with CC#:0 (0x00) and any value set 'pp' to value, on port From DDJ
Rules:
  // globals:
  //  k2 = actual value
  //  i6 = tempo range
  ////////
  
  
  oo=16383/2
  pp=pp-oo
  pp=pp*1000
  pp=pp/oo
  qq=pp
  // pp now ranges betwen -1000 and 1000
  pp=pp*i5
  pp=pp/100
  //////////////////
  
  ji=pp
  js=1
  
  ////////
  //// auto tempo enlarger
  if qq<=-980 then Goto "overflow"
  if qq>=980 then Goto "overflow"
  
  if qq>900 then Goto "end"
  if qq<-900 then Goto "end"
  Goto "inside_catch_zone"
  
  
  ////
  Label "inside_catch_zone"
  if io==1 then io=0
  if io==2 then io=0
  Goto "end"
  
  ////
  Label "overflow"
  if i5==100 then Goto "overflow_100"
  if io==0 then io=1
  Goto "end"
  
  Label "overflow_100"
  Goto "end"
  
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "tempo1": 0 ms delay

[x] Translator 12.4: Cascade
Incoming: On timer "tempo1"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.5: Soft tempo - preview Arm
Incoming: On timer "tempo1"
Outgoing: One-shot timer "tempo_soft1": 1500 ms delay

[x] Translator 12.6: Soft tempo - Preview Expire
Incoming: On timer "tempo_soft1"
Rules: js=0
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.7: AUTO TEMPO RANGE - ENLARGER
Incoming: On timer "calc1"
Rules:
  if io==1 then Goto "do_enlarge"
  exit rules, skip Outgoing Action
  
  
  Label "do_enlarge"
  io=2
  
Outgoing: Note On on ch. 1 with note:96 (0x60) and velocity:127 (0x7F), to port To Traktor

[ ] Translator 12.8: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 12.9: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 12.10: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 12.11: tempo adjust S1
Options: swallow
Incoming: Control Change on ch. 1 with CC#:101 (0x65) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo-100
  g5=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g1=oo
  go=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.12: tempo adjust S2
Options: swallow
Incoming: Control Change on ch. 1 with CC#:102 (0x66) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo-75
  g5=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g1=oo
  go=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.13: tempo adjust S3
Options: swallow
Incoming: Control Change on ch. 1 with CC#:103 (0x67) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo-50
  g5=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g1=oo
  go=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.14: tempo adjust S4
Options: swallow
Incoming: Control Change on ch. 1 with CC#:104 (0x68) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo-25
  g5=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g1=oo
  go=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.15: tempo adjust S5
Options: swallow
Incoming: Control Change on ch. 1 with CC#:105 (0x69) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo-0
  g5=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g1=oo
  go=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.16: tempo adjust S6
Options: swallow
Incoming: Control Change on ch. 1 with CC#:106 (0x6A) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo+25
  g5=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g1=oo
  go=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.17: tempo adjust S7
Options: swallow
Incoming: Control Change on ch. 1 with CC#:107 (0x6B) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo+50
  g5=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g1=oo
  go=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.18: tempo adjust S8
Options: swallow
Incoming: Control Change on ch. 1 with CC#:108 (0x6C) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo+75
  g5=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g1=oo
  go=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.19: tempo adjust FALLBACK
Options: swallow
Incoming: Control Change on ch. 1 with CC#:109 (0x6D) and any value set 'pp' to value
Rules:
  oo=pp-50
  oo=oo*2
  g5=100
  
  ///////// Decision tree
  //io=0
  //if pp<=2 then Goto "overflow"
  //if pp>=98 then Goto "overflow"
  
  /// ignore this one if we already saw an HR signal
  if go!=0 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g1=oo
  go=1
  Goto "end"
  
  
  /// Overflow
  Label "overflow"
  if i5==100 then Goto "overflow_100"
  
  io=1
  Goto "end"
  
  Label "overflow_100"
  Goto "end"
  
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "calc1": 0 ms delay

[ ] Translator 12.20: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 12.21: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 12.22: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 12.23: bpm value S1
Options: swallow
Incoming: Control Change on ch. 1 with CC#:110 (0x6E) and any value set 'pp' to value
Rules:
  oo=pp*75
  oo=oo+0
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.24: bpm value S2
Options: swallow
Incoming: Control Change on ch. 1 with CC#:111 (0x6F) and any value set 'pp' to value
Rules:
  oo=pp*25
  oo=oo+7500
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.25: bpm value S3
Options: swallow
Incoming: Control Change on ch. 1 with CC#:112 (0x70) and any value set 'pp' to value
Rules:
  oo=pp*10
  oo=oo+10000
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.26: bpm value S4
Options: swallow
Incoming: Control Change on ch. 1 with CC#:113 (0x71) and any value set 'pp' to value
Rules:
  oo=pp*10
  oo=oo+11000
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.27: bpm value S5
Options: swallow
Incoming: Control Change on ch. 1 with CC#:114 (0x72) and any value set 'pp' to value
Rules:
  oo=pp*5
  oo=oo+12000
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.28: bpm value S6
Options: swallow
Incoming: Control Change on ch. 1 with CC#:115 (0x73) and any value set 'pp' to value
Rules:
  oo=pp*5
  oo=oo+12500
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.29: bpm value S7
Options: swallow
Incoming: Control Change on ch. 1 with CC#:116 (0x74) and any value set 'pp' to value
Rules:
  oo=pp*5
  oo=oo+13000
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.30: bpm value S8
Options: swallow
Incoming: Control Change on ch. 1 with CC#:117 (0x75) and any value set 'pp' to value
Rules:
  oo=pp*5
  oo=oo+13500
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.31: bpm value S9
Options: swallow
Incoming: Control Change on ch. 1 with CC#:118 (0x76) and any value set 'pp' to value
Rules:
  oo=pp*5
  oo=oo+14000
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.32: bpm value S10
Options: swallow
Incoming: Control Change on ch. 1 with CC#:119 (0x77) and any value set 'pp' to value
Rules:
  oo=pp*10
  oo=oo+14500
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.33: bpm value S11
Options: swallow
Incoming: Control Change on ch. 1 with CC#:120 (0x78) and any value set 'pp' to value
Rules:
  oo=pp*45
  oo=oo+15500
  h5=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h1=oo
  ho=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[x] Translator 12.34: bpm value FALLBACK
Options: swallow
Incoming: Control Change on ch. 1 with CC#:121 (0x79) and any value set 'pp' to value
Rules:
  oo=pp*200
  oo=oo+0
  h5=100
  
  /// ignore this one if we saw an HR signal
  if ho!=0 then Goto "end"
  
  Label "Low Resolution"
  h1=oo
  ho=1
  
  Label "end"
Outgoing: One-shot timer "calc1": 0 ms delay

[ ] Translator 12.35: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 12.36: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 12.37: ADD A DELAY
Incoming: On timer "calc1"
Rules:
  if hs==1 then exit rules, skip Outgoing Action
  hs=1
  
Outgoing: One-shot timer "calc1_b": 30 ms delay

[x] Translator 12.38: merge HR values
Incoming: On timer "calc1_b"
Rules:
  // Only accept a new tempo range if we received tempo position as well
  if go>0 then i1=i5
  
  // Tempo value lock (0: none; 1: LR; 2: HR)
  go=0
  
  // BPM value lock (0: none; 1: LR; 2: HR)
  ho=0
  
  //unlock 30ms timer
  hs=0
  
  
Outgoing: One-shot timer "calc1_c": 0 ms delay

[x] Translator 12.39: Calculations
Incoming: On timer "calc1_c"
Rules:
  // use this to skip calcs (debug faster)
  // exit rules, execute Outgoing Action
  
  
  /// LINK LOOP & MOVE VALUES
  if n5==1 then n1=l1
  
  /// CALC TEMPO ADJ
  // todo: move to local variables j1, j5, etc
  j1=g1*i1
  j5=g5*1
  
  ss=j5/10
  oo=j1/ss
  k1=oo
  
  /// CALC NEW BPM
  m1=j1
  m5=j5*100
  
  m1=m1+m5
  m5=m5
  
  m1=m1*h1
  m5=m5*h5
  
  ss=m5/10
  oo=m1/ss
  k5=oo
  
  
  ///// SOFT TAKEOVER TEMPO
  //////// are we in soft takeover?
  pp=ji
  xx=k1-5
  uu=k1+5
  
  if pp<xx then Goto "different_tempo_values"
  if pp>uu then Goto "different_tempo_values"
  Goto "same_tempo_value"
  
  Label "same_tempo_value"
  js=0
  Goto "end"
  
  
  Label "different_tempo_values"
  Goto "end"
  
  
  Label "end"
  
Outgoing: One-shot timer "calc1_d": 0 ms delay

[ ] Translator 12.40: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 12.41: SEND BPM
Incoming: On timer "calc1_d"
Rules:
  if kx==1 then Goto "send_native_bpm"
  if ga==1 then Goto "send_native_bpm"
  Goto "send_actual"
  
  
  Label "send_actual"
  oo=k5
  Goto "end"
  
  Label "send_native_bpm"
  oo=h1
  oo=oo*10
  oo=oo/h5
  Goto "end"
  
  Label "end"
Outgoing: Control Change (14-bit) on ch. 1 with CC#:21 (0x15) and value:oo

[x] Translator 12.42: SEND PERCENTAGE
Incoming: On timer "calc1_d"
Rules:
  if ga==1 then Goto "pressing_shift"
  if kx==1 then Goto "previwing_after_change"
  if js>=1 then Goto "blink_tempo"
  Goto "send_actual"
  
  
  Label "pressing_shift"
  Label "previwing_after_change"
  Goto "send_tempo_range"
  
  
  Label "send_tempo_range"
  oo=i5
  oo=oo*10
  Goto "end"
  
  
  Label "send_actual"
  oo=k1
  Goto "end"
  
  
  Label "blink_tempo"
  // Goto "show_wanted"
  pp=gs
  pp=pp%4
  if pp<2 then Goto "show_nothing"
  Goto "show_wanted"
  
  
  Label "show_nothing"
  oo=2001
  Goto "end"
  
  
  Label "show_wanted"
  oo=ji
  Goto "end"
  
  
  
  Label "end"
  oo=oo+1000
  
Outgoing: Control Change (14-bit) on ch. 1 with CC#:22 (0x16) and value:oo

[ ] Translator 12.43: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 12.44: FALLTROUGH
Incoming: On timer "calc1_d"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

_____________________________________________________________
[ ] Preset 13: SEEK CH1

[ ] Translator 13.0: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 13.1: IN seek position S1
Incoming: Control Change on ch. 1 with CC#:90 (0x5A) and any value set 'oo' to value
Rules:
  pp=oo+0
  
  
  /////////
  no=no+1
  if no==1 then Goto "simple case"
  
  if pp<ja then Goto "going left"
  if pp>ja then Goto "going right"
  
  Label "going left"
  if pp<na then na=pp
  Goto "end"
  
  Label "going right"
  if pp>na then na=pp
  Goto "end"
  
  Label "simple case"
  na=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

[x] Translator 13.2: IN seek position S2
Incoming: Control Change on ch. 1 with CC#:91 (0x5B) and any value set 'oo' to value
Rules:
  pp=oo+100
  
  
  /////////
  no=no+1
  if no==1 then Goto "simple case"
  
  if pp<ja then Goto "going left"
  if pp>ja then Goto "going right"
  
  Label "going left"
  if pp<na then na=pp
  Goto "end"
  
  Label "going right"
  if pp>na then na=pp
  Goto "end"
  
  Label "simple case"
  na=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

[x] Translator 13.3: IN seek position S3
Incoming: Control Change on ch. 1 with CC#:92 (0x5C) and any value set 'oo' to value
Rules:
  pp=oo+200
  
  
  /////////
  no=no+1
  if no==1 then Goto "simple case"
  
  if pp<ja then Goto "going left"
  if pp>ja then Goto "going right"
  
  Label "going left"
  if pp<na then na=pp
  Goto "end"
  
  Label "going right"
  if pp>na then na=pp
  Goto "end"
  
  Label "simple case"
  na=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

[x] Translator 13.4: IN seek position S4
Incoming: Control Change on ch. 1 with CC#:93 (0x5D) and any value set 'oo' to value
Rules:
  pp=oo+300
  
  
  /////////
  no=no+1
  if no==1 then Goto "simple case"
  
  if pp<ja then Goto "going left"
  if pp>ja then Goto "going right"
  
  Label "going left"
  if pp<na then na=pp
  Goto "end"
  
  Label "going right"
  if pp>na then na=pp
  Goto "end"
  
  Label "simple case"
  na=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

[x] Translator 13.5: IN seek position S5
Incoming: Control Change on ch. 1 with CC#:94 (0x5E) and any value set 'oo' to value
Rules:
  pp=oo+400
  
  
  /////////
  no=no+1
  if no==1 then Goto "simple case"
  
  if pp<ja then Goto "going left"
  if pp>ja then Goto "going right"
  
  Label "going left"
  if pp<na then na=pp
  Goto "end"
  
  Label "going right"
  if pp>na then na=pp
  Goto "end"
  
  Label "simple case"
  na=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

[x] Translator 13.6: IN seek position S6
Incoming: Control Change on ch. 1 with CC#:95 (0x5F) and any value set 'oo' to value
Rules:
  pp=oo+500
  
  
  /////////
  no=no+1
  if no==1 then Goto "simple case"
  
  if pp<ja then Goto "going left"
  if pp>ja then Goto "going right"
  
  Label "going left"
  if pp<na then na=pp
  Goto "end"
  
  Label "going right"
  if pp>na then na=pp
  Goto "end"
  
  Label "simple case"
  na=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

[x] Translator 13.7: IN seek position S7
Incoming: Control Change on ch. 1 with CC#:96 (0x60) and any value set 'oo' to value
Rules:
  pp=oo+600
  
  
  /////////
  no=no+1
  if no==1 then Goto "simple case"
  
  if pp<ja then Goto "going left"
  if pp>ja then Goto "going right"
  
  Label "going left"
  if pp<na then na=pp
  Goto "end"
  
  Label "going right"
  if pp>na then na=pp
  Goto "end"
  
  Label "simple case"
  na=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

[x] Translator 13.8: IN seek position S8
Incoming: Control Change on ch. 1 with CC#:97 (0x61) and any value set 'oo' to value
Rules:
  pp=oo+700
  
  
  /////////
  no=no+1
  if no==1 then Goto "simple case"
  
  if pp<ja then Goto "going left"
  if pp>ja then Goto "going right"
  
  Label "going left"
  if pp<na then na=pp
  Goto "end"
  
  Label "going right"
  if pp>na then na=pp
  Goto "end"
  
  Label "simple case"
  na=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

[x] Translator 13.9: IN seek position S9
Incoming: Control Change on ch. 1 with CC#:98 (0x62) and any value set 'oo' to value
Rules:
  pp=oo+800
  
  
  /////////
  no=no+1
  if no==1 then Goto "simple case"
  
  if pp<ja then Goto "going left"
  if pp>ja then Goto "going right"
  
  Label "going left"
  if pp<na then na=pp
  Goto "end"
  
  Label "going right"
  if pp>na then na=pp
  Goto "end"
  
  Label "simple case"
  na=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

[x] Translator 13.10: IN seek position S10
Incoming: Control Change on ch. 1 with CC#:99 (0x63) and any value set 'oo' to value
Rules:
  pp=oo+900
  
  
  /////////
  no=no+1
  if no==1 then Goto "simple case"
  
  if pp<ja then Goto "going left"
  if pp>ja then Goto "going right"
  
  Label "going left"
  if pp<na then na=pp
  Goto "end"
  
  Label "going right"
  if pp>na then na=pp
  Goto "end"
  
  Label "simple case"
  na=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock1": 0 ms delay

[ ] Translator 13.11: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 13.12: ADD A DELAY
Incoming: On timer "calc_clock1"
Rules:
  if he==1 then exit rules, skip Outgoing Action
  he=1
  
Outgoing: One-shot timer "calc_clock1_b": 30 ms delay

[x] Translator 13.13: Merge HR Seek
Incoming: On timer "calc_clock1_b"
Rules:
  
  no=0
  
  // lock 30ms
  he=0
Outgoing: One-shot timer "calc_clock1_c": 0 ms delay

[x] Translator 13.14: Calc Clock
Incoming: On timer "calc_clock1_c"
Rules:
  /// nothing happened?
  if na==ja then Goto "plot"
  
  
  /// FORWARD SEEK?
  oo=na
  pp=ja+1
  ja=oo
  if pp==oo then Goto "seek_ok"
  Goto "skipped"
  
  /// WE SKIPPED
  Label "skipped"
  ka=hz
  ya=na
  ia=0
  Goto "plot"
  
  /// SEEK OK
  Label "seek_ok"
  ia=ia+1
  if ia==5 then Goto "recalculate"
  Goto "plot"
  
  //if ho!=0 then Goto "plot"
  /// WHY THIS HO??
  
  
  
  /// RECALCULATE
  Label "recalculate"
  rr=hz-ka
  ss=na-ya
  
  // exit if timer is not running
  if rr==0 then Goto "reset"
  // exit if we stopped too much. Normal Limit = 16
  if rr>250 then Goto "reset"
  
  
  rr=rr*1000
  rr=rr/ss
  qq=1000/hy
  rr=rr/qq
  
  // new value calculated + lock
  ha=rr
  ho=1
  
  
  Goto "plot"
  
  /// RESET
  Label "reset"
  Goto "skipped"
  
  ja=-2
  ho=0
  Goto "plot"
  
  
  //// PLOT FINAL VALUES
  Label "plot"
  // elapsed time
  pp=ha*na
  // total track length (needs to be before REMAIN)
  qq=ha*1000
  // remain time
  rr=qq-pp
  
  // DECIDE WHAT TO SHOW
  //if ga==2 then oo=qq    // disabled preview
  //if ga==2 then Goto "end"  //disabed preview
  
  
  if za==0 then oo=pp
  if za==0 then Goto "end"
  
  if za==1 then oo=rr
  if za==1 then Goto "end"
  oo=pp
  
  
  /////
  Label "end"
  oo=oo/1000
  oo=oo/1
  ma=oo
Outgoing: One-shot timer "send_timestamp1": 0 ms delay

[ ] Translator 13.15: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 13.16: send sign
Incoming: On timer "send_timestamp1"
Rules:
  if ga==2 then Goto "preview_total"
  if ga>=1 then Goto "positive"
  
  
  Label "preview_total"
  if hm==0 then Goto "show_time"
  Goto "show_positive"
  
  
  Label "show_time"
  if za==0 then Goto "show_positive"
  if za==1 then Goto "show_negative"
  Goto "show_positive"
  
  Label "show_positive"
  qq=0
  Goto "end"
  
  Label "show_negative"
  qq=127
  Goto "end"
  
  Label "end"
Outgoing: Note On on ch. 1 with note:68 (0x44) and velocity:qq

[x] Translator 13.17: send minutes
Incoming: On timer "send_timestamp1"
Rules:
  if ga==2 then Goto "show time"
  if ga==1 then Goto "show loop"
  if ga>=3 then Goto "show loop"
  Goto "show time"
  
  Label "show loop"
  oo=gs
  // oo=oo&8
  // if oo<2 then Goto "blink loop"
  qq=l1
  Goto "end"
  
  Label "blink loop"
  qq=100
  Goto "end"
  
  Label "show time"
  qq=ma
  qq=qq/60
  Goto "end"
  
  Label "end"
Outgoing: Note On on ch. 1 with note:66 (0x42) and velocity:qq

[x] Translator 13.18: send seconds
Incoming: On timer "send_timestamp1"
Rules:
  if ga==2 then Goto "show time"
  if ga==1 then Goto "show loop"
  if ga>=3 then Goto "show loop"
  Goto "show time"
  
  Label "show loop"
  oo=gs
  // oo=oo&8
  // if oo<2 then Goto "blink loop"
  qq=n1
  Goto "end"
  
  
  Label "blink loop"
  qq=61
  Goto "end"
  
  Label "show time"
  qq=ma
  qq=qq%60
  Goto "end"
  
  Label "end"
Outgoing: Note On on ch. 1 with note:67 (0x43) and velocity:qq

[ ] Translator 13.19: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 13.20: ----
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 14: --------

_____________________________________________________________
[x] Preset 15: STATE CH2

[x] Translator 15.0: DDJ IN - Toggle Vinyl DOWN
Options: swallow
Incoming: Note On on ch. 2 with note:23 (0x17) set 'oo' to note with velocity:127 (0x7F) and 'pp' to velocity, on port From DDJ
Rules:
  oo=kp
  if oo==0 then kp=127
  if oo!=0 then kp=0
  
  pp=kp
Outgoing: Note On on ch. 2 with note:23 (0x17) and velocity:pp, to port To DDJ

[x] Translator 15.1: DDJ IN - Toggle Vinyl UP
Options: swallow
Incoming: Note Off on ch. 2 with note:23 (0x17) set 'oo' to note with velocity:0 (0x00) and 'pp' to velocity, on port From DDJ
Outgoing: (none)

[x] Translator 15.2: DDJ IN - JOG TOUCH pt1
Options: swallow
Incoming: Note On on ch. 2 with note:54 (0x36) set 'oo' to note with velocity:127 (0x7F) and 'pp' to velocity, on port From DDJ
Outgoing: One-shot timer "jog_touch_2": 0 ms delay

[x] Translator 15.3: DDJ IN - JOG TOUCH pt2
Incoming: On timer "jog_touch_2"
Rules:
  
  // swallow is confusing:
  // https://www.bome.com/support/kb/possible-bug-swallow-not-working
  
  if kp==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 2 with note:54 (0x36) and velocity:127 (0x7F), to port To Traktor

[x] Translator 15.4: DDJ IN - JOG TURN #34
Incoming: Control Change on ch. 2 with CC#:34 (0x22) and any value set 'pp' to value, on port From DDJ
Rules:
  // Jog turn needs to be catched on the DDJ.
  // Traktor does not send this message!!
  
  // force vinyl "ON" case
  kp=127
  
  
  if yp==0 then Goto "cur_stopped"
  if yp==1 then Goto "cur_playing"
  if yp==2 then Goto "cur_cueing"
  if yp==3 then Goto "cur_paused"
  
  if yp==4 then Goto "cur_play_jogging"
  if yp==5 then Goto "cur_paused_jogging"
  if yp==6 then Goto "cur_stopped_jogging"
  
  exit rules, skip Outgoing Action
  
  
  Label "cur_play_jogging"
  Label "cur_stopped_jogging"
  Label "cur_paused_jogging"
  
  // normalize to -16..+16, accumulate in ys
  pp=pp-64
  yt=yt+pp
  
  ////
  oo=36
  
  tt=yt/oo
  rr=yt%oo
  yt=rr
  
  y6=y6+tt
  y6=y6%360
  if y6<0 then y6=y6+360
  
  
  Label "end"
  Label "cur_stopped"
  Label "cur_playing"
  Label "cur_cueing"
  Label "cur_paused"
Outgoing: One-shot timer "refresh_jog2": 0 ms delay

[x] Translator 15.5: DDJ IN - JOG TURN #35
Incoming: Control Change on ch. 2 with CC#:35 (0x23) and any value set 'pp' to value, on port From DDJ
Rules:
  
  // force vinyl "OFF" case
  kp=0
Outgoing: One-shot timer "refresh_jog2": 0 ms delay

[x] Translator 15.6: DDJ OUT - NEEDLE SEND 
Incoming: On timer "refresh_jog2"
Rules:
  if kt==0 then exit rules, skip Outgoing Action
  
  oo=y6
Outgoing: Control Change (14-bit) on ch. 2 with CC#:20 (0x14) and value:oo

[ ] Translator 15.7: -----
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.8: -----
Incoming: (none)
Outgoing: (none)

[x] Translator 15.9: DDJ IN - MEMORY dblclick
Incoming: Note On on ch. 2 with note:61 (0x3D) and velocity:127 (0x7F) set 'pp' to velocity, on port From DDJ
Rules:
  if ie!=2 then Goto "end"
  Goto "memory_second_click"
  
  Label "memory_second_click"
  oo=zb
  if oo==0 then zb=1
  if oo==1 then zb=0
  Goto "End"
  
  Label "end"
Outgoing: (none)

[ ] Translator 15.10: -----
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.11: -----
Incoming: (none)
Outgoing: (none)

[x] Translator 15.12: JOG TURN timer
Incoming: On timer "master_clock"
Rules:
  // flag: do we need a refresh? yes if we accumulated jog turn, or if time has moved forward
  pp=0
  
  // what is the current state?
  if yp==1 then Goto "cur_playing"
  if yp==2 then Goto "cur_cueing"
  exit rules, skip Outgoing Action
  
  /////
  Label "cur_playing"
  Label "cur_cueing"
  
  // scale: 1 deg per each 10ms
  // this needs to account to 360 deg per 4 beats!
  
  oo=hy
  oo=oo/5
  
  // Reverse support. This ignores slip mode for now
  if kj>0 then oo=oo*-1
  
  y6=y6+oo
  y6=y6%360
  if y6<0 then y6=y6+360
  
  Label "end"
Outgoing: One-shot timer "refresh_jog2": 0 ms delay

[ ] Translator 15.13: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 15.14: TK IN - HOTCUE
Options: swallow
Incoming: Control Change on ch. 2 with CC#:79 (0x4F) and any value set 'pp' to value
Rules:
  if pp==0 then Goto "released_hotcue"
  
  Label "pressed_hotcue"
  
  y6=z6
  
  Label "released_hotcue"
Outgoing: One-shot timer "calc_state2": 10 ms delay

[x] Translator 15.15: TK IN - CUE
Options: swallow
Incoming: Control Change on ch. 2 with CC#:68 (0x44) and any value set 'pp' to value
Rules: z2=pp
Outgoing: One-shot timer "calc_state2": 10 ms delay

[x] Translator 15.16: TK IN - PLAY/PAUSE
Options: swallow
Incoming: Control Change on ch. 2 with CC#:77 (0x4D) and any value set 'pp' to value
Rules:
  zp=pp
  
Outgoing: One-shot timer "calc_state2": 10 ms delay

[x] Translator 15.17: TK IN - JOG TOUCH
Options: swallow
Incoming: Control Change on ch. 2 with CC#:78 (0x4E) and any value set 'pp' to value
Rules:
  zt=pp
  
Outgoing: One-shot timer "calc_state2": 10 ms delay

[x] Translator 15.18: TK IN - PHASE
Options: swallow
Incoming: Control Change on ch. 2 set 'tt' to ch. with CC#:85 (0x55) and any value set 'pp' to value
Rules:
  // je=pp
  
  //oo=pp-32
  //oo=oo*1000
  //oo=oo/32
  
  
  oo=pp-50
  if oo==0 then Goto "zero"
  if oo>=1 then Goto "positive"
  Goto "negative"
  
  Label "positive"
  oo=oo/5
  oo=oo+1
  if oo>10 then oo=10
  Goto "end"
  
  Label "negative"
  oo=oo/5
  oo=oo-1
  Goto "end"
  
  
  Label "zero"
  oo=0
  
  
  Label "end"
  jf=oo
  
  // 50 -> 0
  // 51 -> 1
  // 60 -> 1
  // 61 -> 2
  //...
Outgoing: One-shot timer "calc_state2": 10 ms delay

[x] Translator 15.19: DDJ OUT - JOG RING
Incoming: On timer "calc_state2"
Outgoing: Periodic timer "jog_ring2": 125 ms (initial delay: 0 ms)

[ ] Translator 15.20: ---------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.21: ---------
Incoming: (none)
Outgoing: (none)

[x] Translator 15.22: FLUX ON
Options: swallow
Incoming: Note On on ch. 2 with note:64 (0x40) and any velocity set 'pp' to velocity
Rules: kf=pp
Outgoing: One-shot timer "t_blink2": 0 ms delay

[x] Translator 15.23: FLUX OFF
Incoming: Note Off on ch. 2 with note:64 (0x40) and any velocity set 'pp' to velocity
Rules: kf=pp
Outgoing: One-shot timer "t_blink2": 0 ms delay

[x] Translator 15.24: REVERSE ON
Incoming: Note On on ch. 2 with note:56 (0x38) and any velocity set 'pp' to velocity
Rules:
  kj=pp
  
Outgoing: (none)

[x] Translator 15.25: REVERSE OFF
Incoming: Note Off on ch. 2 with note:56 (0x38) and any velocity set 'pp' to velocity
Rules: kj=pp
Outgoing: (none)

[ ] Translator 15.26: ---------
Incoming: (none)
Outgoing: (none)

[x] Translator 15.27: TK IS_LOADED ON
Incoming: Note Off on ch. 7 with note:71 (0x47) and any velocity set 'pp' to velocity
Rules:
  // WARNING: deck loaded has different notes per deck
  // 1: A#4 / 2: B4 / 3: C5 / 4: C#5
  
  kt=pp
Outgoing: One-shot timer "calc_state2": 10 ms delay

[x] Translator 15.28: TK IS_LOADED OFF
Incoming: Note On on ch. 7 with note:71 (0x47) and any velocity set 'pp' to velocity
Rules:
  // deck loaded: A#4 / C5      B4 / C#5
  
  kt=pp
Outgoing: One-shot timer "calc_state2": 10 ms delay

[ ] Translator 15.29: ---------
Incoming: (none)
Outgoing: (none)

[x] Translator 15.30: CALC STATE
Incoming: On timer "calc_state2"
Rules:
  // TODO: channels are #2, but variables are #1
  //  copy paste. On #1, change channels.
  //  on #2 change variable names
  
  // IN load: "ko"
  // IN PLAY  "zo"
  // IN CUE:  "z1"
  // IN JOGTOUCH: "zs"
  
  // CURRENT STATE: "yo"
  // NEEDLE FWD?  "xx"
  
  // OUT    "y5"    360 degree  NEEDLE
  // OUT    "z5"    360 degree  CUE_POSITION
  /////////
  
  
  // what is the current state?
  if yp==0 then Goto "cur_stopped"
  if yp==1 then Goto "cur_playing"
  if yp==2 then Goto "cur_cueing"
  if yp==3 then Goto "cur_paused"
  
  if yp==4 then Goto "cur_play_jogging"
  if yp==5 then Goto "cur_paused_jogging"
  if yp==6 then Goto "cur_stopped_jogging"
  Goto "ERROR"
  
  
  ////////////////
  ////////////////  NORMAL STATES
  ////////////////
  
  ////
  Label "cur_stopped"
  if zp==1 then yp=1
  if z2==1 then yp=2
  if zt==1 then yp=6
  Goto "end"
  
  //////
  Label "cur_playing"
  if z2==1 then Goto "playing_pressed_cue"
  if zp==0 then Goto "playing_pressed_pause"
  if zt==1 then Goto "playing_pressed_jog"
  Goto "end"
  
  Label "playing_pressed_cue"
  // move to front
  y6=z6
  yp=0
  Goto "end"
  
  Label "playing_pressed_jog"
  yp=4
  Goto "end"
  
  Label "playing_pressed_pause"
  yp=3
  Goto "end"
  
  //////
  Label "cur_paused"
  if z2==1 then Goto "paused_pressed_cue"
  if zp==1 then Goto "paused_pressed_play"
  if zt==1 then Goto "paused_pressed_jog"
  Goto "end"
  
  Label "paused_pressed_cue"
  // set new cue
  z6=y6
  yp=0
  Goto "end"
  
  Label "paused_pressed_play"
  yp=1
  Goto "end"
  
  Label "paused_pressed_jog"
  yp=5
  Goto "end"
  
  
  //////
  Label "cur_cueing"
  if z2==0 then Goto "cueing_released_cue"
  ///if zt==1 then goto "cueing_pressed_jog"  // not implemented!
  Goto "end"
  
  Label "cueing_released_cue"
  //move to front
  y6=z6
  yp=0
  Goto "end"
  
  
  
  
  ////////////////
  ////////////////  JOGING STATES
  ////////////////
  Label "cur_play_jogging"
  if zt==0 then Goto "play_jogging_released_jog"
  if z2==1 then Goto "play_jogging_pressed_cue"
  Goto "end"
  
  Label "play_jogging_released_jog"
  yp=1
  Goto "end"
  
  Label "play_jogging_pressed_cue"
  // set new cue
  z6=y6
  // yp=0   /// NOT CHANGE !!
  Goto "end"
  
  
  
  /////
  Label "cur_stopped_jogging"
  if zt==0 then Goto "stop_jogging_released_jog"
  if z2==1 then Goto "stop_jogging_pressed_cue"
  Goto "end"
  
  Label "stop_jogging_released_jog"
  yp=3
  Goto "end"
  
  Label "stop_jogging_pressed_cue"
  // set new cue
  z6=y6
  yp=0
  Goto "end"
  
  
  
  /////
  Label "cur_paused_jogging"
  if zt==0 then Goto "pause_jogging_released_jog"
  if z2==1 then Goto "pause_jogging_pressed_cue"
  Goto "end"
  
  Label "pause_jogging_released_jog"
  yp=3
  Goto "end"
  
  Label "pause_jogging_pressed_cue"
  // set new cue
  z6=y6
  yp=0
  Goto "end"
  
  
  
  
  //////////
  Label "end"
  
  // Below is just to debug
  // exit rules, execute Outgoing Action
  
  
  // show new state
  if yp==0 then Goto "now_stopped"
  if yp==1 then Goto "now_playing"
  if yp==2 then Goto "now_cueing"
  if yp==3 then Goto "now_paused"
  if yp==4 then Goto "now_play_jogging"
  if yp==5 then Goto "now_paused_jogging"
  if yp==6 then Goto "now_stopped_jogging"
  Goto "ERROR"
  
  Label "now_stopped"
  Label "now_playing"
  Label "now_cueing"
  Label "now_paused"
  Label "now_play_jogging"
  Label "now_paused_jogging"
  Label "now_stopped_jogging"
Outgoing: One-shot timer "refresh_cue2": 0 ms delay

[x] Translator 15.31: REFRESH  jog
Incoming: On timer "refresh_cue2"
Rules:
  if kt==0 then exit rules, skip Outgoing Action
  
Outgoing: One-shot timer "refresh_jog2": 0 ms delay

[x] Translator 15.32: NEEDLE MARKER SEND
Incoming: On timer "refresh_cue2"
Rules:
  if kt==0 then exit rules, skip Outgoing Action
  
  oo=z6
  
Outgoing: Control Change (14-bit) on ch. 2 with CC#:23 (0x17) and value:oo

[x] Translator 15.33: HIDE SCREENS
Incoming: On timer "refresh_cue2"
Rules:
  Goto "loaded"
  
  
  
  if kt==0 then Goto "unloaded"
  if kt>0 then Goto "loaded"
  
  Label "unloaded"
  oo=127
  Goto "end"
  
  Label "loaded"
  oo=0
  Goto "end"
  
  
  Label "end"
Outgoing: Note On on ch. 2 with note:93 (0x5D) and velocity:oo

[ ] Translator 15.34: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 15.35: KEY value (jog touch)
Incoming: On timer "refresh_cue2"
Rules:
  // jog touch:
  //if zt==0 then pp=0
  //if zt>0 then pp=1
  
  
  if jf==0 then pp=0
  if jf!=0 then pp=9
  
  
  
  // use this to disable this info
  //pp=0
  
  
  // 0 = disabled
  // 1 = C
  // 5 = D
  // 9 = E
  // 11 = F
  // 15 = G
  // 19 = A
  // 23 = B
  
Outgoing: Note On on ch. 2 with note:73 (0x49) and velocity:pp

[x] Translator 15.36: KEY variaton
Incoming: On timer "refresh_cue2"
Rules:
  pp=13
  
  pp=jf
  pp=pp+13
  
  // 0 = -12
  // 13 = 0
  // 25 = +12
Outgoing: Note On on ch. 2 with note:74 (0x4A) and velocity:pp

[ ] Translator 15.37: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.38: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.39: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 15.40: END WARNING
Options: swallow
Incoming: Control Change on ch. 2 with CC#:82 (0x52) and any value set 'oo' to value
Rules:
  // deprecated
  
Outgoing: (none)

[x] Translator 15.41: DECK VOLUME (DDJ-IN)
Incoming: Control Change (14-bit) on ch. 2 with CC#:19 (0x13) and any value set 'oo' to value, on port From DDJ
Rules:
  // calculate new value from DDJ
  if oo<1612 then pp=0
  if oo>=1612 then pp=1
  
  // if nothing changed, do nto trigger Timer
  if pp==jp then exit rules, skip Outgoing Action
  
  jp=pp
  // trigger timer
Outgoing: Periodic timer "jog_ring2": 125 ms (initial delay: 0 ms)

[ ] Translator 15.42: DECK VOLUME (TK)
Options: swallow
Incoming: Control Change on ch. 2 with CC#:83 (0x53) and any value set 'oo' to value
Rules: jp=oo
Outgoing: Periodic timer "jog_ring2": 125 ms (initial delay: 0 ms)

[x] Translator 15.43: JOGFX STATE
Options: swallow
Incoming: Control Change on ch. 2 with CC#:84 (0x54) and any value set 'oo' to value
Rules:
  
  if oo==0 then Goto "scratch"
  if oo==1 then Goto "jogFX"
  if oo==2 then Goto "jogFX"
  if oo==3 then Goto "loop_adjust"
  if oo==5 then Goto "grid_adjust"
  if oo==6 then Goto "grid_adjust"
  if oo==7 then Goto "shift1"
  Goto "scratch"
  
  ////
  Label "jogFX"
  Label "loop_adjust"
  Label "grid_adjust"
  Label "grid_adjust"
  Label "shift1"
  pp=1
  Goto "end"
  
  Label "scratch"
  pp=0
  Goto "end"
  
  //////
  Label "end"
  gy=pp
Outgoing: Periodic timer "jog_ring2": 125 ms (initial delay: 0 ms)

[ ] Translator 15.44: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.45: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.46: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 15.47: RESET SCREENS
Options: swallow
Incoming: Control Change on ch. 2 with CC#:77 (0x4D) and value:0 (0x00) set 'oo' to value
Rules:
  
  // reset seek
  ja=-3
  jb=-3
  
Outgoing: One-shot timer "calc2": 0 ms delay

[ ] Translator 15.48: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.49: KEY value
Options: swallow
Incoming: Control Change on ch. 2 with CC#:81 (0x51) and any value set 'oo' to value
Rules:
  // 0 == disable key
  // 1 == key "C"
  //pp=0
  
  pp=1
Outgoing: Note On on ch. 2 with note:73 (0x49) and velocity:pp

[ ] Translator 15.50: KEY variaton
Options: swallow
Incoming: Control Change on ch. 2 with CC#:81 (0x51) and any value set 'oo' to value
Rules: pp=oo
Outgoing: Note On on ch. 2 with note:74 (0x4A) and velocity:pp

[ ] Translator 15.51: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.52: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 15.53: SHIFT1
Options: swallow
Incoming: Control Change on ch. 2 with CC#:69 (0x45) and any value set 'oo' to value
Rules:
  // to simplify
  gb=oo
  ga=oo
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 15.54: SHIFT2
Options: swallow
Incoming: Control Change on ch. 2 with CC#:73 (0x49) and any value set 'oo' to value
Rules:
  // new code
  
  
  i9=oo
  
  // This is the old CODE. TO RECODE!
  
  
  if gb==0 then Goto "handle_it"
  if gb==2 then Goto "handle_it"
  Goto "end"
  
  Label "handle_it"
  if oo==1 then gb=2
  if oo==0 then gb=0
  
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[ ] Translator 15.55: CYCLE TIME MODE
Options: swallow
Incoming: Control Change on ch. 2 with CC#:74 (0x4A) and value:0 (0x00)
Rules:
  oo=zb
  if oo==0 then zb=1
  if oo==1 then zb=0
  
  
  
  
  
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 15.56: LOOP active
Options: swallow
Incoming: Control Change on ch. 2 with CC#:76 (0x4C) and any value set 'oo' to value
Rules:
  lf=oo
  
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[ ] Translator 15.57: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 15.58: LOOP size
Options: swallow
Incoming: Control Change on ch. 2 with CC#:70 (0x46) and any value set 'oo' to value
Rules:
  if oo<=4 then pp=0
  if oo==5 then pp=1
  if oo==6 then pp=2
  if oo==7 then pp=4
  if oo==8 then pp=8
  if oo==9 then pp=16
  if oo>=10 then pp=32
  
  // external answer
  l2=pp
  
  // loop case
  if n6==1 then n2=l2
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 15.59: LOOP size (timer)
Options: swallow
Incoming: Control Change on ch. 2 with CC#:70 (0x46) and any value set 'oo' to value
Rules: ky=1
Outgoing: One-shot timer "preview2": 2000 ms delay

[x] Translator 15.60: MOVE size
Options: swallow
Incoming: Control Change on ch. 2 with CC#:71 (0x47) and any value set 'oo' to value
Rules:
  if oo<=5 then pp=0
  if oo==6 then pp=1
  if oo==7 then pp=2
  if oo==8 then pp=4
  if oo==9 then pp=8
  if oo==10 then pp=16
  if oo==11 then pp=32
  if oo>=12 then pp=9999
  
  n2=pp
  
  // loop case
  if oo==12 then n6=1
  if oo!=12 then n6=0
  
  if n6==1 then n2=l2
  
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 15.61: MOVE size (timer)
Options: swallow
Incoming: Control Change on ch. 2 with CC#:71 (0x47) and any value set 'oo' to value
Rules:
  ky=1
  
Outgoing: One-shot timer "preview2": 2000 ms delay

[x] Translator 15.62: TEMPO range
Options: swallow
Incoming: Control Change on ch. 2 with CC#:66 (0x42) and any value set 'oo' to value
Rules:
  
  if oo==0 then pp=2
  if oo==1 then pp=4
  if oo==2 then pp=6
  if oo==3 then pp=8
  if oo==4 then pp=10
  if oo==5 then pp=12
  if oo==6 then pp=14
  if oo==7 then pp=16
  if oo==8 then pp=18
  if oo==9 then pp=20
  if oo==10 then pp=25
  if oo==11 then pp=35
  if oo==12 then pp=50
  if oo==13 then pp=100
  
  // soft takeover
  i6=pp
  
  
  
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 15.63: TEMPO range (timer)
Options: swallow
Incoming: Control Change on ch. 2 with CC#:66 (0x42) and any value set 'oo' to value
Rules: ky=1
Outgoing: One-shot timer "preview2": 2000 ms delay

[x] Translator 15.64: SHIFT PREVIEWS - Stop Timer
Incoming: On timer "preview2"
Rules: ky=0
Outgoing: One-shot timer "calc2": 0 ms delay

[ ] Translator 15.65: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.66: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.67: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.68: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.69: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 15.70: -----------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 16: BLINK CH2

[ ] Translator 16.0: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 16.1: BLINK JOG RING
Incoming: On timer "jog_ring2"
Rules:
  // deck unloaded?
  if kt==0 then exit rules, skip Outgoing Action
  
  
  // advance blink state
  oo=gt
  gt=gt+1
  gt=gt%16
  
  // touching jog?
  if zt==1 then Goto "jog_touch"
  
  // no volume case
  if jp==0 then Goto "volume_zero"
  
  
  // END WARNING cases
  if nb>960 then Goto "do_blink_veryfast"
  if nb>930 then Goto "do_blink_fast"
  if nb>900 then Goto "do_blink_slow"
  
  // General warning cases
  if gy>0 then Goto "jogFX"
  // if kf>0 then Goto "flux"
  if kj>0 then Goto "reverse"
  
  // catch-all case
  Goto "show_solid_on"
  
  Label "volume_zero"
  Goto "show_solid_off"
  
  Label "jog_touch"
  Goto "show_solid_off"
  
  Label "jogFX"
  Label "reverse"
  Label "flux"
  Goto "do_blink_very_slow"
  
  
  
  
  /////////////////
  Label "do_blink_very_slow"
  oo=oo&8
  if oo==0 then Goto "show_solid_on"
  Goto "show_solid_off"
  
  
  
  Label "do_blink_slow"
  oo=oo&4
  if oo==0 then Goto "show_solid_on"
  Goto "show_solid_off"
  
  
  
  Label "do_blink_fast"
  oo=oo&2
  if oo==0 then Goto "show_solid_on"
  Goto "show_solid_off"
  
  
  Label "do_blink_veryfast"
  oo=oo&1
  if oo==0 then Goto "show_solid_on"
  Goto "show_solid_off"
  
  
  
  Label "show_solid_off"
  pp=0
  Goto "end"
  
  Label "show_solid_on"
  pp=1
  Goto "end"
  
  Label "end"
  
Outgoing: Note On on ch. 2 with note:91 (0x5B) and velocity:pp

[ ] Translator 16.2: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 16.3: FALLTROUGH BLINK
Incoming: On timer "calc_state2"
Outgoing: Periodic timer "t_blink2": 500 ms (initial delay: 0 ms)

[x] Translator 16.4: BLINK CUE
Incoming: On timer "t_blink2"
Rules:
  
  if kt==0 then Goto "unloaded"
  if kt>0 then Goto "loaded"
  
  Label "loaded"
  Label "unloaded"
  
  if kt==0 then Goto "tick"
  /////
  
  if yp==0 then Goto "now_stopped"
  if yp==1 then Goto "now_playing"
  if yp==2 then Goto "now_cueing"
  if yp==3 then Goto "now_paused"
  if yp==4 then Goto "now_play_jogging"
  if yp==5 then Goto "now_paused_jogging"
  if yp==6 then Goto "now_stopped_jogging"
  Goto "ERROR"
  
  Label "now_stopped"
  Label "now_cueing"
  Label "now_playing"
  pp=127
  gf=0
  Goto "end"
  
  /////////
  Label "now_paused_jogging"
  Label "now_stopped_jogging"
  Label "now_play_jogging"
  Label "now_paused"
  
  if gf==0 then Goto "tick"
  if gf==1 then Goto "tock"
  Goto "tock"
  
  Label "tick"
  pp=0
  gf=1
  Goto "end"
  
  Label "tock"
  pp=127
  gf=0
  Goto "end"
  
  Label "end"
Outgoing: Note On on ch. 2 with note:12 (0x0C) and velocity:pp

[x] Translator 16.5: BLINK PLAY
Incoming: On timer "t_blink2"
Rules:
  if kt==0 then Goto "show_solid_off"
  ////
  
  if yp==0 then Goto "now_stopped"
  if yp==1 then Goto "now_playing"
  if yp==2 then Goto "now_cueing"
  if yp==3 then Goto "now_paused"
  if yp==4 then Goto "now_play_jogging"
  if yp==5 then Goto "now_paused_jogging"
  if yp==6 then Goto "now_stopped_jogging"
  Goto "ERROR"
  
  
  Label "now_playing"
  Label "now_cueing"
  Label "now_play_jogging"
  Label "now_paused_jogging"
  Goto "show_solid_on"
  
  /////////
  Label "now_stopped"
  Label "now_paused"
  Label "now_stopped_jogging"
  Goto "do_blink"
  
  
  Label "do_blink"
  if gj==1 then Goto "show_solid_off"
  if gj==0 then Goto "show_solid_on"
  
  
  Label "show_solid_off"
  pp=0
  gj=0
  Goto "end"
  
  Label "show_solid_on"
  pp=127
  gj=1
  Goto "end"
  
  
  Label "end"
Outgoing: Note On on ch. 2 with note:11 (0x0B) and velocity:pp

[ ] Translator 16.6: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 16.7: FALLTROUGH CALC
Incoming: On timer "jog_ring2"
Outgoing: One-shot timer "calc2": 0 ms delay

[ ] Translator 16.8: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 16.9: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 16.10: BLINK SLIP
Incoming: On timer "t_blink2"
Rules:
  
  if kf==0 then Goto "flux_off"
  if kf>0 then Goto "flux_on"
  
  
  Label "flux_off"
  Goto "show_solid_off"
  
  Label "flux_on"
  pp=gt
  pp=pp%8
  if pp<4 then Goto "show_solid_off"
  Goto "show_solid_on"
  
  Label "show_solid_off"
  pp=0
  Goto "end"
  
  Label "show_solid_on"
  pp=127
  Goto "end"
  
  Label "end"
  //pp=127
  
  
Outgoing: Note On on ch. 2 with note:64 (0x40) and velocity:pp

[ ] Translator 16.11: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 16.12: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 16.13: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 16.14: -----------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 17: MAIN CH2

[ ] Translator 17.0: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 17.1: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 17.2: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 17.3: DDJ IN - tempo soft takeover
Incoming: Control Change (14-bit) on ch. 2 set 'xx' to ch. with CC#:0 (0x00) and any value set 'pp' to value, on port From DDJ
Rules:
  // globals:
  //  k2 = actual value
  //  i6 = tempo range
  ////////
  
  
  oo=16383/2
  pp=pp-oo
  pp=pp*1000
  pp=pp/oo
  qq=pp
  // pp now ranges betwen -1000 and 1000
  pp=pp*i6
  pp=pp/100
  //////////////////
  
  jj=pp
  jt=1
  
  ////////
  //// auto tempo enlarger
  if qq<=-980 then Goto "overflow"
  if qq>=980 then Goto "overflow"
  
  if qq>900 then Goto "end"
  if qq<-900 then Goto "end"
  Goto "inside_catch_zone"
  
  
  ////
  Label "inside_catch_zone"
  if ip==1 then ip=0
  if ip==2 then ip=0
  Goto "end"
  
  ////
  Label "overflow"
  if i6==100 then Goto "overflow_100"
  if ip==0 then ip=1
  Goto "end"
  
  Label "overflow_100"
  Goto "end"
  
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "tempo2": 0 ms delay

[x] Translator 17.4: Cascade
Incoming: On timer "tempo2"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.5: Soft tempo - preview Arm
Incoming: On timer "tempo2"
Outgoing: One-shot timer "tempo_soft2": 1000 ms delay

[x] Translator 17.6: Soft tempo - Preview Expire
Incoming: On timer "tempo_soft2"
Rules: jt=0
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.7: AUTO TEMPO RANGE - ENLARGER
Incoming: On timer "calc2"
Rules:
  if ip==1 then Goto "do_enlarge"
  exit rules, skip Outgoing Action
  
  
  Label "do_enlarge"
  ip=2
  
Outgoing: Note On on ch. 2 with note:96 (0x60) and velocity:127 (0x7F), to port To Traktor

[ ] Translator 17.8: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 17.9: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 17.10: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 17.11: tempo adjust S1
Options: swallow
Incoming: Control Change on ch. 2 with CC#:101 (0x65) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo-100
  g6=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g2=oo
  gp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.12: tempo adjust S2
Options: swallow
Incoming: Control Change on ch. 2 with CC#:102 (0x66) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo-75
  g6=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g2=oo
  gp=2
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.13: tempo adjust S3
Options: swallow
Incoming: Control Change on ch. 2 with CC#:103 (0x67) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo-50
  g6=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g2=oo
  gp=2
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.14: tempo adjust S4
Options: swallow
Incoming: Control Change on ch. 2 with CC#:104 (0x68) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo-25
  g6=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g2=oo
  gp=2
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.15: tempo adjust S5
Options: swallow
Incoming: Control Change on ch. 2 with CC#:105 (0x69) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo-0
  g6=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g2=oo
  gp=2
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.16: tempo adjust S6
Options: swallow
Incoming: Control Change on ch. 2 with CC#:106 (0x6A) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo+25
  g6=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g2=oo
  gp=2
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.17: tempo adjust S7
Options: swallow
Incoming: Control Change on ch. 2 with CC#:107 (0x6B) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo+50
  g6=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g2=oo
  gp=2
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.18: tempo adjust S8
Options: swallow
Incoming: Control Change on ch. 2 with CC#:108 (0x6C) and any value set 'pp' to value
Rules:
  oo=pp/4
  oo=oo+75
  g6=100
  
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g2=oo
  gp=2
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.19: tempo adjust FALLBACK
Options: swallow
Incoming: Control Change on ch. 2 with CC#:109 (0x6D) and any value set 'pp' to value
Rules:
  oo=pp-50
  oo=oo*2
  g6=100
  
  ///////// Decision tree
  //ip=0
  //if pp<=2 then Goto "overflow"
  //if pp>=98 then Goto "overflow"
  
  /// ignore this one if we already saw an HR signal
  if gp!=0 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  g2=oo
  gp=1
  Goto "end"
  
  
  /// Overflow
  Label "overflow"
  if i6==100 then Goto "overflow_100"
  
  ip=1
  Goto "end"
  
  Label "overflow_100"
  Goto "end"
  
  
  /// END
  Label "end"
  
Outgoing: One-shot timer "calc2": 0 ms delay

[ ] Translator 17.20: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 17.21: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 17.22: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 17.23: bpm value S1
Options: swallow
Incoming: Control Change on ch. 2 with CC#:110 (0x6E) and any value set 'pp' to value
Rules:
  oo=pp*75
  oo=oo+0
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.24: bpm value S2
Options: swallow
Incoming: Control Change on ch. 2 with CC#:111 (0x6F) and any value set 'pp' to value
Rules:
  oo=pp*25
  oo=oo+7500
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.25: bpm value S3
Options: swallow
Incoming: Control Change on ch. 2 with CC#:112 (0x70) and any value set 'pp' to value
Rules:
  oo=pp*10
  oo=oo+10000
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.26: bpm value S4
Options: swallow
Incoming: Control Change on ch. 2 with CC#:113 (0x71) and any value set 'pp' to value
Rules:
  oo=pp*10
  oo=oo+11000
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.27: bpm value S5
Options: swallow
Incoming: Control Change on ch. 2 with CC#:114 (0x72) and any value set 'pp' to value
Rules:
  oo=pp*5
  oo=oo+12000
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.28: bpm value S6
Options: swallow
Incoming: Control Change on ch. 2 with CC#:115 (0x73) and any value set 'pp' to value
Rules:
  oo=pp*5
  oo=oo+12500
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.29: bpm value S7
Options: swallow
Incoming: Control Change on ch. 2 with CC#:116 (0x74) and any value set 'pp' to value
Rules:
  oo=pp*5
  oo=oo+13000
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.30: bpm value S8
Options: swallow
Incoming: Control Change on ch. 2 with CC#:117 (0x75) and any value set 'pp' to value
Rules:
  oo=pp*5
  oo=oo+13500
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.31: bpm value S9
Options: swallow
Incoming: Control Change on ch. 2 with CC#:118 (0x76) and any value set 'pp' to value
Rules:
  oo=pp*5
  oo=oo+14000
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.32: bpm value S10
Options: swallow
Incoming: Control Change on ch. 2 with CC#:119 (0x77) and any value set 'pp' to value
Rules:
  oo=pp*10
  oo=oo+14500
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.33: bpm value S11
Options: swallow
Incoming: Control Change on ch. 2 with CC#:120 (0x78) and any value set 'pp' to value
Rules:
  oo=pp*45
  oo=oo+15500
  h6=100
  
  ///////// Decision tree
  if pp==0 then Goto "end"
  if pp==100 then Goto "end"
  Goto "change value"
  
  /// Change value
  Label "change value"
  h2=oo
  hp=2
  
  /// END
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[x] Translator 17.34: bpm value FALLBACK
Options: swallow
Incoming: Control Change on ch. 2 with CC#:121 (0x79) and any value set 'pp' to value
Rules:
  oo=pp*200
  oo=oo+0
  h6=100
  
  /// ignore this one if we saw an HR signal
  if hp!=0 then Goto "end"
  
  Label "Low Resolution"
  h2=oo
  hp=1
  
  Label "end"
Outgoing: One-shot timer "calc2": 0 ms delay

[ ] Translator 17.35: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 17.36: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 17.37: ADD A DELAY
Incoming: On timer "calc2"
Rules:
  if ht==1 then exit rules, skip Outgoing Action
  ht=1
  
Outgoing: One-shot timer "calc2_b": 30 ms delay

[x] Translator 17.38: merge HR values
Incoming: On timer "calc2_b"
Rules:
  // Only accept a new tempo range if we received tempo position as well
  if gp>0 then i2=i6
  
  // Tempo value lock (0: none; 1: LR; 2: HR)
  gp=0
  
  // BPM value lock (0: none; 1: LR; 2: HR)
  hp=0
  
  //unlock 30ms timer
  ht=0
  
Outgoing: One-shot timer "calc2_c": 0 ms delay

[x] Translator 17.39: Calculations
Incoming: On timer "calc2_c"
Rules:
  // use this to skip calcs (debug faster)
  
  // exit rules, execute Outgoing Action
  
  
  /// LINK LOOP & MOVE VALUES
  if n6==1 then n2=l2
  
  /// CALC TEMPO ADJ
  // todo: move to local variables j1, j5, etc
  j2=g2*i2
  j6=g6*1
  
  ss=j6/10
  oo=j2/ss
  k2=oo
  
  /// CALC NEW BPM
  m2=j2
  m6=j6*100
  
  m2=m2+m6
  m6=m6
  
  m2=m2*h2
  m6=m6*h6
  
  ss=m6/10
  oo=m2/ss
  k6=oo
  
  ///// SOFT TAKEOVER TEMPO
  //////// are we in soft takeover?
  pp=jj
  xx=k2-5
  uu=k2+5
  
  if pp<xx then Goto "different_tempo_values"
  if pp>uu then Goto "different_tempo_values"
  Goto "same_tempo_value"
  
  Label "same_tempo_value"
  jt=0
  Goto "end"
  
  
  Label "different_tempo_values"
  Goto "end"
  
  
  Label "end"
  
  
  
Outgoing: One-shot timer "calc2_d": 0 ms delay

[ ] Translator 17.40: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 17.41: SEND BPM
Incoming: On timer "calc2_d"
Rules:
  if ky==1 then Goto "send_native_bpm"
  if gb==1 then Goto "send_native_bpm"
  
  Goto "send_actual"
  
  Label "send_actual"
  oo=k6
  Goto "end"
  
  Label "send_native_bpm"
  oo=h2
  oo=oo*10
  oo=oo/h6
  Goto "end"
  
  Label "end"
Outgoing: Control Change (14-bit) on ch. 2 with CC#:21 (0x15) and value:oo

[x] Translator 17.42: SEND PERCENTAGE
Incoming: On timer "calc2_d"
Rules:
  if gb==1 then Goto "pressing_shift"
  if ky==1 then Goto "previwing_after_change"
  if jt>=1 then Goto "blink_tempo"
  Goto "send_actual"
  
  
  Label "pressing_shift"
  Label "previwing_after_change"
  Goto "send_tempo_range"
  
  
  Label "send_tempo_range"
  oo=i6
  oo=oo*10
  Goto "end"
  
  
  Label "send_actual"
  oo=k2
  Goto "end"
  
  
  Label "blink_tempo"
  // Goto "show_wanted"
  pp=gt
  pp=pp%4
  if pp<2 then Goto "show_nothing"
  Goto "show_wanted"
  
  
  Label "show_nothing"
  oo=2001
  Goto "end"
  
  
  Label "show_wanted"
  oo=jj
  Goto "end"
  
  
  
  Label "end"
  oo=oo+1000
Outgoing: Control Change (14-bit) on ch. 2 with CC#:22 (0x16) and value:oo

[ ] Translator 17.43: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 17.44: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 17.45: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 17.46: -----------
Incoming: (none)
Outgoing: (none)

[x] Translator 17.47: FALLTROUGH
Incoming: On timer "calc2_d"
Outgoing: One-shot timer "calc_clock2": 0 ms delay

_____________________________________________________________
[ ] Preset 18: SEEK CH2

[ ] Translator 18.0: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 18.1: IN seek position S1
Incoming: Control Change on ch. 2 with CC#:90 (0x5A) and any value set 'oo' to value
Rules:
  pp=oo+0
  
  
  /////////
  np=np+1
  if np==1 then Goto "simple case"
  
  if pp<jb then Goto "going left"
  if pp>jb then Goto "going right"
  
  Label "going left"
  if pp<nb then nb=pp
  Goto "end"
  
  Label "going right"
  if pp>nb then nb=pp
  Goto "end"
  
  Label "simple case"
  nb=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock2": 10 ms delay

[x] Translator 18.2: IN seek position S2
Incoming: Control Change on ch. 2 with CC#:91 (0x5B) and any value set 'oo' to value
Rules:
  pp=oo+100
  
  
  /////////
  np=np+1
  if np==1 then Goto "simple case"
  
  if pp<jb then Goto "going left"
  if pp>jb then Goto "going right"
  
  Label "going left"
  if pp<nb then nb=pp
  Goto "end"
  
  Label "going right"
  if pp>nb then nb=pp
  Goto "end"
  
  Label "simple case"
  nb=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock2": 10 ms delay

[x] Translator 18.3: IN seek position S3
Incoming: Control Change on ch. 2 with CC#:92 (0x5C) and any value set 'oo' to value
Rules:
  pp=oo+200
  
  
  /////////
  np=np+1
  if np==1 then Goto "simple case"
  
  if pp<jb then Goto "going left"
  if pp>jb then Goto "going right"
  
  Label "going left"
  if pp<nb then nb=pp
  Goto "end"
  
  Label "going right"
  if pp>nb then nb=pp
  Goto "end"
  
  Label "simple case"
  nb=pp
  Goto "end"
  
  Label "end"
  
Outgoing: One-shot timer "calc_clock2": 10 ms delay

[x] Translator 18.4: IN seek position S4
Incoming: Control Change on ch. 2 with CC#:93 (0x5D) and any value set 'oo' to value
Rules:
  pp=oo+300
  
  
  /////////
  np=np+1
  if np==1 then Goto "simple case"
  
  if pp<jb then Goto "going left"
  if pp>jb then Goto "going right"
  
  Label "going left"
  if pp<nb then nb=pp
  Goto "end"
  
  Label "going right"
  if pp>nb then nb=pp
  Goto "end"
  
  Label "simple case"
  nb=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock2": 10 ms delay

[x] Translator 18.5: IN seek position S5
Incoming: Control Change on ch. 2 with CC#:94 (0x5E) and any value set 'oo' to value
Rules:
  pp=oo+400
  
  
  /////////
  np=np+1
  if np==1 then Goto "simple case"
  
  if pp<jb then Goto "going left"
  if pp>jb then Goto "going right"
  
  Label "going left"
  if pp<nb then nb=pp
  Goto "end"
  
  Label "going right"
  if pp>nb then nb=pp
  Goto "end"
  
  Label "simple case"
  nb=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock2": 10 ms delay

[x] Translator 18.6: IN seek position S6
Incoming: Control Change on ch. 2 with CC#:95 (0x5F) and any value set 'oo' to value
Rules:
  pp=oo+500
  
  
  /////////
  np=np+1
  if np==1 then Goto "simple case"
  
  if pp<jb then Goto "going left"
  if pp>jb then Goto "going right"
  
  Label "going left"
  if pp<nb then nb=pp
  Goto "end"
  
  Label "going right"
  if pp>nb then nb=pp
  Goto "end"
  
  Label "simple case"
  nb=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock2": 10 ms delay

[x] Translator 18.7: IN seek position S7
Incoming: Control Change on ch. 2 with CC#:96 (0x60) and any value set 'oo' to value
Rules:
  pp=oo+600
  
  
  /////////
  np=np+1
  if np==1 then Goto "simple case"
  
  if pp<jb then Goto "going left"
  if pp>jb then Goto "going right"
  
  Label "going left"
  if pp<nb then nb=pp
  Goto "end"
  
  Label "going right"
  if pp>nb then nb=pp
  Goto "end"
  
  Label "simple case"
  nb=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock2": 10 ms delay

[x] Translator 18.8: IN seek position S8
Incoming: Control Change on ch. 2 with CC#:97 (0x61) and any value set 'oo' to value
Rules:
  pp=oo+700
  
  
  /////////
  np=np+1
  if np==1 then Goto "simple case"
  
  if pp<jb then Goto "going left"
  if pp>jb then Goto "going right"
  
  Label "going left"
  if pp<nb then nb=pp
  Goto "end"
  
  Label "going right"
  if pp>nb then nb=pp
  Goto "end"
  
  Label "simple case"
  nb=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock2": 10 ms delay

[x] Translator 18.9: IN seek position S9
Incoming: Control Change on ch. 2 with CC#:98 (0x62) and any value set 'oo' to value
Rules:
  pp=oo+800
  
  
  /////////
  np=np+1
  if np==1 then Goto "simple case"
  
  if pp<jb then Goto "going left"
  if pp>jb then Goto "going right"
  
  Label "going left"
  if pp<nb then nb=pp
  Goto "end"
  
  Label "going right"
  if pp>nb then nb=pp
  Goto "end"
  
  Label "simple case"
  nb=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock2": 10 ms delay

[x] Translator 18.10: IN seek position S10
Incoming: Control Change on ch. 2 with CC#:99 (0x63) and any value set 'oo' to value
Rules:
  pp=oo+900
  
  /////////
  np=np+1
  if np==1 then Goto "simple case"
  
  if pp<jb then Goto "going left"
  if pp>jb then Goto "going right"
  
  Label "going left"
  if pp<nb then nb=pp
  Goto "end"
  
  Label "going right"
  if pp>nb then nb=pp
  Goto "end"
  
  Label "simple case"
  nb=pp
  Goto "end"
  
  Label "end"
Outgoing: One-shot timer "calc_clock2": 10 ms delay

[ ] Translator 18.11: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 18.12: ADD A DELAY
Incoming: On timer "calc_clock2"
Rules:
  if hf==1 then exit rules, skip Outgoing Action
  hf=1
  
Outgoing: One-shot timer "calc_clock2_b": 30 ms delay

[x] Translator 18.13: Merge HR Seek
Incoming: On timer "calc_clock2_b"
Rules:
  
  np=0
  
  // lock 30ms
  hf=0
Outgoing: One-shot timer "calc_clock2_c": 0 ms delay

[x] Translator 18.14: Calc Clock
Incoming: On timer "calc_clock2_c"
Rules:
  /// nothing happened?
  if nb==jb then Goto "plot"
  
  
  /// FORWARD SEEK?
  oo=nb
  pp=jb+1
  jb=oo
  if pp==oo then Goto "seek_ok"
  Goto "skipped"
  
  /// WE SKIPPED
  Label "skipped"
  kb=hz
  yb=nb
  ib=0
  Goto "plot"
  
  /// SEEK OK
  Label "seek_ok"
  ib=ib+1
  if ib==5 then Goto "recalculate"
  Goto "plot"
  
  //if ho!=0 then Goto "plot"
  /// WHY THIS "HO"??
  
  
  /// RECALCULATE
  Label "recalculate"
  rr=hz-kb
  ss=nb-yb
  
  // exit if timer is not running
  if rr==0 then Goto "reset"
  // exit if we stopped too much. Normal Limit = 16
  if rr>250 then Goto "reset"
  
  
  rr=rr*1000
  rr=rr/ss
  qq=1000/hy
  rr=rr/qq
  
  // new value calculated + lock
  hb=rr
  hp=1
  
  
  Goto "plot"
  
  /// RESET
  Label "reset"
  Goto "skipped"
  
  jb=-2
  hp=0
  Goto "plot"
  
  
  //// PLOT FINAL VALUES
  Label "plot"
  // elapsed time
  pp=hb*nb
  // total track length (needs to be before REMAIN)
  qq=hb*1000
  // remain time
  rr=qq-pp
  
  // DECIDE WHAT TO SHOW
  if gb==2 then Goto "show_total_time"
  Goto "show_time"
  
  
  
  Label "show_total_time"
  if hm==0 then Goto "show_time"
  oo=qq
  Goto "end"
  
  Label "show_time"
  if zb==0 then Goto "show_elapsed"
  if zb==1 then Goto "show_remain"
  Goto "show_elapsed"
  
  Label "show_elapsed"
  oo=pp
  Goto "end"
  
  Label "show_remain"
  oo=rr
  Goto "end"
  
  
  /////
  Label "end"
  oo=oo/1000
  oo=oo/1
  mb=oo
Outgoing: One-shot timer "send_timestamp2": 0 ms delay

[ ] Translator 18.15: ----
Incoming: (none)
Outgoing: (none)

[x] Translator 18.16: send sign
Incoming: On timer "send_timestamp2"
Rules:
  // todo: seperate this variable
  if gb==2 then Goto "preview_total"
  if gb>=1 then Goto "positive"
  
  
  Label "preview_total"
  if hm==0 then Goto "show_time"
  Goto "show_positive"
  
  
  Label "show_time"
  if zb==0 then Goto "show_positive"
  if zb==1 then Goto "show_negative"
  Goto "show_positive"
  
  Label "show_positive"
  qq=0
  Goto "end"
  
  Label "show_negative"
  qq=127
  Goto "end"
  
  Label "end"
Outgoing: Note On on ch. 2 with note:68 (0x44) and velocity:qq

[x] Translator 18.17: send minutes
Incoming: On timer "send_timestamp2"
Rules:
  
  
  // FIXME!!!
  
  if gb==2 then Goto "show time"
  if gb==1 then Goto "show loop"
  if gb>=3 then Goto "show loop"
  Goto "show time"
  
  Label "show loop"
  oo=gt
  // oo=oo&8
  // if oo<2 then Goto "blink loop"
  qq=l2
  Goto "end"
  
  Label "blink loop"
  qq=100
  Goto "end"
  
  Label "show time"
  qq=mb
  qq=qq/60
  Goto "end"
  
  Label "end"
Outgoing: Note On on ch. 2 with note:66 (0x42) and velocity:qq

[x] Translator 18.18: send seconds
Incoming: On timer "send_timestamp2"
Rules:
  if gb==2 then Goto "show time"
  if gb==1 then Goto "show loop"
  if gb>=3 then Goto "show loop"
  Goto "show time"
  
  Label "show loop"
  
  oo=gt
  // oo=oo&8
  // if oo<2 then Goto "blink loop"
  qq=n2
  Goto "end"
  
  
  Label "blink loop"
  qq=61
  Goto "end"
  
  Label "show time"
  qq=mb
  qq=qq%60
  Goto "end"
  
  Label "end"
Outgoing: Note On on ch. 2 with note:67 (0x43) and velocity:qq

[ ] Translator 18.19: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 18.20: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 18.21: ----
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 19: -----

_____________________________________________________________
[x] Preset 20: STATE CH3

[x] Translator 20.0: DECK VOLUME (DDJ-IN)
Incoming: Control Change (14-bit) on ch. 3 with CC#:19 (0x13) and any value set 'oo' to value, on port From DDJ
Rules:
  // calculate new value from DDJ
  if oo<1612 then pp=0
  if oo>=1612 then pp=1
  
  // if nothing changed, do nto trigger Timer
  if pp==jq then exit rules, skip Outgoing Action
  
  jq=pp
  // trigger timer
Outgoing: Periodic timer "jog_ring3": 125 ms (initial delay: 0 ms)

[ ] Translator 20.1: DECK VOLUME (TK-IN)
Options: swallow
Incoming: Control Change on ch. 3 with CC#:83 (0x53) and any value set 'oo' to value
Rules: jq=oo
Outgoing: Periodic timer "jog_ring3": 125 ms (initial delay: 0 ms)

[ ] Translator 20.2: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 20.3: -----------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 21: -----

_____________________________________________________________
[x] Preset 22: STATE CH4

[ ] Translator 22.0: DECK VOLUME
Options: swallow
Incoming: Control Change on ch. 4 with CC#:83 (0x53) and any value set 'oo' to value
Rules: jr=oo
Outgoing: Periodic timer "jog_ring4": 125 ms (initial delay: 0 ms)

[x] Translator 22.1: DECK VOLUME (DDJ-IN)
Incoming: Control Change (14-bit) on ch. 4 with CC#:19 (0x13) and any value set 'oo' to value, on port From DDJ
Rules:
  // calculate new value from DDJ
  if oo<1612 then pp=0
  if oo>=1612 then pp=1
  
  // if nothing changed, do not trigger Timer
  if pp==jr then exit rules, skip Outgoing Action
  
  jr=pp
  // trigger timer
  
Outgoing: One-shot timer "volume_fader4": 0 ms delay

[x] Translator 22.2: cascade preview_player
Incoming: On timer "volume_fader4"
Rules:
  
  if mk!=2 then exit rules, skip Outgoing Action
  
  // else, stop preview player
  
Outgoing: Note Off on ch. 7 with note:101 (0x65) and velocity:0 (0x00), to port To Traktor

[x] Translator 22.3: cascade blink
Incoming: On timer "volume_fader4"
Rules: 
Outgoing: Periodic timer "jog_ring4": 125 ms (initial delay: 0 ms)

[ ] Translator 22.4: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 22.5: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 22.6: -----------
Incoming: (none)
Outgoing: (none)

[ ] Translator 22.7: -----------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 23: -----

_____________________________________________________________
[ ] Preset 24: -----

_____________________________________________________________
[ ] Preset 25: -----

_____________________________________________________________
[ ] Preset 26: -----

_____________________________________________________________
[ ] Preset 27: ----

_____________________________________________________________
[ ] Preset 28: --------- DDJ-SZ adaptor

_____________________________________________________________
[ ] Preset 29: DO NOT USE - keyboard to DDJ-SZ (1)

[x] Translator 29.0: SHIFT
Incoming: Key down: Shift
Rules: mr=1
Outgoing: One-shot timer "send_shift": 0 ms delay

[x] Translator 29.1: SHIFT
Incoming: Key up: Shift
Rules: mr=0
Outgoing: One-shot timer "send_shift": 0 ms delay

[x] Translator 29.2: SHIFT
Incoming: On timer "send_shift"
Rules:
  oo=63
  
  if mr==0 then pp=0
  if mr==1 then pp=127
Outgoing: Note On on ch.'mo' with note:oo and velocity:pp

[x] Translator 29.3: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 29.4: CHANNEL
Incoming: Key down: 1
Rules: mo=0
Outgoing: One-shot timer "send_channel": 0 ms delay

[x] Translator 29.5: CHANNEL
Incoming: Key down: 2
Rules: mo=1
Outgoing: One-shot timer "send_channel": 0 ms delay

[x] Translator 29.6: CHANNEL
Incoming: Key down: 3
Rules: mo=2
Outgoing: One-shot timer "send_channel": 0 ms delay

[x] Translator 29.7: CHANNEL
Incoming: Key down: 4
Rules: mo=3
Outgoing: One-shot timer "send_channel": 0 ms delay

[x] Translator 29.8: CHANNEL
Incoming: On timer "send_channel"
Rules:
  
  oo=114
  if mr==1 then oo=oo+1
  pp=127
Outgoing: Note On on ch.'mo' with note:oo and velocity:pp

[x] Translator 29.9: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 29.10: MODE
Incoming: Key down: Z
Rules:
  mp=0
  if mr==1 then mp=mp+4
  
Outgoing: One-shot timer "recalc": 0 ms delay

[x] Translator 29.11: MODE
Incoming: Key down: X
Rules:
  mp=1
  if mr==1 then mp=mp+4
  
Outgoing: One-shot timer "recalc": 0 ms delay

[x] Translator 29.12: MODE
Incoming: Key down: C
Rules:
  mp=2
  if mr==1 then mp=mp+4
  
Outgoing: One-shot timer "recalc": 0 ms delay

[x] Translator 29.13: MODE
Incoming: Key down: V
Rules:
  mp=3
  if mr==1 then mp=mp+4
  
Outgoing: One-shot timer "recalc": 0 ms delay

[x] Translator 29.14: MODE
Incoming: On timer "send_mode"
Rules:
  
  if mp==0 then oo=27
  if mp==1 then oo=30
  if mp==2 then oo=32
  if mp==3 then oo=34
  if mp==4 then oo=105
  if mp==5 then oo=107
  if mp==6 then oo=109
  if mp==7 then oo=111
  
  pp=127
Outgoing: Note On on ch.'mo' with note:oo and velocity:pp

[x] Translator 29.15: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 29.16: sub-page LEFT
Incoming: Physical Keys: B
Rules:
  
  if mr==1 then Goto "shifted"
  
  Label "not shifted"
  oo=36
  oo=oo+mp
  pp=127
  Goto "end"
  
  Label "shifted"
  oo=1
  oo=oo+mp
  pp=127
  Goto "end"
Outgoing: Note On on ch.'mo' with note:oo and velocity:pp

[x] Translator 29.17: sub-page RIGHT
Incoming: Physical Keys: N
Rules:
  
  if mr==1 then Goto "shifted"
  
  oo=44
  oo=oo+mp
  pp=127
  Goto "end"
  
  Label "shifted"
  if mp==0 then oo=9
  if mp==1 then oo=122
  if mp==2 then oo=123
  if mp==3 then oo=124
  if mp==4 then oo=125
  if mp==5 then oo=126
  if mp==6 then oo=127
  if mp==7 then oo=0
  
  pp=127
  Goto "end"
Outgoing: Note On on ch.'mo' with note:oo and velocity:pp

[x] Translator 29.18: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 29.19: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 29.20: sub page
Incoming: Key down: Q
Rules:
  ms=0
  mt=127
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.21: sub page
Incoming: Key up: Q
Rules:
  ms=0
  mt=0
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.22: sub page
Incoming: Key down: W
Rules:
  ms=1
  mt=127
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.23: sub page
Incoming: Key up: W
Rules:
  ms=1
  mt=0
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.24: sub page
Incoming: Key down: E
Rules:
  ms=2
  mt=127
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.25: sub page
Incoming: Key up: E
Rules:
  ms=2
  mt=0
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.26: sub page
Incoming: Key down: R
Rules:
  ms=3
  mt=127
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.27: sub page
Incoming: Key up: R
Rules:
  ms=3
  mt=0
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.28: sub page
Incoming: Key down: A
Rules:
  ms=4
  mt=127
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.29: sub page
Incoming: Key up: A
Rules:
  ms=4
  mt=0
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.30: sub page
Incoming: Key down: S
Rules:
  ms=5
  mt=127
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.31: sub page
Incoming: Key up: S
Rules:
  ms=5
  mt=0
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.32: sub page
Incoming: Key down: D
Rules:
  ms=6
  mt=127
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.33: sub page
Incoming: Key up: D
Rules:
  ms=6
  mt=0
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.34: sub page
Incoming: Key down: F
Rules:
  ms=7
  mt=127
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.35: sub page
Incoming: Key up: F
Rules:
  ms=7
  mt=0
Outgoing: One-shot timer "send_pad": 0 ms delay

[x] Translator 29.36: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 29.37: PAD_CONVERT
Incoming: On timer "send_pad"
Rules:
  //  "mo" - channel  (0..3)
  //  "mp" - which mode (0..7)
  //  "mq" - which sub-page (0..1)
  //  "mr" - shift enabled (0..1)
  //
  //  "ms" - which pad pressed (0..7)
  //  "mt" - up/down pressed (0..127)
  
  
  //channel
  qq=mo+7
  // mode
  oo=mp*16
  // which pad
  oo=oo+ms
  // shift
  if mr==1 then oo=oo+8
  
  
  //// FINAL PAD TO SEND
  qq=qq
  oo=oo
  pp=mt
  
  
  
Outgoing: Note On on ch.'qq' with note:oo and velocity:pp

[ ] Translator 29.38: --------
Incoming: (none)
Outgoing: (none)

[ ] Translator 29.39: --------
Incoming: (none)
Outgoing: (none)

[ ] Translator 29.40: --------
Incoming: (none)
Outgoing: (none)

[ ] Translator 29.41: --------
Incoming: (none)
Outgoing: (none)

[ ] Translator 29.42: --------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[x] Preset 30: SZ to 1000 translation
 Default MIDI IN ports:   From DDJ
 Default MIDI OUT ports:  To Traktor

[ ] Translator 30.0: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 30.1: CC jogwheel
Options: stop,swallow
Incoming: Control Change on any channel set 'qq' to ch. with any CC# and 'oo' to CC# with any value and 'pp' to value
Rules:
  // THIS HAS NO GLOBAL VARIABLES
  
  // qq = qq
  // oo = oo
  // pp = pp
  
  if qq>4 then Goto "do_skip"
  
  if oo==34 then Goto "do_translation"
  if oo==35 then Goto "do_translation"
  if oo==31 then Goto "do_translation"
  if oo==33 then Goto "do_translation"
  if oo==38 then Goto "do_translation"
  Goto "do_skip"
  
  Label "do_skip"
  exit rules, skip Outgoing Action
  
  Label "do_translation"
  pp=pp-64
  pp=pp*3
  if pp>63 then pp=63
  if pp<-63 then pp=-63
  pp=pp+64
  
  Goto "end"
  
  
  Label "end"
Outgoing: Control Change on ch.'qq' with CC#:oo and value:pp

[x] Translator 30.2: CC sampler volume
Options: stop,swallow
Incoming: Control Change (14-bit) on any channel set 'qq' to ch. with any CC# and 'oo' to CC# with any value and 'pp' to value
Rules:
  // THIS HAS NO GLOBAL VARIABLES
  
  // qq = qq
  // oo = oo
  // pp = pp
  
  if qq!=6 then Goto "do_skip"
  
  if oo==29 then Goto "do_translation"
  Goto "do_skip"
  
  
  Label "do_skip"
  exit rules, skip Outgoing Action
  
  
  Label "do_translation"
  oo=3
  Goto "end"
  
  
  Label "end"
Outgoing: Control Change (14-bit) on ch.'qq' with CC#:oo and value:pp

[ ] Translator 30.3: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 30.4: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 30.5: PANEL (classic/parallel)
Options: swallow
Incoming: Note On on ch. 7 with note:120 (0x78) and velocity:127 (0x7F)
Rules:
  // swap classic/parallel
  if il==0 then rr=1
  if il>0 then rr=0
  il=rr
  
  
Outgoing: One-shot timer "deck_change": 0 ms delay

[x] Translator 30.6: CHANGE DECK
Options: swallow
Incoming: Note On on any channel set 'qq' to ch. with note:114 (0x72) and velocity:127 (0x7F)
Rules: 'il'
  // ignore high channels
  if qq>3 then exit rules, skip Outgoing Action
  
  //  "ii"/1 - active left deck  (1/3)
  //  "ij"/2 - active right deck (2/4)
  //  "il"/3 - 0 - Parallel / 1 - Classic / 2 - Disabled mode (0/1)
  //  "im"/4 - PC APP CONNECT TIMER (disables forced side because of auto-detect)
  
  
  //////// INIT CASES (not needed!)
  if ii==0 then ii=1
  if ij==0 then ii=2
  
  /// Handle cases
  if qq==0 then ii=1
  if qq==2 then ii=3
  
  if qq==1 then ij=2
  if qq==3 then ij=4
  Goto "end"
  
  
  ////// END
  Label "end"
  
Outgoing: One-shot timer "deck_change": 0 ms delay

[ ] Translator 30.7: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 30.8: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 30.9: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 30.10: PADS TRANSLATION
Options: stop,swallow
Incoming: MIDI rr oo pp
Rules:
  // rr = first byte
  // tt = note (9) / CC (b)
  // qq = channel
  // oo = note
  // pp = vel
  tt=rr&240
  tt=tt>>4
  qq=rr&15
  if tt!=9 then Goto "do_nothing"
  ///////////////////
  
  
  ////
  if qq<7 then Goto "do_nothing"
  if qq<11 then Goto "do_it"
  Goto "do_nothing"
  
  
  Label "do_it"
  // channel
  qq=qq-7
  qq=qq*2
  qq=qq+7
  
  
  /////////
  // which pad
  //mode = oo / 16
  //pad = oo % 16
  //shift = pad / 8
  //real_pad = pad % 8
  
  //new_pad = real_pad + mode * 16 + page * 8 +
  //new_qq = qq + shift
  //oo = new_pad
  
  //mode = oo / 16
  uu=oo/16
  //old_pad = oo % 16
  tt=oo%16
  //shift = pad / 8
  ss=tt/8
  //real_pad = pad % 8
  oo=tt%8
  
  // pad = mode * 16 + real_pad + page * 8
  
  // pad = mode * 16
  // pad = pad + real_pad
  // tmp = page * 8
  // pad = pad + tmp
  
  uu=uu*16
  oo=oo+uu
  xx=mh*8
  oo=oo+xx
  
  /// channel SHIFT
  qq=qq+ss
  Goto "end"
  
  
  Label "do_nothing"
  exit rules, skip Outgoing Action
  
  
  Label "end"
  exit rules, execute Outgoing Action
  
Outgoing: Note On on ch.'qq' with note:oo and velocity:pp

[ ] Translator 30.11: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 30.12: Ch1..4 TRANSLATIONS
Options: stop,swallow
Incoming: MIDI rr oo pp
Rules:
  // rr = first byte
  // tt = note (9) / CC (b)
  // qq = channel
  // oo = note
  // pp = vel
  tt=rr&240
  tt=tt>>4
  qq=rr&15
  if tt!=9 then Goto "do_nothing"
  ///////////////////
  
  
  if qq<4 then Goto "do_deck_channels"
  Goto "do_nothing"
  
  
  
  
  
  ///////////////////////
  Label "do_deck_channels"
  // init flag
  ss=-1
  
  // play pause
  if oo==11 then Goto "white_list"
  
  // jog touch
  //if oo==54 then Goto "do_swallow"
  
  // deck select -> memory
  if oo==114 then ss=61
  if oo==115 then ss=62
  
  // grid adjust -> key sync
  if oo==121 then ss=101
  if oo==100 then ss=28
  
  // grid slide -> key reset
  if oo==10 then ss=100
  if oo==101 then ss=31
  
  
  //   loop 1/2 -> shift_in  :  18/97 ->  10/13  (special)
  if oo==18 then ss=10
  if oo==97 then ss=10
  //   loop 2x  -> shift_out :  19/98 ->  13/13  (special)
  if oo==19 then ss=13
  if oo==98 then ss=13
  
  //   pad left arrow  -> search --: 36..43/1..8 -> 112/81
  if oo==36 then ss=112
  if oo==37 then ss=112
  if oo==38 then ss=112
  if oo==39 then ss=112
  if oo==40 then ss=112
  if oo==41 then ss=112
  if oo==42 then ss=112
  if oo==43 then ss=112
  
  if oo==1 then ss=81
  if oo==2 then ss=81
  if oo==3 then ss=81
  if oo==4 then ss=81
  if oo==5 then ss=81
  if oo==6 then ss=81
  if oo==7 then ss=81
  if oo==8 then ss=81
  
  //   pad right arrow -> search ++: 44..51/9+122..127+0 -> 113/83
  if oo==44 then ss=113
  if oo==45 then ss=113
  if oo==46 then ss=113
  if oo==47 then ss=113
  if oo==48 then ss=113
  if oo==49 then ss=113
  if oo==50 then ss=113
  if oo==51 then ss=113
  
  if oo==9 then ss=83
  if oo==122 then ss=83
  if oo==123 then ss=83
  if oo==124 then ss=83
  if oo==125 then ss=83
  if oo==126 then ss=83
  if oo==127 then ss=83
  if oo==0 then ss=83
  
  //   pad quantize -> deck quantize:  106/NONE -> 53/57
  if oo==106 then ss=53
  
  
  if ss==-1 then ss=oo
  
  Label "do_translation"
  oo=ss
  Goto "end"
  
  
  Label "white_list"
  // pass it
  mm=2
  Goto "end"
  
  
  Label "do_swallow"
  mm=3
  qq=16
  oo=0
  pp=0
  Goto "end"
  
  
  
  
  Label "do_nothing"
  exit rules, skip Outgoing Action
  
  Label "end"
  exit rules, execute Outgoing Action
Outgoing: Note On on ch.'qq' with note:oo and velocity:pp

[x] Translator 30.13: Ch7 TRANSLATIONS
Options: swallow
Incoming: MIDI rr oo pp
Rules:
  // rr = first byte
  // tt = note (9) / CC (b)
  // qq = channel
  // oo = note
  // pp = vel
  tt=rr&240
  tt=tt>>4
  qq=rr&15
  if tt!=9 then Goto "do_nothing"
  ///////////////////
  
  
  ////
  if qq==6 then Goto "do_it"
  Goto "end"
  
  
  Label "do_it"
  //  colorFX: 0..3 -> BLOCK
  //  colorFX: 8..11 -> BLOCK
  //
  //   noise:  4/12 -> 0/8
  //   cymbal: 5/13 -> 1/9
  //   siren:  6/14 -> 2/10
  //   horn:   7/15 -> 3/11
  
  
  // prepate flag
  ss=-1
  
  if oo<4 then Goto "do_swallow"
  if oo<8 then Goto "lower_by_4"
  if oo<12 then Goto "do_swallow"
  if oo<16 then Goto "lower_by_4"
  
  // preview player
  if oo==101 then Goto "do_preview_player"
  
  // load prepare -> view:       103/104 -> 122/104      (long=103)   (back = 101/102)
  if oo==103 then ss=122
  
  if ss==-1 then ss=oo
  Goto "do_translation"
  ////////////
  
  
  ///////////
  Label "do_preview_player"
  // ignore non DDJ-SZ case
  if mk!=2 then Goto "do_nothing"
  
  // ACCEPT release button
  if pp==0 then Goto "do_nothing"
  
  // ACCEPT if deck 4 fader is down
  if jr==0 then Goto "do_nothing"
  
  // else, BLOCK IT
  Goto "do_swallow"
  ///////////////
  
  
  
  
  ///////////////
  Label "lower_by_4"
  oo=oo-4
  Goto "do_translation"
  ///////////////
  
  
  
  ////////////
  Label "do_translation"
  oo=ss
  mm=2
  Goto "end"
  ///////////////
  
  
  
  Label "do_swallow"
  mm=3
  qq=16
  oo=0
  pp=0
  Goto "end"
  
  
  
  Label "do_nothing"
  exit rules, skip Outgoing Action
  
  Label "end"
  exit rules, execute Outgoing Action
Outgoing: Note On on ch.'qq' with note:oo and velocity:pp

[ ] Translator 30.14: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 30.15: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 30.16: ---------------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[x] Preset 31: 1000 to SZ translation
 Default MIDI IN ports:   From Traktor
 Default MIDI OUT ports:  To DDJ

[ ] Translator 31.0: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.1: CC jogwheel
Options: swallow
Incoming: Control Change on any channel set 'qq' to ch. with any CC# and 'oo' to CC# with any value and 'pp' to value
Rules:
  // THIS HAS NO GLOBAL VARIABLES
  
  // qq = qq
  // oo = oo
  // pp = pp
  
  if qq>4 then Goto "do_skip"
  
  if oo==34 then Goto "do_translation"
  if oo==35 then Goto "do_translation"
  if oo==31 then Goto "do_translation"
  if oo==33 then Goto "do_translation"
  if oo==38 then Goto "do_translation"
  Goto "do_skip"
  
  Label "do_skip"
  exit rules, skip Outgoing Action
  
  Label "do_translation"
  pp=pp-64
  pp=pp*3
  if pp>63 then pp=63
  if pp<-63 then pp=-63
  pp=pp+64
  
  Goto "end"
  
  
  Label "end"
Outgoing: Control Change on ch.'qq' with CC#:oo and value:pp

[ ] Translator 31.2: CC sampler volume
Options: swallow
Incoming: Control Change (14-bit) on any channel set 'qq' to ch. with any CC# and 'oo' to CC# with any value and 'pp' to value
Rules:
  // THIS HAS NO GLOBAL VARIABLES
  
  // qq = qq
  // oo = oo
  // pp = pp
  
  if qq!=6 then Goto "do_skip"
  
  if oo==29 then Goto "do_translation"
  Goto "do_skip"
  
  
  Label "do_skip"
  exit rules, skip Outgoing Action
  
  
  Label "do_translation"
  oo=3
  Goto "end"
  
  
  Label "end"
Outgoing: Control Change (14-bit) on ch.'qq' with CC#:oo and value:pp

[ ] Translator 31.3: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.4: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.5: PANEL (classic/parallel)
Incoming: Note On on ch. 7 with note:120 (0x78) and velocity:127 (0x7F)
Rules:
  // swap classic/parallel
  if il==0 then rr=1
  if il>0 then rr=0
  il=rr
  
  
Outgoing: One-shot timer "deck_change": 0 ms delay

[ ] Translator 31.6: CHANGE DECK
Options: swallow
Incoming: Note On on any channel set 'qq' to ch. with note:114 (0x72) and velocity:127 (0x7F)
Rules: 'il'
  // ignore high channels
  if qq>3 then exit rules, skip Outgoing Action
  
  //  "ii"/1 - active left deck  (1/3)
  //  "ij"/2 - active right deck (2/4)
  //  "il"/3 - 0 - Parallel / 1 - Classic / 2 - Disabled mode (0/1)
  //  "im"/4 - PC APP CONNECT TIMER (disables forced side because of auto-detect)
  
  
  //////// INIT CASES (not needed!)
  if ii==0 then ii=1
  if ij==0 then ii=2
  
  /// Handle cases
  if qq==0 then ii=1
  if qq==2 then ii=3
  
  if qq==1 then ij=2
  if qq==3 then ij=4
  Goto "end"
  
  
  ////// END
  Label "end"
  
Outgoing: One-shot timer "deck_change": 0 ms delay

[ ] Translator 31.7: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.8: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.9: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.10: PAD LEFT/RIGHT
Incoming: On timer "translator2"
Rules:
  // done bit?
  if mm>=2 then Goto "do_nothing"
  
  
  // update: this is now disabled
  mh=0
  Goto "end"
  
  
  /// input
  qq=mi
  oo=mj
  pp=ml
  
  
  if qq>3 then Goto "end"
  
  if oo<36 then Goto "end"
  if oo<=43 then Goto "left_no_shift"
  if oo<44 then Goto "end"
  if oo<=51 then Goto "right_no_shift"
  Goto "end"
  
  Label "left_no_shift"
  mh=0
  Goto "end_handled"
  
  Label "right_no_shift"
  mh=1
  Goto "end_handled"
  
  Label "end_handled"
  mm=2
  Goto "end"
  
  
  Label "end"
Outgoing: (none)

[x] Translator 31.11: PADS TRANSLATION
Options: stop,swallow
Incoming: MIDI rr oo pp
Rules:
  // rr = first byte
  // tt = note (9) / CC (b)
  //
  // qq = channel
  // oo = note
  // pp = vel
  tt=rr&240
  tt=tt>>4
  qq=rr&15
  if tt!=9 then Goto "do_nothing"
  ///////////////////
  
  
  
  ////
  if qq<7 then Goto "do_nothing"
  if qq<15 then Goto "do_it"
  Goto "do_nothing"
  
  
  Label "do_it"
  
  
  // shift
  ss=0
  
  // channel
  if qq==8 then ss=1
  if qq==10 then ss=1
  if qq==12 then ss=1
  if qq==14 then ss=1
  
  qq=qq-7
  qq=qq/2
  qq=qq+7
  
  
  /////////
  // which pad - DDJ-SZ input
  // ------------------------
  //
  //  mode = oo / 16
  //  pad = oo % 16
  //  shift = pad / 8
  //  real_pad = pad % 8
  //
  //  new_pad = real_pad + mode * 16 + page * 8 +
  //  new_qq = qq + shift
  //  oo = new_pad
  
  
  // Same, DDJ-1000 input
  // ---------------------
  //  mode = oo / 16
  //  pad = oo % 16
  //  page = pad / 8
  //  real_pad = pad % 8
  //  new_pad = real_pad + mode * 16 + shift*8
  
  
  //  mode = oo / 16
  uu=oo/16
  //  pad = oo % 16
  tt=oo%16
  //  page = pad / 8
  vv=tt/8
  //  real_pad = pad % 8
  oo=tt%8
  
  // ignore page 2 commands
  if vv==1 then Goto "do_swallow"
  
  //  new_pad = real_pad + mode * 16 + shift*8
  uu=uu*16
  oo=oo+uu
  xx=ss*8
  oo=oo+xx
  Goto "end"
  
  
  
  Label "do_swallow"
  qq=15
  oo=0
  pp=0
  Goto "end"
  
  
  
  Label "do_nothing"
  exit rules, skip Outgoing Action
  
  Label "end"
  exit rules, execute Outgoing Action
  
Outgoing: Note On on ch.'qq' with note:oo and velocity:pp

[ ] Translator 31.12: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 31.13: Ch1..4 TRANSLATIONS
Options: stop,swallow
Incoming: MIDI rr oo pp
Rules:
  // rr = first byte
  // tt = note (9) / CC (b)
  //
  // qq = channel
  // oo = note
  // pp = vel
  tt=rr&240
  tt=tt>>4
  qq=rr&15
  if tt!=9 then Goto "do_nothing"
  ///////////////////
  
  
  
  
  if qq<4 then Goto "do_deck_channels"
  Goto "do_nothing"
  
  
  Label "white_list"
  // pass it
  Goto "end"
  
  Label "do_swallow"
  qq=15
  oo=0
  pp=0
  //????
  Goto "end"
  
  
  
  
  ///////////////////////
  Label "do_deck_channels"
  // init flag
  ss=-1
  
  // play pause
  if oo==11 then ss=11
  
  // jog touch
  //if oo==54 then Goto "do_swallow"
  
  // deck select -> memory
  if oo==61 then Goto "do_swallow"
  if oo==62 then Goto "do_swallow"
  
  // grid adjust -> key sync
  if oo==101 then ss=121
  if oo==28 then ss=100
  
  // grid slide -> key reset
  if oo==100 then ss=10
  if oo==31 then ss=101
  
  
  //   loop 1/2 -> shift_in  :  18/97 ->  10/13  (special)
  if oo==10 then ss=18
  //if oo==97 then ss=10
  //   loop 2x  -> shift_out :  19/98 ->  13/13  (special)
  if oo==13 then ss=19
  //if oo==98 then ss=13
  
  //   pad left arrow  -> search --: 36..43/1..8 -> 112/81
  if oo==112 then Goto "do_swallow"
  if oo==81 then Goto "do_swallow"
  
  //   pad right arrow -> search ++: 44..51/9+122..127+0 -> 113/83
  if oo==113 then Goto "do_swallow"
  if oo==83 then Goto "do_swallow"
  
  
  //   pad quantize -> deck quantize:  106/NONE -> 53/57
  if oo==53 then Goto "do_swallow"
  
  if ss==-1 then ss=oo
  Goto "do_translation"
  
  Label "do_translation"
  oo=ss
  
  Goto "end"
  
  
  Label "do_nothing"
  exit rules, skip Outgoing Action
  
  Label "end"
  exit rules, execute Outgoing Action
Outgoing: Note On on ch.'qq' with note:oo and velocity:pp

[x] Translator 31.14: Ch7 TRANSLATIONS
Options: stop,swallow
Incoming: MIDI rr oo pp
Rules:
  // rr = first byte
  // tt = note (9) / CC (b)
  //
  // qq = channel
  // oo = note
  // pp = vel
  tt=rr&240
  tt=tt>>4
  qq=rr&15
  if tt!=9 then Goto "do_nothing"
  ///////////////////
  
  
  
  ////
  if qq==6 then Goto "do_it"
  Goto "do_nothing"
  
  
  Label "do_it"
  //  colorFX: 0..3 -> BLOCK
  //  colorFX: 8..11 -> BLOCK
  //
  //   noise:  4/12 -> 0/8
  //   cymbal: 5/13 -> 1/9
  //   siren:  6/14 -> 2/10
  //   horn:   7/15 -> 3/11
  
  
  // prepate flag
  ss=-1
  
  if oo<16 then Goto "do_swallow"
  
  // preview player
  // if oo==101 then Goto "do_preview_player"  /// same button
  
  // load prepare -> view:       103/104 -> 122/104      (long=103)   (back = 101/102)
  if oo==122 then ss=103
  
  if ss==-1 then Goto "do_nothing"
  Goto "do_translation"
  ////////////
  
  
  ///////////////
  Label "lower_by_4"
  oo=oo-4
  Goto "do_translation"
  ///////////////
  
  
  ////////////
  Label "do_translation"
  oo=ss
  mm=2
  
  me=qq
  mf=oo
  mg=pp
  Goto "end"
  ///////////////
  
  
  
  ///////////////
  Label "do_swallow"
  mm=3
  
  qq=15
  oo=0
  pp=0
  Goto "end"
  ///////////////
  
  
  ///////////////
  Label "do_nothing"
  exit rules, skip Outgoing Action
  
  
  Label "end"
  exit rules, execute Outgoing Action
Outgoing: Note On on ch.'qq' with note:oo and velocity:pp

[ ] Translator 31.15: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.16: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.17: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.18: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.19: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.20: FX button1
Incoming: Physical Keys: Ctrl(Q)
Rules:
  
  oo=ga
  if oo==0 then pp=127
  if oo==127 then pp=0
  ga=pp
  
  
  
Outgoing: Note On on ch. 6 with note:71 (0x47) and velocity:oo

[ ] Translator 31.21: pc app connect
Incoming: Physical Keys: Ctrl(W)
Rules:
  
  oo=ga
  if oo==0 then pp=127
  if oo==127 then pp=0
  ga=pp
  
  
  
Outgoing: Note On on ch. 12 with note:9 (0x09) and velocity:oo

[ ] Translator 31.22: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.23: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.24: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.25: ---------------
Incoming: (none)
Outgoing: (none)

[x] Translator 31.26: PC APP - note press
Options: swallow
Incoming: Note On on ch. 16 set 'qq' to ch. with any note and 'oo' to note with any velocity and 'pp' to velocity
Rules: qq=11
Outgoing: Note On on ch.'qq' with note:oo and velocity:pp

[x] Translator 31.27: PC APP - note release
Options: swallow
Incoming: Note Off on ch. 16 set 'qq' to ch. with any note and 'oo' to note with any velocity and 'pp' to velocity
Rules: qq=11
Outgoing: Note On on ch.'qq' with note:oo and velocity:pp

[x] Translator 31.28: PC APP - CCs
Options: swallow
Incoming: Control Change on ch. 16 set 'qq' to ch. with any CC# and 'oo' to CC# with any value and 'pp' to value
Rules: qq=11
Outgoing: Control Change on ch.'qq' with CC#:oo and value:pp

[ ] Translator 31.29: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.30: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.31: ---------------
Incoming: (none)
Outgoing: (none)

[ ] Translator 31.32: ---------------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 32: -----

_____________________________________________________________
[ ] Preset 33: -----

_____________________________________________________________
[ ] Preset 34: ------

_____________________________________________________________
[ ] Preset 35: -----

_____________________________________________________________
[ ] Preset 36: MFX Experiments

[ ] Translator 36.0: SYNC ON
Incoming: Physical Keys: Ctrl(Q)
Outgoing: Note On on ch. 2 with note:90 (0x5A) and velocity:0 (0x00)

[ ] Translator 36.1: SYNC OFF
Incoming: Physical Keys: Ctrl(W)
Outgoing: Note On on ch. 2 with note:90 (0x5A) and velocity:1 (0x01)

[ ] Translator 36.2: MASTER ON
Incoming: Physical Keys: Ctrl(E)
Outgoing: Note On on ch. 2 with note:89 (0x59) and velocity:127 (0x7F)

[ ] Translator 36.3: MASTER OFF
Incoming: Physical Keys: Ctrl(R)
Outgoing: Note On on ch. 2 with note:89 (0x59) and velocity:0 (0x00)

[ ] Translator 36.4: ----
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.5: show hide
Incoming: Physical Keys: Ctrl(T)
Outgoing: Note On on ch. 2 with note:93 (0x5D) and velocity:0 (0x00)

[ ] Translator 36.6: show hide
Incoming: Physical Keys: Ctrl(Y)
Outgoing: Note On on ch. 2 with note:93 (0x5D) and velocity:127 (0x7F)

[ ] Translator 36.7: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.8: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.9: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.10: ---------------------------------------
Incoming: (none)
Outgoing: (none)

[x] Translator 36.11: MFX1_NEXT
Incoming: Physical Keys: Ctrl(1)
Rules:
  // timers: (real)
  //  ga = which mfx to change (1..4)
  //  gb = action todo (-1 down / +1 up)
  //  gc = new value of that channel (comes from g1)
  //
  // static (fake array):
  //  g1..g4 = current chX value (1..9)
  // g0 = timer
  
  
  g0=50
  
  ga=1
  gb=1
Outgoing: One-shot timer "mfx_change": 0 ms delay

[x] Translator 36.12: MFX2_NEXT
Incoming: Physical Keys: Ctrl(2)
Rules:
  // timers: (real)
  //  ga = which mfx to change (1..4)
  //  gb = action todo (-1 down / +1 up)
  //  gc = new value of that channel (comes from g1)
  //
  // static (fake array):
  //  g1..g4 = current chX value (1..9)
  
  ga=2
  gb=1
Outgoing: One-shot timer "mfx_change": 0 ms delay

[x] Translator 36.13: MFX3_NEXT
Incoming: Physical Keys: Ctrl(3)
Rules:
  // timers: (real)
  //  ga = which mfx to change (1..4)
  //  gb = action todo (-1 down / +1 up)
  //  gc = new value of that channel (comes from g1)
  //
  // static (fake array):
  //  g1..g4 = current chX value (1..9)
  
  ga=3
  gb=1
Outgoing: One-shot timer "mfx_change": 0 ms delay

[x] Translator 36.14: MFX4_NEXT
Incoming: Physical Keys: Ctrl(4)
Rules:
  // timers: (real)
  //  ga = which mfx to change (1..4)
  //  gb = action todo (-1 down / +1 up)
  //  gc = new value of that channel (comes from g1)
  //
  // static (fake array):
  //  g1..g4 = current chX value (1..9)
  
  ga=4
  gb=1
Outgoing: One-shot timer "mfx_change": 0 ms delay

[ ] Translator 36.15: ------
Incoming: (none)
Outgoing: (none)

[x] Translator 36.16: DO CALCS
Incoming: On timer "mfx_change"
Rules:
  // timers: (real)
  //  ga = which mfx to change (1..4)
  //  gb = action todo (-1 down / +1 up)
  //  gc = new value of that channel (comes from g1)
  //
  // static (fake array):
  //  g1..g4 = current chX value (1..9)
  
  // get current value (fake array)
  if ga==1 then xx=g1
  if ga==2 then xx=g2
  if ga==3 then xx=g3
  if ga==4 then xx=g4
  
  xx=xx+gb
  if xx<1 then xx=9
  if xx>9 then xx=1
  
  if ga==1 then g1=xx
  if ga==2 then g2=xx
  if ga==3 then g3=xx
  if ga==4 then g4=xx
  
  gc=xx-1
  gc=gc*18
  
  
Outgoing: (none)

[x] Translator 36.17: CLICK MIXER TAB
Incoming: On timer "mfx_change"
Rules:
  // Click "mixer" tab
  oo=43
  pp=240-19
  
Outgoing: Left mouse button click (injected) at oo,pp on injected control, delay:0 millisec

[x] Translator 36.18: CLICK CHANNEL
Incoming: On timer "mfx_change"
Rules:
  // X= 323 .. 542
  // y= 160 ..  177
  
  if ga==1 then oo=339
  if ga==2 then oo=562
  if ga==3 then oo=339
  if ga==4 then oo=562
  
  if ga==1 then pp=132
  if ga==2 then pp=132
  if ga==3 then pp=132+18
  if ga==4 then pp=132+18
  
  
  // mouse error: 20px
  
Outgoing: Left mouse button click (injected) at oo,pp on injected control, delay:50 millisec

[x] Translator 36.19: CLICK FX
Incoming: On timer "mfx_change"
Rules:
  /// min, max, count mfx
  // X= 323 .. 542
  // y= 160 ..  177
  // options: U = 180..335
  
  
  if ga==1 then oo=339
  if ga==2 then oo=562
  if ga==3 then oo=339
  if ga==4 then oo=562
  
  if ga==1 then pp=132
  if ga==2 then pp=132
  if ga==3 then pp=132+18
  if ga==4 then pp=132+18
  
  
  
  
  // add final option
  pp=pp+gc
  //pp=pp-4
  pp=pp+4
  
  
  
  
  
  
Outgoing: Left mouse button click (injected) at oo,pp on injected control, delay:75 millisec

[ ] Translator 36.20: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.21: ------
Incoming: (none)
Outgoing: Mouse move to X=1543 Y=300 on primary display

[ ] Translator 36.22: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.23: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.24: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.25: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.26: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.27: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.28: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 36.29: ------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 37: MFX FULLY MANUAL

[x] Translator 37.0: CLICK OUTPUT ROUTING TAB
Incoming: Physical Keys: Ctrl(1)
Rules:
  
  oo=43
  pp=43
  
Outgoing: Left mouse button click (injected) at oo,pp on injected control

[x] Translator 37.1: CLICK MIXER TAB
Incoming: Physical Keys: Ctrl(2)
Rules:
  
  oo=43
  pp=203
Outgoing: Left mouse button click (injected) at oo,pp on injected control

[x] Translator 37.2: CLICK MFX1
Incoming: Physical Keys: Ctrl(3)
Rules:
  
  oo=339
  pp=132
  
Outgoing: Left mouse button click (injected) at oo,pp on injected control

[x] Translator 37.3: CLICK MFX2
Incoming: Physical Keys: Ctrl(4)
Rules:
  
  oo=339
  pp=132
  
  
  oo=562
  // oo=349
  // oo=339
  
  
  
  
  
  
  
Outgoing: Left mouse button click (injected) at oo,pp on injected control

[ ] Translator 37.4: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 37.5: CHOOSE 1
Incoming: Physical Keys: Ctrl(4)
Rules:
  
  oo=339
  pp=110
Outgoing: Left mouse button click (injected) at 339,132 on injected control

[ ] Translator 37.6: CHOOSE 9
Incoming: Physical Keys: Ctrl(5)
Rules:
  
  oo=339
  pp=140
  
  
  
  
Outgoing: Left mouse button click (injected) at 339,132 on injected control

[ ] Translator 37.7: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 37.8: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 37.9: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 37.10: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 37.11: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 37.12: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 37.13: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 37.14: ------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 38: MFX AUTO

[x] Translator 38.0: CLICK OUTPUT ROUTING TAB
Incoming: Physical Keys: Ctrl(1)
Rules:
  
  oo=43
  pp=43
  
Outgoing: Left mouse button click (injected) at oo,pp on injected control

[ ] Translator 38.1: ------
Incoming: (none)
Outgoing: (none)

[x] Translator 38.2: Trigger
Incoming: Physical Keys: Ctrl(2)
Rules:
  
  oo=43
  pp=203
Outgoing: One-shot timer "do_it": 0 ms delay

[x] Translator 38.3: CLICK MIXER TAB
Incoming: On timer "do_it"
Rules:
  
  oo=43
  pp=203
Outgoing: Left mouse button click (injected) at oo,pp on injected control

[x] Translator 38.4: CLICK MFX1
Incoming: On timer "do_it"
Rules:
  
  oo=339
  pp=132
  
Outgoing: Left mouse button click (injected) at oo,pp on injected control, delay:1000 millisec

[ ] Translator 38.5: CLICK MFX2
Incoming: Physical Keys: Ctrl(4)
Rules:
  
  oo=339
  pp=132
  
  
  oo=562
  // oo=349
  // oo=339
  
  
  
  
  
  
  
Outgoing: Left mouse button click (injected) at oo,pp on injected control

[ ] Translator 38.6: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 38.7: CHOOSE 1
Incoming: Physical Keys: Ctrl(4)
Rules:
  
  oo=339
  pp=110
Outgoing: Left mouse button click (injected) at 339,132 on injected control

[ ] Translator 38.8: CHOOSE 9
Incoming: Physical Keys: Ctrl(5)
Rules:
  
  oo=339
  pp=140
  
  
  
  
Outgoing: Left mouse button click (injected) at 339,132 on injected control

[ ] Translator 38.9: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 38.10: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 38.11: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 38.12: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 38.13: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 38.14: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 38.15: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 38.16: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 38.17: ------
Incoming: (none)
Outgoing: (none)

[ ] Translator 38.18: ------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 39: ------

_____________________________________________________________
[ ] Preset 40: DBG - CH1

[x] Translator 40.0: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.1: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.2: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.3: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.4: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.5: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.6: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.7: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.8: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.9: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.10: DEBUG - header
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Enable Processing

[x] Translator 40.11: DEBUG - header
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Enable Processing

[x] Translator 40.12: DEBUG - header
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Enable Processing

[x] Translator 40.13: DEBUG - header
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Enable Processing

[x] Translator 40.14: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.15: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.16: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 40.17: DEBUG - SEEK
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 1 with note:ha and velocity:na

[x] Translator 40.18: DEBUG - Seek
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:g1 and velocity:h1

[x] Translator 40.19: DEBUG - shifts
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:za and velocity:ga

[x] Translator 40.20: DEBUG - header
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Enable Processing

[x] Translator 40.21: DEBUG - CLOCK position
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:ha and velocity:ma

[x] Translator 40.22: DEBUG - CLOCK step
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:ia and velocity:ja

[x] Translator 40.23: DEBUG - LOCKS
Incoming: On timer "send_timestamp1"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:hs and velocity:he

[x] Translator 40.24: -------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 41: DBG - CH2

[x] Translator 41.0: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 41.1: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 41.2: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 41.3: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 41.4: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 41.5: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 41.6: DEBUG - header
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Enable Processing

[x] Translator 41.7: DEBUG - header
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Enable Processing

[x] Translator 41.8: DEBUG - header
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Enable Processing

[x] Translator 41.9: DEBUG - header
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Enable Processing

[x] Translator 41.10: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 41.11: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 41.12: -------
Incoming: (none)
Outgoing: (none)

[x] Translator 41.13: DEBUG - see calculated Seek
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:hb and velocity:nb

[x] Translator 41.14: DEBUG - see calculated Seek
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:g2 and velocity:h2

[x] Translator 41.15: debug - shifts
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:zb and velocity:gb

[x] Translator 41.16: DEBUG - header
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Enable Processing

[x] Translator 41.17: debug - CLOCK position
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:hb and velocity:mb

[x] Translator 41.18: debug - CLOCK step
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:ib and velocity:jb

[x] Translator 41.19: debug - LOCKS
Incoming: On timer "send_timestamp2"
Rules: if hw==0 then exit rules, skip Outgoing Action
Outgoing: Note On on ch. 16 with note:ht and velocity:hf

[x] Translator 41.20: -------
Incoming: (none)
Outgoing: (none)

_____________________________________________________________
[ ] Preset 42: DBG - from DDJ

[x] Translator 42.0: Debug - DDJ->TK NOTE ON
Incoming: Note On on any channel with any note and any velocity, on port From DDJ
Outgoing: (none)

[x] Translator 42.1: Debug - DDJ->TK NOTE OFF
Incoming: Note Off on any channel with any note and any velocity, on port From DDJ
Outgoing: (none)

[x] Translator 42.2: Debug - DDJ->TK CC
Incoming: Control Change on any channel with any CC# and any value, on port From DDJ
Outgoing: (none)

_____________________________________________________________
[ ] Preset 43: DBG - from TK

[x] Translator 43.0: Debug - TK->DDJ NOTE ON
Incoming: Note On on any channel with any note and any velocity
Outgoing: (none)

[x] Translator 43.1: Debug - TK->DDJ NOTE OFF
Incoming: Note Off on any channel with any note and any velocity
Outgoing: (none)

[x] Translator 43.2: Debug - TK->DDJ CC
Incoming: Control Change on any channel with any CC# and any value
Outgoing: (none)

_____________________________________________________________
[ ] Preset 44: New Preset

